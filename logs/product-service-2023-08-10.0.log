[2023-08-10 09:54:07,003] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service] & group[DEFAULT_GROUP]
[2023-08-10 09:54:07,015] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 09:54:07,024] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service-dev.yaml] & group[DEFAULT_GROUP]
[2023-08-10 09:54:07,025] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-product-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-product-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-product-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 09:54:07,054] [logId] [INFO] [main] ProductApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 09:54:08,185] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=f55b49c0-cb2b-3a10-a65c-e15027c45e4c
[2023-08-10 09:54:08,265] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:08,266] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:08,266] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:08,293] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:08,296] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:08,298] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:08,299] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$449/1810273055] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:08,300] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:08,302] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:08,303] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:08,305] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 09:54:08,370] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 09:54:08,377] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 09:54:08,389] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:54:08,389] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:54:08,882] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 09:54:09,065] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 09:54:09,102] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:54:09,103] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:54:09,356] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:54:09,758] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 09:54:10,766] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xd2484ea8, L:/192.168.43.8:60925 - R:/192.168.43.128:8091]
[2023-08-10 09:54:10,773] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 76 ms, version:1.6.1,role:TMROLE,channel:[id: 0xd2484ea8, L:/192.168.43.8:60925 - R:/192.168.43.128:8091]
[2023-08-10 09:54:10,774] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[product-service] txServiceGroup[product-tx-group]
[2023-08-10 09:54:10,804] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 09:54:10,805] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 09:54:10,816] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 09:54:10,816] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[product-service] txServiceGroup[product-tx-group]
[2023-08-10 09:54:10,816] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 09:54:11,262] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8030 (http)
[2023-08-10 09:54:11,271] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8030"]
[2023-08-10 09:54:11,272] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 09:54:11,272] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 09:54:11,465] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 09:54:11,466] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4395 ms
[2023-08-10 09:54:11,692] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 09:54:12,194] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 09:54:12,357] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:54:12,358] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/product
[2023-08-10 09:54:12,358] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/product', applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 09:54:12,367] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xa67ac9dc, L:/192.168.43.8:60945 - R:/192.168.43.128:8091]
[2023-08-10 09:54:12,367] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 6 ms, version:1.6.1,role:RMROLE,channel:[id: 0xa67ac9dc, L:/192.168.43.8:60945 - R:/192.168.43.128:8091]
[2023-08-10 09:54:14,564] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 09:54:17,229] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8030"]
[2023-08-10 09:54:17,239] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8030 (http) with context path ''
[2023-08-10 09:54:17,245] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:54:17,246] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:54:17,455] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP product-service 26.26.26.1:8030 register finished
[2023-08-10 09:54:18,235] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 09:54:18,252] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 09:54:18,270] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 09:54:18,455] [logId] [INFO] [main] ProductApplication[61] - Started ProductApplication in 17.158 seconds (JVM running for 18.056)
[2023-08-10 09:54:18,459] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 09:54:18,460] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service, group=DEFAULT_GROUP
[2023-08-10 09:54:18,460] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service.yaml, group=DEFAULT_GROUP
[2023-08-10 09:54:33,629] [logId] [INFO] [http-nio-8030-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 09:54:33,629] [logId] [INFO] [http-nio-8030-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 09:54:33,631] [logId] [INFO] [http-nio-8030-exec-1] DispatcherServlet[547] - Completed initialization in 1 ms
[2023-08-10 09:54:33,671] [logId] [INFO] [http-nio-8030-exec-1] LogUtil[75] - requestId：3d30cbeb10194a4cb1d0454a49edc30c
[2023-08-10 09:54:33,741] [3d30cbeb10194a4cb1d0454a49edc30c] [INFO] [http-nio-8030-exec-1] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 09:54:33"}
[2023-08-10 09:54:33,819] [3d30cbeb10194a4cb1d0454a49edc30c] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 09:54:33,825] [3d30cbeb10194a4cb1d0454a49edc30c] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 09:54:33,835] [3d30cbeb10194a4cb1d0454a49edc30c] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - <==      Total: 1
[2023-08-10 09:54:33,839] [3d30cbeb10194a4cb1d0454a49edc30c] [INFO] [http-nio-8030-exec-1] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 09:54:33"}
[2023-08-10 09:54:33,861] [3d30cbeb10194a4cb1d0454a49edc30c] [INFO] [Feh_Optimize_1] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 09:59:50,071] [logId] [INFO] [http-nio-8030-exec-2] LogUtil[75] - requestId：fecefe1996824f9ebd5fe7b6e9fce1f0
[2023-08-10 09:59:50,072] [fecefe1996824f9ebd5fe7b6e9fce1f0] [INFO] [http-nio-8030-exec-2] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 09:59:50"}
[2023-08-10 09:59:50,074] [fecefe1996824f9ebd5fe7b6e9fce1f0] [DEBUG] [http-nio-8030-exec-2] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 09:59:50,074] [fecefe1996824f9ebd5fe7b6e9fce1f0] [DEBUG] [http-nio-8030-exec-2] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 09:59:50,076] [fecefe1996824f9ebd5fe7b6e9fce1f0] [DEBUG] [http-nio-8030-exec-2] selectOne[143] - <==      Total: 1
[2023-08-10 09:59:50,076] [fecefe1996824f9ebd5fe7b6e9fce1f0] [INFO] [http-nio-8030-exec-2] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 09:59:50"}
[2023-08-10 09:59:50,076] [fecefe1996824f9ebd5fe7b6e9fce1f0] [INFO] [Feh_Optimize_2] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:24:49,863] [logId] [INFO] [http-nio-8030-exec-4] LogUtil[75] - requestId：b4b14460463e426bb246d63c9e75a210
[2023-08-10 10:24:49,863] [b4b14460463e426bb246d63c9e75a210] [INFO] [http-nio-8030-exec-4] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:24:49"}
[2023-08-10 10:24:49,867] [b4b14460463e426bb246d63c9e75a210] [DEBUG] [http-nio-8030-exec-4] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:24:49,867] [b4b14460463e426bb246d63c9e75a210] [DEBUG] [http-nio-8030-exec-4] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:24:49,868] [b4b14460463e426bb246d63c9e75a210] [DEBUG] [http-nio-8030-exec-4] selectOne[143] - <==      Total: 1
[2023-08-10 10:24:49,869] [b4b14460463e426bb246d63c9e75a210] [INFO] [http-nio-8030-exec-4] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 10:24:49"}
[2023-08-10 10:24:49,869] [b4b14460463e426bb246d63c9e75a210] [INFO] [Feh_Optimize_3] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:27:42,484] [logId] [INFO] [http-nio-8030-exec-6] LogUtil[75] - requestId：9311e6130ad14e39a179475f0b54a992
[2023-08-10 10:27:42,485] [9311e6130ad14e39a179475f0b54a992] [INFO] [http-nio-8030-exec-6] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:27:42"}
[2023-08-10 10:27:42,513] [9311e6130ad14e39a179475f0b54a992] [DEBUG] [http-nio-8030-exec-6] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:27:42,515] [9311e6130ad14e39a179475f0b54a992] [DEBUG] [http-nio-8030-exec-6] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:27:42,523] [9311e6130ad14e39a179475f0b54a992] [DEBUG] [http-nio-8030-exec-6] selectOne[143] - <==      Total: 1
[2023-08-10 10:27:42,527] [9311e6130ad14e39a179475f0b54a992] [INFO] [http-nio-8030-exec-6] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 10:27:42"}
[2023-08-10 10:27:42,554] [9311e6130ad14e39a179475f0b54a992] [INFO] [Feh_Optimize_4] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:32:26,192] [logId] [INFO] [http-nio-8030-exec-8] LogUtil[75] - requestId：d3babd1f9c2a43989acdefab160849e4
[2023-08-10 10:32:26,194] [d3babd1f9c2a43989acdefab160849e4] [INFO] [http-nio-8030-exec-8] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:32:26"}
[2023-08-10 10:32:26,201] [d3babd1f9c2a43989acdefab160849e4] [DEBUG] [http-nio-8030-exec-8] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:32:26,202] [d3babd1f9c2a43989acdefab160849e4] [DEBUG] [http-nio-8030-exec-8] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:32:26,217] [d3babd1f9c2a43989acdefab160849e4] [DEBUG] [http-nio-8030-exec-8] selectOne[143] - <==      Total: 1
[2023-08-10 10:32:26,224] [d3babd1f9c2a43989acdefab160849e4] [INFO] [http-nio-8030-exec-8] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 10:32:26"}
[2023-08-10 10:32:26,225] [d3babd1f9c2a43989acdefab160849e4] [INFO] [Feh_Optimize_5] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:34:08,489] [logId] [INFO] [http-nio-8030-exec-10] LogUtil[75] - requestId：ef4d260df3cf4066b2ae90fa6c788c9a
[2023-08-10 10:34:08,490] [ef4d260df3cf4066b2ae90fa6c788c9a] [INFO] [http-nio-8030-exec-10] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:34:08"}
[2023-08-10 10:34:08,508] [ef4d260df3cf4066b2ae90fa6c788c9a] [DEBUG] [http-nio-8030-exec-10] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:34:08,510] [ef4d260df3cf4066b2ae90fa6c788c9a] [DEBUG] [http-nio-8030-exec-10] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:34:08,520] [ef4d260df3cf4066b2ae90fa6c788c9a] [DEBUG] [http-nio-8030-exec-10] selectOne[143] - <==      Total: 1
[2023-08-10 10:34:08,523] [ef4d260df3cf4066b2ae90fa6c788c9a] [INFO] [http-nio-8030-exec-10] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 10:34:08"}
[2023-08-10 10:34:08,534] [ef4d260df3cf4066b2ae90fa6c788c9a] [INFO] [Feh_Optimize_6] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:38:59,798] [fecefe1996824f9ebd5fe7b6e9fce1f0] [INFO] [http-nio-8030-exec-2] LogUtil[75] - requestId：7c90c316988341c1bd28e563d3e7d0d1
[2023-08-10 10:38:59,798] [7c90c316988341c1bd28e563d3e7d0d1] [INFO] [http-nio-8030-exec-2] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:38:59"}
[2023-08-10 10:38:59,801] [7c90c316988341c1bd28e563d3e7d0d1] [DEBUG] [http-nio-8030-exec-2] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:38:59,802] [7c90c316988341c1bd28e563d3e7d0d1] [DEBUG] [http-nio-8030-exec-2] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:38:59,803] [7c90c316988341c1bd28e563d3e7d0d1] [DEBUG] [http-nio-8030-exec-2] selectOne[143] - <==      Total: 1
[2023-08-10 10:38:59,803] [7c90c316988341c1bd28e563d3e7d0d1] [INFO] [http-nio-8030-exec-2] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 10:38:59"}
[2023-08-10 10:38:59,803] [7c90c316988341c1bd28e563d3e7d0d1] [INFO] [Feh_Optimize_7] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:41:33,703] [b4b14460463e426bb246d63c9e75a210] [INFO] [http-nio-8030-exec-4] LogUtil[75] - requestId：cf817373135f4e32a4b4b17e8868a911
[2023-08-10 10:41:33,704] [cf817373135f4e32a4b4b17e8868a911] [INFO] [http-nio-8030-exec-4] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:41:33"}
[2023-08-10 10:41:33,709] [cf817373135f4e32a4b4b17e8868a911] [DEBUG] [http-nio-8030-exec-4] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:41:33,710] [cf817373135f4e32a4b4b17e8868a911] [DEBUG] [http-nio-8030-exec-4] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:41:33,714] [cf817373135f4e32a4b4b17e8868a911] [DEBUG] [http-nio-8030-exec-4] selectOne[143] - <==      Total: 1
[2023-08-10 10:41:33,716] [cf817373135f4e32a4b4b17e8868a911] [INFO] [http-nio-8030-exec-4] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 10:41:33"}
[2023-08-10 10:41:33,719] [cf817373135f4e32a4b4b17e8868a911] [INFO] [Feh_Optimize_8] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:43:17,446] [9311e6130ad14e39a179475f0b54a992] [INFO] [http-nio-8030-exec-6] LogUtil[75] - requestId：16a2c7d444d94dfdaff5ab53bc9d47c2
[2023-08-10 10:43:17,447] [16a2c7d444d94dfdaff5ab53bc9d47c2] [INFO] [http-nio-8030-exec-6] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:43:17"}
[2023-08-10 10:43:17,458] [16a2c7d444d94dfdaff5ab53bc9d47c2] [DEBUG] [http-nio-8030-exec-6] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:43:17,460] [16a2c7d444d94dfdaff5ab53bc9d47c2] [DEBUG] [http-nio-8030-exec-6] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:43:17,469] [16a2c7d444d94dfdaff5ab53bc9d47c2] [DEBUG] [http-nio-8030-exec-6] selectOne[143] - <==      Total: 1
[2023-08-10 10:43:17,473] [16a2c7d444d94dfdaff5ab53bc9d47c2] [INFO] [http-nio-8030-exec-6] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 10:43:17"}
[2023-08-10 10:43:17,478] [16a2c7d444d94dfdaff5ab53bc9d47c2] [INFO] [Feh_Optimize_9] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:44:59,701] [d3babd1f9c2a43989acdefab160849e4] [INFO] [http-nio-8030-exec-8] LogUtil[75] - requestId：de2a69e1c43247a7b69301f8f2d2d0a3
[2023-08-10 10:44:59,702] [de2a69e1c43247a7b69301f8f2d2d0a3] [INFO] [http-nio-8030-exec-8] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:44:59"}
[2023-08-10 10:44:59,706] [de2a69e1c43247a7b69301f8f2d2d0a3] [DEBUG] [http-nio-8030-exec-8] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:44:59,707] [de2a69e1c43247a7b69301f8f2d2d0a3] [DEBUG] [http-nio-8030-exec-8] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:44:59,712] [de2a69e1c43247a7b69301f8f2d2d0a3] [DEBUG] [http-nio-8030-exec-8] selectOne[143] - <==      Total: 1
[2023-08-10 10:44:59,713] [de2a69e1c43247a7b69301f8f2d2d0a3] [INFO] [http-nio-8030-exec-8] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 10:44:59"}
[2023-08-10 10:44:59,714] [de2a69e1c43247a7b69301f8f2d2d0a3] [INFO] [Feh_Optimize_10] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:56:27,974] [ef4d260df3cf4066b2ae90fa6c788c9a] [INFO] [http-nio-8030-exec-10] LogUtil[75] - requestId：3f82974eb1444877bda6080047d67712
[2023-08-10 10:56:27,974] [3f82974eb1444877bda6080047d67712] [INFO] [http-nio-8030-exec-10] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:56:27"}
[2023-08-10 10:56:27,977] [3f82974eb1444877bda6080047d67712] [DEBUG] [http-nio-8030-exec-10] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:56:27,978] [3f82974eb1444877bda6080047d67712] [DEBUG] [http-nio-8030-exec-10] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:56:27,980] [3f82974eb1444877bda6080047d67712] [DEBUG] [http-nio-8030-exec-10] selectOne[143] - <==      Total: 1
[2023-08-10 10:56:27,981] [3f82974eb1444877bda6080047d67712] [INFO] [http-nio-8030-exec-10] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 10:56:27"}
[2023-08-10 10:56:27,982] [3f82974eb1444877bda6080047d67712] [INFO] [Feh_Optimize_11] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:57:58,104] [7c90c316988341c1bd28e563d3e7d0d1] [INFO] [http-nio-8030-exec-2] LogUtil[75] - requestId：f388a7b04c3649aea8b3fc22369de8be
[2023-08-10 10:57:58,104] [f388a7b04c3649aea8b3fc22369de8be] [INFO] [http-nio-8030-exec-2] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:57:58"}
[2023-08-10 10:57:58,106] [f388a7b04c3649aea8b3fc22369de8be] [DEBUG] [http-nio-8030-exec-2] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:57:58,106] [f388a7b04c3649aea8b3fc22369de8be] [DEBUG] [http-nio-8030-exec-2] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:57:58,107] [f388a7b04c3649aea8b3fc22369de8be] [DEBUG] [http-nio-8030-exec-2] selectOne[143] - <==      Total: 1
[2023-08-10 10:57:58,108] [f388a7b04c3649aea8b3fc22369de8be] [INFO] [http-nio-8030-exec-2] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 10:57:58"}
[2023-08-10 10:57:58,108] [f388a7b04c3649aea8b3fc22369de8be] [INFO] [Feh_Optimize_12] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 11:06:00,145] [cf817373135f4e32a4b4b17e8868a911] [INFO] [http-nio-8030-exec-4] LogUtil[75] - requestId：83dd35d457dd491ea2b0ec6f2813ea0c
[2023-08-10 11:06:00,146] [83dd35d457dd491ea2b0ec6f2813ea0c] [INFO] [http-nio-8030-exec-4] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 11:06:00"}
[2023-08-10 11:06:00,155] [83dd35d457dd491ea2b0ec6f2813ea0c] [DEBUG] [http-nio-8030-exec-4] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 11:06:00,156] [83dd35d457dd491ea2b0ec6f2813ea0c] [DEBUG] [http-nio-8030-exec-4] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 11:06:00,171] [83dd35d457dd491ea2b0ec6f2813ea0c] [DEBUG] [http-nio-8030-exec-4] selectOne[143] - <==      Total: 1
[2023-08-10 11:06:00,176] [83dd35d457dd491ea2b0ec6f2813ea0c] [INFO] [http-nio-8030-exec-4] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 11:06:00"}
[2023-08-10 11:06:00,194] [83dd35d457dd491ea2b0ec6f2813ea0c] [INFO] [Feh_Optimize_13] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 11:07:01,175] [16a2c7d444d94dfdaff5ab53bc9d47c2] [INFO] [http-nio-8030-exec-6] LogUtil[75] - requestId：234fabfaea7b436995932d52367bd3b8
[2023-08-10 11:07:01,176] [234fabfaea7b436995932d52367bd3b8] [INFO] [http-nio-8030-exec-6] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 11:07:01"}
[2023-08-10 11:07:01,220] [234fabfaea7b436995932d52367bd3b8] [DEBUG] [http-nio-8030-exec-6] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 11:07:01,222] [234fabfaea7b436995932d52367bd3b8] [DEBUG] [http-nio-8030-exec-6] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 11:07:01,232] [234fabfaea7b436995932d52367bd3b8] [DEBUG] [http-nio-8030-exec-6] selectOne[143] - <==      Total: 1
[2023-08-10 11:07:01,235] [234fabfaea7b436995932d52367bd3b8] [INFO] [http-nio-8030-exec-6] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 11:07:01"}
[2023-08-10 11:07:01,240] [234fabfaea7b436995932d52367bd3b8] [INFO] [Feh_Optimize_14] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 11:18:09,799] [de2a69e1c43247a7b69301f8f2d2d0a3] [INFO] [http-nio-8030-exec-8] LogUtil[75] - requestId：592e57bf23444d919fbeaf7142bb517a
[2023-08-10 11:18:09,801] [592e57bf23444d919fbeaf7142bb517a] [INFO] [http-nio-8030-exec-8] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 11:18:09"}
[2023-08-10 11:18:09,807] [592e57bf23444d919fbeaf7142bb517a] [DEBUG] [http-nio-8030-exec-8] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 11:18:09,808] [592e57bf23444d919fbeaf7142bb517a] [DEBUG] [http-nio-8030-exec-8] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 11:18:09,812] [592e57bf23444d919fbeaf7142bb517a] [DEBUG] [http-nio-8030-exec-8] selectOne[143] - <==      Total: 1
[2023-08-10 11:18:09,814] [592e57bf23444d919fbeaf7142bb517a] [INFO] [http-nio-8030-exec-8] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 11:18:09"}
[2023-08-10 11:18:09,818] [592e57bf23444d919fbeaf7142bb517a] [INFO] [Feh_Optimize_15] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 11:19:55,637] [3f82974eb1444877bda6080047d67712] [INFO] [http-nio-8030-exec-10] LogUtil[75] - requestId：820d7e3a0c994c749268aa9c59e2b2c3
[2023-08-10 11:19:55,638] [820d7e3a0c994c749268aa9c59e2b2c3] [INFO] [http-nio-8030-exec-10] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 11:19:55"}
[2023-08-10 11:19:55,644] [820d7e3a0c994c749268aa9c59e2b2c3] [DEBUG] [http-nio-8030-exec-10] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 11:19:55,646] [820d7e3a0c994c749268aa9c59e2b2c3] [DEBUG] [http-nio-8030-exec-10] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 11:19:55,659] [820d7e3a0c994c749268aa9c59e2b2c3] [DEBUG] [http-nio-8030-exec-10] selectOne[143] - <==      Total: 1
[2023-08-10 11:19:55,667] [820d7e3a0c994c749268aa9c59e2b2c3] [INFO] [http-nio-8030-exec-10] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 11:19:55"}
[2023-08-10 11:19:55,673] [820d7e3a0c994c749268aa9c59e2b2c3] [INFO] [Feh_Optimize_16] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 11:25:55,970] [f388a7b04c3649aea8b3fc22369de8be] [INFO] [http-nio-8030-exec-2] LogUtil[75] - requestId：6d385980698b494d8e962e5d8d1a30ee
[2023-08-10 11:25:55,971] [6d385980698b494d8e962e5d8d1a30ee] [INFO] [http-nio-8030-exec-2] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 11:25:55"}
[2023-08-10 11:25:55,972] [6d385980698b494d8e962e5d8d1a30ee] [DEBUG] [http-nio-8030-exec-2] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 11:25:55,973] [6d385980698b494d8e962e5d8d1a30ee] [DEBUG] [http-nio-8030-exec-2] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 11:25:55,974] [6d385980698b494d8e962e5d8d1a30ee] [DEBUG] [http-nio-8030-exec-2] selectOne[143] - <==      Total: 1
[2023-08-10 11:25:55,974] [6d385980698b494d8e962e5d8d1a30ee] [INFO] [http-nio-8030-exec-2] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 11:25:55"}
[2023-08-10 11:25:55,975] [6d385980698b494d8e962e5d8d1a30ee] [INFO] [Feh_Optimize_17] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 11:32:10,351] [83dd35d457dd491ea2b0ec6f2813ea0c] [INFO] [http-nio-8030-exec-4] LogUtil[75] - requestId：f5d73a0b5b344c089eeb4d76358e4516
[2023-08-10 11:32:10,351] [f5d73a0b5b344c089eeb4d76358e4516] [INFO] [http-nio-8030-exec-4] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 11:32:10"}
[2023-08-10 11:32:10,355] [f5d73a0b5b344c089eeb4d76358e4516] [DEBUG] [http-nio-8030-exec-4] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 11:32:10,356] [f5d73a0b5b344c089eeb4d76358e4516] [DEBUG] [http-nio-8030-exec-4] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 11:32:10,358] [f5d73a0b5b344c089eeb4d76358e4516] [DEBUG] [http-nio-8030-exec-4] selectOne[143] - <==      Total: 1
[2023-08-10 11:32:10,359] [f5d73a0b5b344c089eeb4d76358e4516] [INFO] [http-nio-8030-exec-4] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 11:32:10"}
[2023-08-10 11:32:10,362] [f5d73a0b5b344c089eeb4d76358e4516] [INFO] [Feh_Optimize_18] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 12:33:23,166] [logId] [ERROR] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[476] - 0318
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 12:33:23,166] [logId] [ERROR] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[476] - 0318
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 12:33:23,167] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xa67ac9dc, L:/192.168.43.8:60945 - R:/192.168.43.128:8091]
[2023-08-10 12:33:23,167] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xd2484ea8, L:/192.168.43.8:60925 - R:/192.168.43.128:8091]
[2023-08-10 12:33:23,206] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[480] - remove exception rm channel:[id: 0xa67ac9dc, L:/192.168.43.8:60945 - R:/192.168.43.128:8091]
[2023-08-10 12:33:23,206] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[480] - remove exception rm channel:[id: 0xd2484ea8, L:/192.168.43.8:60925 - R:/192.168.43.128:8091]
[2023-08-10 12:33:23,206] [logId] [WARN] [NettyClientSelector_RMROLE_1_1] DefaultChannelPipeline[1152] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 12:33:23,206] [logId] [WARN] [NettyClientSelector_TMROLE_1_1] DefaultChannelPipeline[1152] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 12:33:23,208] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xd2484ea8, L:/192.168.43.8:60925 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,208] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xa67ac9dc, L:/192.168.43.8:60945 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,208] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xd2484ea8, L:/192.168.43.8:60925 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,208] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xa67ac9dc, L:/192.168.43.8:60945 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,208] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xd2484ea8, L:/192.168.43.8:60925 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,208] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xa67ac9dc, L:/192.168.43.8:60945 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,208] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd2484ea8, L:/192.168.43.8:60925 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 12:33:23,208] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa67ac9dc, L:/192.168.43.8:60945 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 12:33:23,209] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa67ac9dc, L:/192.168.43.8:60945 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 12:33:23,209] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd2484ea8, L:/192.168.43.8:60925 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:31:48,577] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:48,578] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 13:31:50,355] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:50,355] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/product
[2023-08-10 13:31:50,355] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xa67ac9dc, L:/192.168.43.8:60945 ! R:/192.168.43.128:8091]
[2023-08-10 13:31:50,358] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xa67ac9dc, L:/192.168.43.8:60945 ! R:/192.168.43.128:8091]
[2023-08-10 13:31:50,359] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/product', applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 13:31:58,585] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xbdaad8fe]) will closed
[2023-08-10 13:31:58,585] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /192.168.43.128:8091
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	... 2 common frames omitted
[2023-08-10 13:31:58,586] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:58,586] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:58,587] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 13:32:00,365] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xc01d5783]) will closed
[2023-08-10 13:32:00,365] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
[2023-08-10 13:32:00,365] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:00,365] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:00,365] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/product
[2023-08-10 13:32:00,365] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/product', applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 13:32:03,599] [logId] [ERROR] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[476] - 0318
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:05,375] [logId] [ERROR] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[476] - 0318
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:28,599] [logId] [ERROR] [timeoutChecker_1_1] AbstractNettyRemoting[203] - wait response error:null ,cost: 30009 ms,ip:/192.168.43.128:8091,request:RegisterTMRequest{applicationId='product-service', transactionServiceGroup='product-tx-group'}
[2023-08-10 13:32:28,601] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: register TMROLE error, errMsg:null ,cost: 30009 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:28,602] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:register TMROLE error, errMsg:null ,cost: 30009 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register TMROLE error, errMsg:null ,cost: 30009 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:28,603] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[480] - remove exception rm channel:[id: 0x9d9ee409, L:/26.26.26.1:60775 - R:/192.168.43.128:8091]
[2023-08-10 13:32:28,603] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:28,603] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 13:32:28,604] [logId] [WARN] [NettyClientSelector_TMROLE_1_1] DefaultChannelPipeline[1152] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:28,605] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9d9ee409, L:/26.26.26.1:60775 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:28,605] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x9d9ee409, L:/26.26.26.1:60775 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:30,376] [logId] [ERROR] [timeoutChecker_2_1] AbstractNettyRemoting[203] - wait response error:null ,cost: 30009 ms,ip:/192.168.43.128:8091,request:RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/product', applicationId='product-service', transactionServiceGroup='product-tx-group'}
[2023-08-10 13:32:30,376] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: register RMROLE error, errMsg:null ,cost: 30009 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:30,376] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[480] - remove exception rm channel:[id: 0xed48e784, L:/26.26.26.1:60886 - R:/192.168.43.128:8091]
[2023-08-10 13:32:30,376] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:register RMROLE error, errMsg:null ,cost: 30009 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register RMROLE error, errMsg:null ,cost: 30009 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:30,377] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:30,377] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/product
[2023-08-10 13:32:30,377] [logId] [WARN] [NettyClientSelector_RMROLE_1_1] DefaultChannelPipeline[1152] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:30,377] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xed48e784, L:/26.26.26.1:60886 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:30,377] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xed48e784, L:/26.26.26.1:60886 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:30,377] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xed48e784, L:/26.26.26.1:60886 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:30,377] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xed48e784, L:/26.26.26.1:60886 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:30,377] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xed48e784, L:/26.26.26.1:60886 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:30,377] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xed48e784, L:/26.26.26.1:60886 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:30,377] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xed48e784, L:/26.26.26.1:60886 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:35,070] [logId] [WARN] [timeoutChecker_2_1] NettyClientChannelManager[284] - channel null is not active after long wait, close it.
[2023-08-10 13:32:35,070] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:35,070] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/product
[2023-08-10 13:32:35,070] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/product', applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 13:32:35,074] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xa110654d, L:/192.168.43.8:61794 - R:/192.168.43.128:8091]
[2023-08-10 13:32:35,074] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[81] - register success, cost 3 ms, version:1.6.1,role:RMROLE,channel:[id: 0xa110654d, L:/192.168.43.8:61794 - R:/192.168.43.128:8091]
[2023-08-10 13:32:38,613] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
[2023-08-10 13:32:38,613] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x9d9ee409, L:/26.26.26.1:60775 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:38,613] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:38,613] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x9d9ee409, L:/26.26.26.1:60775 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:38,614] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:38,614] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9d9ee409, L:/26.26.26.1:60775 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:38,614] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9d9ee409, L:/26.26.26.1:60775 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:38,614] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 13:32:38,618] [logId] [INFO] [timeoutChecker_1_1] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x3cb1a2d5, L:/192.168.43.8:61802 - R:/192.168.43.128:8091]
[2023-08-10 13:32:38,619] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:TMROLE,channel:[id: 0x3cb1a2d5, L:/192.168.43.8:61802 - R:/192.168.43.128:8091]
[2023-08-10 13:53:19,419] [234fabfaea7b436995932d52367bd3b8] [INFO] [http-nio-8030-exec-6] LogUtil[75] - requestId：2fa5d3e647414ae79066abfc8d924df7
[2023-08-10 13:53:19,419] [2fa5d3e647414ae79066abfc8d924df7] [INFO] [http-nio-8030-exec-6] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 13:53:19"}
[2023-08-10 13:53:19,421] [2fa5d3e647414ae79066abfc8d924df7] [DEBUG] [http-nio-8030-exec-6] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 13:53:19,421] [2fa5d3e647414ae79066abfc8d924df7] [DEBUG] [http-nio-8030-exec-6] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 13:53:19,423] [2fa5d3e647414ae79066abfc8d924df7] [DEBUG] [http-nio-8030-exec-6] selectOne[143] - <==      Total: 1
[2023-08-10 13:53:19,423] [2fa5d3e647414ae79066abfc8d924df7] [INFO] [http-nio-8030-exec-6] LogUtil[64] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 13:53:19"}
[2023-08-10 13:53:19,424] [2fa5d3e647414ae79066abfc8d924df7] [INFO] [Feh_Optimize_19] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 13:54:00,775] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 13:54:00,775] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 13:54:00,776] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 13:54:00,776] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 13:54:01,243] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 13:54:01,246] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 13:54:01,251] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 13:54:01,252] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 13:54:01,253] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xe60e6bea, L:0.0.0.0/0.0.0.0:61801 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,253] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xe60e6bea, L:0.0.0.0/0.0.0.0:61801 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,253] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xe60e6bea, L:0.0.0.0/0.0.0.0:61801 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,253] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe60e6bea, L:0.0.0.0/0.0.0.0:61801 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,254] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe60e6bea, L:0.0.0.0/0.0.0.0:61801 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,254] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x3cb1a2d5, L:/192.168.43.8:61802 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,254] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x3cb1a2d5, L:/192.168.43.8:61802 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,254] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x3cb1a2d5, L:/192.168.43.8:61802 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,254] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x3cb1a2d5, L:/192.168.43.8:61802 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,254] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3cb1a2d5, L:/192.168.43.8:61802 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,254] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3cb1a2d5, L:/192.168.43.8:61802 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,254] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xa110654d, L:/192.168.43.8:61794 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,254] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xa110654d, L:/192.168.43.8:61794 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,254] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xa110654d, L:/192.168.43.8:61794 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,254] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xa110654d, L:/192.168.43.8:61794 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,254] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa110654d, L:/192.168.43.8:61794 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,254] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa110654d, L:/192.168.43.8:61794 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:09,603] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service] & group[DEFAULT_GROUP]
[2023-08-10 13:54:09,610] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 13:54:09,615] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service-dev.yaml] & group[DEFAULT_GROUP]
[2023-08-10 13:54:09,616] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-product-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-product-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-product-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 13:54:09,641] [logId] [INFO] [main] ProductApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 13:54:10,365] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=f55b49c0-cb2b-3a10-a65c-e15027c45e4c
[2023-08-10 13:54:10,414] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:10,414] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:10,414] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:10,437] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:10,440] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:10,442] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:10,443] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$449/60055669] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:10,444] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:10,447] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:10,448] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:10,450] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 13:54:10,497] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 13:54:10,502] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 13:54:10,508] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:54:10,508] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:54:10,929] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 13:54:11,068] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:54:11,088] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:54:11,089] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:54:11,320] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:54:12,595] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 13:54:13,735] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x7266a6c9, L:/192.168.43.8:64716 - R:/192.168.43.128:8091]
[2023-08-10 13:54:13,740] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 51 ms, version:1.6.1,role:TMROLE,channel:[id: 0x7266a6c9, L:/192.168.43.8:64716 - R:/192.168.43.128:8091]
[2023-08-10 13:54:13,741] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[product-service] txServiceGroup[product-tx-group]
[2023-08-10 13:54:13,774] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 13:54:13,775] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 13:54:13,779] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:54:13,779] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[product-service] txServiceGroup[product-tx-group]
[2023-08-10 13:54:13,779] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 13:54:14,084] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8030 (http)
[2023-08-10 13:54:14,091] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8030"]
[2023-08-10 13:54:14,091] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 13:54:14,091] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 13:54:14,205] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 13:54:14,206] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4551 ms
[2023-08-10 13:54:14,347] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 13:54:14,673] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 13:54:14,783] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:54:14,783] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/product
[2023-08-10 13:54:14,784] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/product', applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 13:54:14,791] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x6ff472ba, L:/192.168.43.8:64725 - R:/192.168.43.128:8091]
[2023-08-10 13:54:14,791] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 5 ms, version:1.6.1,role:RMROLE,channel:[id: 0x6ff472ba, L:/192.168.43.8:64725 - R:/192.168.43.128:8091]
[2023-08-10 13:54:16,056] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 13:54:19,695] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8030"]
[2023-08-10 13:54:19,703] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8030 (http) with context path ''
[2023-08-10 13:54:19,705] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:54:19,705] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:54:19,891] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP product-service 26.26.26.1:8030 register finished
[2023-08-10 13:54:20,442] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 13:54:20,455] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 13:54:20,469] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 13:54:20,577] [logId] [INFO] [main] ProductApplication[61] - Started ProductApplication in 15.89 seconds (JVM running for 16.737)
[2023-08-10 13:54:20,579] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 13:54:20,580] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service, group=DEFAULT_GROUP
[2023-08-10 13:54:20,581] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service.yaml, group=DEFAULT_GROUP
[2023-08-10 13:57:18,416] [logId] [WARN] [Thread-13] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 13:57:18,416] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 13:57:18,417] [logId] [WARN] [Thread-13] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 13:57:18,417] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 13:57:18,855] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 13:57:18,860] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 13:57:18,866] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 13:57:18,869] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 13:57:18,871] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x7266a6c9, L:/192.168.43.8:64716 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,871] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x7266a6c9, L:/192.168.43.8:64716 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,872] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x7266a6c9, L:/192.168.43.8:64716 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,872] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x7266a6c9, L:/192.168.43.8:64716 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,872] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x6ff472ba, L:/192.168.43.8:64725 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,872] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x6ff472ba, L:/192.168.43.8:64725 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,872] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7266a6c9, L:/192.168.43.8:64716 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:57:18,873] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x6ff472ba, L:/192.168.43.8:64725 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,873] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7266a6c9, L:/192.168.43.8:64716 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:57:18,873] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x6ff472ba, L:/192.168.43.8:64725 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,873] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x6ff472ba, L:/192.168.43.8:64725 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:57:18,874] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x6ff472ba, L:/192.168.43.8:64725 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:57:28,497] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service] & group[DEFAULT_GROUP]
[2023-08-10 13:57:28,504] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 13:57:28,510] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service-dev.yaml] & group[DEFAULT_GROUP]
[2023-08-10 13:57:28,510] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-product-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-product-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-product-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 13:57:28,538] [logId] [INFO] [main] ProductApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 13:57:29,374] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=f55b49c0-cb2b-3a10-a65c-e15027c45e4c
[2023-08-10 13:57:29,420] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:29,420] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:29,420] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:29,436] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:29,439] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:29,441] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:29,441] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$449/1053719038] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:29,442] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:29,445] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:29,447] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:29,449] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 13:57:29,494] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 13:57:29,499] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 13:57:29,505] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:57:29,505] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:57:29,877] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 13:57:30,010] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:57:30,043] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:57:30,044] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:57:30,258] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:57:30,789] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 13:57:32,726] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x3fa0e38a, L:/192.168.43.8:65109 - R:/192.168.43.128:8091]
[2023-08-10 13:57:32,730] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 48 ms, version:1.6.1,role:TMROLE,channel:[id: 0x3fa0e38a, L:/192.168.43.8:65109 - R:/192.168.43.128:8091]
[2023-08-10 13:57:32,730] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[product-service] txServiceGroup[product-tx-group]
[2023-08-10 13:57:32,751] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 13:57:32,752] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 13:57:32,758] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:57:32,758] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[product-service] txServiceGroup[product-tx-group]
[2023-08-10 13:57:32,758] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 13:57:33,092] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8030 (http)
[2023-08-10 13:57:33,098] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8030"]
[2023-08-10 13:57:33,098] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 13:57:33,098] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 13:57:33,206] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 13:57:33,206] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4653 ms
[2023-08-10 13:57:33,343] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 13:57:33,658] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 13:57:33,767] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:57:33,767] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/product
[2023-08-10 13:57:33,768] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/product', applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 13:57:33,776] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x03cbcf06, L:/192.168.43.8:65118 - R:/192.168.43.128:8091]
[2023-08-10 13:57:33,776] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 5 ms, version:1.6.1,role:RMROLE,channel:[id: 0x03cbcf06, L:/192.168.43.8:65118 - R:/192.168.43.128:8091]
[2023-08-10 13:57:35,072] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 13:57:38,789] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8030"]
[2023-08-10 13:57:38,800] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8030 (http) with context path ''
[2023-08-10 13:57:38,804] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:57:38,805] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:57:39,008] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP product-service 26.26.26.1:8030 register finished
[2023-08-10 13:57:40,192] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 13:57:40,202] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 13:57:40,216] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 13:57:40,327] [logId] [INFO] [main] ProductApplication[61] - Started ProductApplication in 17.628 seconds (JVM running for 18.603)
[2023-08-10 13:57:40,330] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 13:57:40,331] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service, group=DEFAULT_GROUP
[2023-08-10 13:57:40,331] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service.yaml, group=DEFAULT_GROUP
[2023-08-10 13:59:44,688] [logId] [INFO] [http-nio-8030-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 13:59:44,689] [logId] [INFO] [http-nio-8030-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 13:59:44,690] [logId] [INFO] [http-nio-8030-exec-1] DispatcherServlet[547] - Completed initialization in 1 ms
[2023-08-10 13:59:44,717] [logId] [INFO] [http-nio-8030-exec-1] LogUtil[67] - requestId：fb8d12aba52a4fd3ae775c763d31f59b
[2023-08-10 13:59:44,761] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8030-exec-1] LogUtil[76] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 13:59:44"}
[2023-08-10 13:59:44,812] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 13:59:44,817] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 13:59:44,824] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - <==      Total: 1
[2023-08-10 13:59:44,828] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8030-exec-1] LogUtil[54] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 13:59:44"}
[2023-08-10 13:59:44,837] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [Feh_Optimize_1] LogUtil[285] - 日志信息：{"className":"com.sakura.product.controller.ProductController","code":200,"ip":"26.26.26.1","message":"操作成功","methodName":"getUnitPrice","module":"product","name":"获取商品单价","param":"null","path":"/product/getUnitPrice/10001","remark":"","requestBody":false,"requestId":"fb8d12aba52a4fd3ae775c763d31f59b","requestMethod":"GET","success":true,"type":4}
[2023-08-10 14:13:52,029] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 14:13:52,029] [logId] [WARN] [Thread-5] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 14:13:52,029] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 14:13:52,029] [logId] [WARN] [Thread-5] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 14:13:52,509] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 14:13:52,512] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 14:13:52,521] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 14:13:52,525] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 14:13:52,531] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x03cbcf06, L:/192.168.43.8:65118 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,532] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x03cbcf06, L:/192.168.43.8:65118 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,532] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x03cbcf06, L:/192.168.43.8:65118 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,534] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x03cbcf06, L:/192.168.43.8:65118 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,534] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x03cbcf06, L:/192.168.43.8:65118 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:13:52,535] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x03cbcf06, L:/192.168.43.8:65118 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:14:13,178] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service] & group[DEFAULT_GROUP]
[2023-08-10 14:14:13,183] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:14:13,188] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service-dev.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:14:13,189] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-product-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-product-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-product-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 14:14:13,207] [logId] [INFO] [main] ProductApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 14:14:14,034] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=f55b49c0-cb2b-3a10-a65c-e15027c45e4c
[2023-08-10 14:14:14,090] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:14,090] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:14,090] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:14,111] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:14,114] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:14,116] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:14,116] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$449/535624426] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:14,117] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:14,120] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:14,121] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:14,123] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 14:14:14,170] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 14:14:14,176] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 14:14:14,182] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:14:14,183] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:14:14,600] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 14:14:14,749] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:14:14,775] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:14:14,776] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:14:15,008] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:14:15,464] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 14:14:16,995] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x0dd29219, L:/192.168.43.8:50026 - R:/192.168.43.128:8091]
[2023-08-10 14:14:17,003] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 56 ms, version:1.6.1,role:TMROLE,channel:[id: 0x0dd29219, L:/192.168.43.8:50026 - R:/192.168.43.128:8091]
[2023-08-10 14:14:17,004] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[product-service] txServiceGroup[product-tx-group]
[2023-08-10 14:14:17,027] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 14:14:17,028] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 14:14:17,035] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:14:17,035] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[product-service] txServiceGroup[product-tx-group]
[2023-08-10 14:14:17,035] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 14:14:17,378] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8030 (http)
[2023-08-10 14:14:17,385] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8030"]
[2023-08-10 14:14:17,385] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 14:14:17,386] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 14:14:17,508] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 14:14:17,508] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4290 ms
[2023-08-10 14:14:17,674] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 14:14:18,024] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 14:14:18,134] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:14:18,135] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/product
[2023-08-10 14:14:18,135] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/product', applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 14:14:18,140] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x73dfc663, L:/192.168.43.8:50038 - R:/192.168.43.128:8091]
[2023-08-10 14:14:18,140] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 3 ms, version:1.6.1,role:RMROLE,channel:[id: 0x73dfc663, L:/192.168.43.8:50038 - R:/192.168.43.128:8091]
[2023-08-10 14:14:19,169] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 14:14:20,585] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8030"]
[2023-08-10 14:14:20,594] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8030 (http) with context path ''
[2023-08-10 14:14:20,597] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:14:20,598] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:14:20,798] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP product-service 26.26.26.1:8030 register finished
[2023-08-10 14:14:21,127] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 14:14:21,136] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 14:14:21,158] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 14:14:21,284] [logId] [INFO] [main] ProductApplication[61] - Started ProductApplication in 12.661 seconds (JVM running for 14.06)
[2023-08-10 14:14:21,287] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 14:14:21,288] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service, group=DEFAULT_GROUP
[2023-08-10 14:14:21,289] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service.yaml, group=DEFAULT_GROUP
[2023-08-10 14:14:50,891] [logId] [INFO] [http-nio-8030-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 14:14:50,892] [logId] [INFO] [http-nio-8030-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 14:14:50,894] [logId] [INFO] [http-nio-8030-exec-1] DispatcherServlet[547] - Completed initialization in 1 ms
[2023-08-10 14:14:50,920] [logId] [INFO] [http-nio-8030-exec-1] LogUtil[60] - requestId：28009aa0e32c419e8adc0156f2e47f8f
[2023-08-10 14:14:50,981] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8030-exec-1] LogUtil[69] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 14:14:50"}
[2023-08-10 14:14:51,033] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 14:14:51,038] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 14:14:51,045] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - <==      Total: 1
[2023-08-10 14:14:51,047] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8030-exec-1] RestExceptionHandler[45] - 异常接口:/product/getUnitPrice/10001
[2023-08-10 14:14:51,050] [28009aa0e32c419e8adc0156f2e47f8f] [ERROR] [http-nio-8030-exec-1] RestExceptionHandler[46] - 系统异常:
java.lang.ArithmeticException: / by zero
	at com.sakura.product.service.impl.ProductServiceImpl.getUnitPrice(ProductServiceImpl.java:69)
	at com.sakura.product.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$74ed2502.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.sakura.product.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$8dcd9264.getUnitPrice(<generated>)
	at com.sakura.product.controller.ProductController.getUnitPrice(ProductController.java:100)
	at com.sakura.product.controller.ProductController$$FastClassBySpringCGLIB$$b75458d2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.sakura.common.log.LogAspect.around(LogAspect.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.product.controller.ProductController$$EnhancerBySpringCGLIB$$b42e6175.getUnitPrice(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 14:18:48,619] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 14:18:48,619] [logId] [WARN] [Thread-12] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 14:18:48,619] [logId] [WARN] [Thread-12] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 14:18:48,620] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 14:18:49,070] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 14:18:49,074] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 14:18:49,080] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 14:18:49,083] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 14:18:49,084] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x0dd29219, L:/192.168.43.8:50026 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,085] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x0dd29219, L:/192.168.43.8:50026 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,085] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x73dfc663, L:/192.168.43.8:50038 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,085] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x0dd29219, L:/192.168.43.8:50026 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,085] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x73dfc663, L:/192.168.43.8:50038 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,085] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x0dd29219, L:/192.168.43.8:50026 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,085] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x73dfc663, L:/192.168.43.8:50038 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,085] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x73dfc663, L:/192.168.43.8:50038 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,085] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x73dfc663, L:/192.168.43.8:50038 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:18:49,085] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x0dd29219, L:/192.168.43.8:50026 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:18:49,086] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x73dfc663, L:/192.168.43.8:50038 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:18:49,086] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x0dd29219, L:/192.168.43.8:50026 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:19:05,599] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service] & group[DEFAULT_GROUP]
[2023-08-10 14:19:05,605] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:19:05,609] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service-dev.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:19:05,610] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-product-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-product-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-product-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 14:19:05,630] [logId] [INFO] [main] ProductApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 14:19:06,462] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=f55b49c0-cb2b-3a10-a65c-e15027c45e4c
[2023-08-10 14:19:06,531] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:06,532] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:06,532] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:06,560] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:06,565] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:06,567] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:06,568] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$449/60055669] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:06,569] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:06,573] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:06,576] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:06,578] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 14:19:06,652] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 14:19:06,661] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 14:19:06,670] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:19:06,670] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:19:07,098] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 14:19:07,203] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:19:07,222] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:19:07,222] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:19:07,474] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:19:08,333] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 14:19:09,983] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x59652a46, L:/192.168.43.8:50477 - R:/192.168.43.128:8091]
[2023-08-10 14:19:09,988] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 41 ms, version:1.6.1,role:TMROLE,channel:[id: 0x59652a46, L:/192.168.43.8:50477 - R:/192.168.43.128:8091]
[2023-08-10 14:19:09,988] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[product-service] txServiceGroup[product-tx-group]
[2023-08-10 14:19:10,009] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 14:19:10,009] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 14:19:10,015] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:19:10,015] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[product-service] txServiceGroup[product-tx-group]
[2023-08-10 14:19:10,015] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 14:19:10,320] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8030 (http)
[2023-08-10 14:19:10,329] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8030"]
[2023-08-10 14:19:10,329] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 14:19:10,329] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 14:19:10,445] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 14:19:10,445] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4798 ms
[2023-08-10 14:19:10,563] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 14:19:10,848] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 14:19:10,958] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:19:10,959] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/product
[2023-08-10 14:19:10,959] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/product', applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 14:19:10,964] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x4db16119, L:/192.168.43.8:50488 - R:/192.168.43.128:8091]
[2023-08-10 14:19:10,965] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 3 ms, version:1.6.1,role:RMROLE,channel:[id: 0x4db16119, L:/192.168.43.8:50488 - R:/192.168.43.128:8091]
[2023-08-10 14:19:12,703] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 14:19:15,742] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8030"]
[2023-08-10 14:19:15,750] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8030 (http) with context path ''
[2023-08-10 14:19:15,753] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:19:15,753] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:19:15,940] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP product-service 26.26.26.1:8030 register finished
[2023-08-10 14:19:17,187] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 14:19:17,197] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 14:19:17,211] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 14:19:17,331] [logId] [INFO] [main] ProductApplication[61] - Started ProductApplication in 19.903 seconds (JVM running for 21.264)
[2023-08-10 14:19:17,334] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 14:19:17,335] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service, group=DEFAULT_GROUP
[2023-08-10 14:19:17,336] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service.yaml, group=DEFAULT_GROUP
[2023-08-10 14:19:36,128] [logId] [INFO] [http-nio-8030-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 14:19:36,129] [logId] [INFO] [http-nio-8030-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 14:19:36,130] [logId] [INFO] [http-nio-8030-exec-1] DispatcherServlet[547] - Completed initialization in 1 ms
[2023-08-10 14:19:36,197] [logId] [INFO] [http-nio-8030-exec-1] LogUtil[60] - requestId：c36de9a0374a4423b271a1d988fe22e7
[2023-08-10 14:19:36,259] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8030-exec-1] LogUtil[69] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 14:19:36"}
[2023-08-10 14:19:36,343] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 14:19:36,353] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 14:19:36,365] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - <==      Total: 1
[2023-08-10 14:19:36,369] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8030-exec-1] RestExceptionHandler[45] - 异常接口:/product/getUnitPrice/10001
[2023-08-10 14:19:36,376] [c36de9a0374a4423b271a1d988fe22e7] [ERROR] [http-nio-8030-exec-1] RestExceptionHandler[46] - 系统异常:
java.lang.ArithmeticException: / by zero
	at com.sakura.product.service.impl.ProductServiceImpl.getUnitPrice(ProductServiceImpl.java:69)
	at com.sakura.product.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$74ed2502.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386)
	at org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704)
	at com.sakura.product.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$3c22e6c.getUnitPrice(<generated>)
	at com.sakura.product.controller.ProductController.getUnitPrice(ProductController.java:100)
	at com.sakura.product.controller.ProductController$$FastClassBySpringCGLIB$$b75458d2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.sakura.common.log.LogAspect.around(LogAspect.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.product.controller.ProductController$$EnhancerBySpringCGLIB$$523732c4.getUnitPrice(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 14:53:04,515] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 14:53:04,501] [logId] [WARN] [Thread-12] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 14:53:04,519] [logId] [WARN] [Thread-12] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 14:53:04,519] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 14:53:05,108] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 14:53:05,114] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 14:53:05,125] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 14:53:05,130] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 14:53:05,133] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x4db16119, L:/192.168.43.8:50488 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,134] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x4db16119, L:/192.168.43.8:50488 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,134] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x4db16119, L:/192.168.43.8:50488 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,135] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x4db16119, L:/192.168.43.8:50488 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,135] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x4db16119, L:/192.168.43.8:50488 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:53:05,136] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x4db16119, L:/192.168.43.8:50488 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:53:27,875] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service] & group[DEFAULT_GROUP]
[2023-08-10 14:53:27,879] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:53:27,881] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[product-service-dev.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:53:27,882] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-product-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-product-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-product-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 14:53:27,898] [logId] [INFO] [main] ProductApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 14:53:28,531] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=f55b49c0-cb2b-3a10-a65c-e15027c45e4c
[2023-08-10 14:53:28,595] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:28,595] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:28,596] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:28,613] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:28,616] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:28,618] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:28,619] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$449/1053719038] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:28,620] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:28,623] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:28,625] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:28,626] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 14:53:28,670] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 14:53:28,675] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 14:53:28,681] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:53:28,681] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:53:29,075] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 14:53:29,196] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:53:29,216] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:53:29,217] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:53:29,424] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:53:29,928] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 14:53:31,781] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x11fcec86, L:/192.168.43.8:52935 - R:/192.168.43.128:8091]
[2023-08-10 14:53:31,785] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 42 ms, version:1.6.1,role:TMROLE,channel:[id: 0x11fcec86, L:/192.168.43.8:52935 - R:/192.168.43.128:8091]
[2023-08-10 14:53:31,786] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[product-service] txServiceGroup[product-tx-group]
[2023-08-10 14:53:31,809] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 14:53:31,809] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 14:53:31,814] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:53:31,814] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[product-service] txServiceGroup[product-tx-group]
[2023-08-10 14:53:31,814] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 14:53:32,097] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8030 (http)
[2023-08-10 14:53:32,103] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8030"]
[2023-08-10 14:53:32,103] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 14:53:32,103] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 14:53:32,205] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 14:53:32,206] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4297 ms
[2023-08-10 14:53:32,330] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 14:53:32,666] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 14:53:32,795] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:53:32,795] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/product
[2023-08-10 14:53:32,796] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/product', applicationId='product-service', transactionServiceGroup='product-tx-group'} >
[2023-08-10 14:53:32,806] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xf64e777e, L:/192.168.43.8:52946 - R:/192.168.43.128:8091]
[2023-08-10 14:53:32,806] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 6 ms, version:1.6.1,role:RMROLE,channel:[id: 0xf64e777e, L:/192.168.43.8:52946 - R:/192.168.43.128:8091]
[2023-08-10 14:53:33,744] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 14:53:35,308] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8030"]
[2023-08-10 14:53:35,315] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8030 (http) with context path ''
[2023-08-10 14:53:35,318] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:53:35,318] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:53:35,500] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP product-service 26.26.26.1:8030 register finished
[2023-08-10 14:53:36,056] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 14:53:36,066] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 14:53:36,089] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 14:53:36,231] [logId] [INFO] [main] ProductApplication[61] - Started ProductApplication in 14.747 seconds (JVM running for 16.098)
[2023-08-10 14:53:36,234] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 14:53:36,235] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service, group=DEFAULT_GROUP
[2023-08-10 14:53:36,235] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=product-service.yaml, group=DEFAULT_GROUP
[2023-08-10 14:53:51,189] [logId] [INFO] [http-nio-8030-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 14:53:51,190] [logId] [INFO] [http-nio-8030-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 14:53:51,191] [logId] [INFO] [http-nio-8030-exec-1] DispatcherServlet[547] - Completed initialization in 1 ms
[2023-08-10 14:53:51,227] [logId] [INFO] [http-nio-8030-exec-1] LogUtil[60] - requestId：951d6fc4fd3b4310a4738b0d7d7c189a
[2023-08-10 14:53:51,291] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8030-exec-1] LogUtil[69] - 请求参数：{"ip":"26.26.26.1","path":"/product/getUnitPrice/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 14:53:51"}
[2023-08-10 14:53:51,348] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - ==>  Preparing: SELECT id,product_name,product_no,unit_price,create_dt,update_dt,status FROM t_product WHERE (product_no = ? AND status = ?) 
[2023-08-10 14:53:51,354] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 14:53:51,361] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8030-exec-1] selectOne[143] - <==      Total: 1
[2023-08-10 14:53:51,365] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8030-exec-1] LogUtil[47] - 返回参数：{"code":200,"data":100,"message":"操作成功","success":true,"time":"2023-08-10 14:53:51"}
[2023-08-10 14:53:51,374] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [Feh_Optimize_1] LogUtil[278] - 日志信息：{"className":"com.sakura.product.controller.ProductController","code":200,"ip":"26.26.26.1","message":"操作成功","methodName":"getUnitPrice","module":"product","name":"获取商品单价","param":"null","path":"/product/getUnitPrice/10001","remark":"","requestBody":false,"requestId":"951d6fc4fd3b4310a4738b0d7d7c189a","requestMethod":"GET","success":true,"type":4}
[2023-08-10 17:05:05,836] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 17:05:05,836] [logId] [WARN] [Thread-12] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 17:05:05,836] [logId] [WARN] [Thread-12] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 17:05:05,836] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 17:05:06,292] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 17:05:06,295] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 17:05:06,300] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 17:05:06,303] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 17:05:06,304] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x11fcec86, L:/192.168.43.8:52935 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,305] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xf64e777e, L:/192.168.43.8:52946 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,305] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xf64e777e, L:/192.168.43.8:52946 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,305] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x11fcec86, L:/192.168.43.8:52935 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,305] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xf64e777e, L:/192.168.43.8:52946 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,305] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x11fcec86, L:/192.168.43.8:52935 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,305] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x11fcec86, L:/192.168.43.8:52935 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,305] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xf64e777e, L:/192.168.43.8:52946 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,305] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x11fcec86, L:/192.168.43.8:52935 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 17:05:06,305] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf64e777e, L:/192.168.43.8:52946 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 17:05:06,306] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x11fcec86, L:/192.168.43.8:52935 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 17:05:06,306] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf64e777e, L:/192.168.43.8:52946 ! R:/192.168.43.128:8091]) will closed
