[2023-08-12 13:46:46,565] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-12 13:46:46,585] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-12 13:46:46,619] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-12 13:46:47,701] [logId] [INFO] [main] RepositoryConfigurationDelegate[262] - Multiple Spring Data modules found, entering strict repository configuration mode
[2023-08-12 13:46:47,704] [logId] [INFO] [main] RepositoryConfigurationDelegate[132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-08-12 13:46:47,748] [logId] [INFO] [main] RepositoryConfigurationDelegate[201] - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
[2023-08-12 13:46:48,130] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=63310c4c-260f-395a-9a3a-a9c971dfed8f
[2023-08-12 13:46:48,237] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:46:48,237] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:46:48,238] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:46:48,270] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:46:48,274] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:46:48,277] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:46:48,278] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$484/1155844982] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:46:48,279] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:46:48,283] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:46:48,286] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:46:48,289] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-12 13:46:48,360] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-12 13:46:48,371] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-12 13:46:48,381] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 13:46:48,381] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 13:46:48,956] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-12 13:46:49,251] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 13:46:49,313] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 13:46:49,313] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 13:46:49,598] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 13:46:50,540] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 13:46:52,071] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xcd3d214c, L:/192.168.43.8:57206 - R:/192.168.43.128:8091]
[2023-08-12 13:46:52,082] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 453 ms, version:1.6.1,role:TMROLE,channel:[id: 0xcd3d214c, L:/192.168.43.8:57206 - R:/192.168.43.128:8091]
[2023-08-12 13:46:52,084] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 13:46:52,146] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-12 13:46:52,147] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-12 13:46:52,157] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 13:46:52,157] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 13:46:52,157] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-12 13:46:52,738] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-12 13:46:52,749] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-12 13:46:52,750] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-12 13:46:52,750] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-12 13:46:53,073] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-12 13:46:53,074] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 6436 ms
[2023-08-12 13:46:53,298] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-12 13:46:53,719] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-12 13:46:54,003] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 13:46:54,004] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-12 13:46:54,006] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 13:46:54,076] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x84cac572, L:/192.168.43.8:57221 - R:/192.168.43.128:8091]
[2023-08-12 13:46:54,076] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 66 ms, version:1.6.1,role:RMROLE,channel:[id: 0x84cac572, L:/192.168.43.8:57221 - R:/192.168.43.128:8091]
[2023-08-12 13:46:56,695] [logId] [INFO] [main] Version[41] - Redisson 3.12.0
[2023-08-12 13:46:57,568] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmUndoLogProcessor[49] - rm handle undo log process:UndoLogDeleteRequest{resourceId='jdbc:mysql://192.168.43.128:3306/order', saveDays=7, branchType=AT}
[2023-08-12 13:46:57,788] [logId] [INFO] [redisson-netty-4-18] MasterConnectionPool[168] - 24 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 13:46:57,789] [logId] [INFO] [redisson-netty-4-19] MasterPubSubConnectionPool[168] - 1 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 13:46:58,029] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 13:46:58,049] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 13:46:58,124] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 13:46:58,125] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 13:46:58,272] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$49da35ef] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-12 13:46:58,761] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-12 13:47:01,077] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-12 13:47:01,089] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-12 13:47:01,092] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 13:47:01,092] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 13:47:01,321] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-12 13:47:01,857] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-12 13:47:01,870] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-12 13:47:01,893] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-12 13:47:02,045] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 20.872 seconds (JVM running for 22.164)
[2023-08-12 13:47:02,058] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-12 13:47:02,067] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-12 13:47:02,068] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-12 13:53:10,753] [logId] [WARN] [Thread-13] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-12 13:53:10,753] [logId] [WARN] [Thread-5] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-12 13:53:10,754] [logId] [WARN] [Thread-13] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-12 13:53:10,754] [logId] [WARN] [Thread-5] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-12 13:53:10,997] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-12 13:53:11,011] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-12 13:53:13,094] [logId] [ERROR] [redisson-netty-4-24] rejectedExecution[843] - Failed to submit a listener notification task. Event loop shut down?
java.util.concurrent.RejectedExecutionException: event executor terminated
	at io.netty.util.concurrent.SingleThreadEventExecutor.reject(SingleThreadEventExecutor.java:934)
	at io.netty.util.concurrent.SingleThreadEventExecutor.offerTask(SingleThreadEventExecutor.java:351)
	at io.netty.util.concurrent.SingleThreadEventExecutor.addTask(SingleThreadEventExecutor.java:344)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:836)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute0(SingleThreadEventExecutor.java:827)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:817)
	at io.netty.util.concurrent.DefaultPromise.safeExecute(DefaultPromise.java:841)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:499)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:96)
	at io.netty.channel.group.DefaultChannelGroupFuture.setSuccess0(DefaultChannelGroupFuture.java:200)
	at io.netty.channel.group.DefaultChannelGroupFuture.access$400(DefaultChannelGroupFuture.java:41)
	at io.netty.channel.group.DefaultChannelGroupFuture$1.operationComplete(DefaultChannelGroupFuture.java:75)
	at io.netty.channel.group.DefaultChannelGroupFuture$1.operationComplete(DefaultChannelGroupFuture.java:48)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$CloseFuture.setClosed(AbstractChannel.java:1164)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.doClose0(AbstractChannel.java:755)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:731)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:620)
	at io.netty.channel.nio.NioEventLoop.closeAll(NioEventLoop.java:838)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:595)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:53:13,106] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-12 13:53:13,109] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-12 13:53:13,110] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xcd3d214c, L:/192.168.43.8:57206 ! R:/192.168.43.128:8091]
[2023-08-12 13:53:13,110] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xcd3d214c, L:/192.168.43.8:57206 ! R:/192.168.43.128:8091]
[2023-08-12 13:53:13,110] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xcd3d214c, L:/192.168.43.8:57206 ! R:/192.168.43.128:8091]
[2023-08-12 13:53:13,111] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xcd3d214c, L:/192.168.43.8:57206 ! R:/192.168.43.128:8091]
[2023-08-12 13:53:13,111] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xcd3d214c, L:/192.168.43.8:57206 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:53:13,112] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xcd3d214c, L:/192.168.43.8:57206 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:53:13,112] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x84cac572, L:/192.168.43.8:57221 ! R:/192.168.43.128:8091]
[2023-08-12 13:53:13,112] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x84cac572, L:/192.168.43.8:57221 ! R:/192.168.43.128:8091]
[2023-08-12 13:53:13,112] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x84cac572, L:/192.168.43.8:57221 ! R:/192.168.43.128:8091]
[2023-08-12 13:53:13,113] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x84cac572, L:/192.168.43.8:57221 ! R:/192.168.43.128:8091]
[2023-08-12 13:53:13,113] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x84cac572, L:/192.168.43.8:57221 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:53:13,113] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x84cac572, L:/192.168.43.8:57221 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:53:20,047] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-12 13:53:20,055] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-12 13:53:20,074] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-12 13:53:20,767] [logId] [INFO] [main] RepositoryConfigurationDelegate[262] - Multiple Spring Data modules found, entering strict repository configuration mode
[2023-08-12 13:53:20,769] [logId] [INFO] [main] RepositoryConfigurationDelegate[132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-08-12 13:53:20,788] [logId] [INFO] [main] RepositoryConfigurationDelegate[201] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
[2023-08-12 13:53:20,964] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=63310c4c-260f-395a-9a3a-a9c971dfed8f
[2023-08-12 13:53:21,047] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:53:21,048] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:53:21,048] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:53:21,073] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:53:21,076] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:53:21,078] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:53:21,079] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$484/306370923] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:53:21,080] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:53:21,082] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:53:21,083] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:53:21,085] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-12 13:53:21,139] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-12 13:53:21,146] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-12 13:53:21,155] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 13:53:21,155] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 13:53:21,557] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-12 13:53:21,721] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 13:53:21,747] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 13:53:21,747] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 13:53:21,990] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 13:53:22,226] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 13:53:22,878] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xbe216796, L:/192.168.43.8:62663 - R:/192.168.43.128:8091]
[2023-08-12 13:53:22,884] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 65 ms, version:1.6.1,role:TMROLE,channel:[id: 0xbe216796, L:/192.168.43.8:62663 - R:/192.168.43.128:8091]
[2023-08-12 13:53:22,884] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 13:53:22,935] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-12 13:53:22,936] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-12 13:53:22,942] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 13:53:22,942] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 13:53:22,942] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-12 13:53:23,342] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-12 13:53:23,350] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-12 13:53:23,350] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-12 13:53:23,350] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-12 13:53:23,594] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-12 13:53:23,594] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 3507 ms
[2023-08-12 13:53:23,761] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-12 13:53:23,978] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-12 13:53:24,093] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 13:53:24,094] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-12 13:53:24,094] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 13:53:24,102] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x52fc1734, L:/192.168.43.8:62721 - R:/192.168.43.128:8091]
[2023-08-12 13:53:24,103] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 5 ms, version:1.6.1,role:RMROLE,channel:[id: 0x52fc1734, L:/192.168.43.8:62721 - R:/192.168.43.128:8091]
[2023-08-12 13:53:25,328] [logId] [INFO] [main] Version[41] - Redisson 3.12.0
[2023-08-12 13:53:25,424] [logId] [INFO] [redisson-netty-4-27] MasterPubSubConnectionPool[168] - 1 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 13:53:25,432] [logId] [INFO] [redisson-netty-4-19] MasterConnectionPool[168] - 24 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 13:53:25,611] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 13:53:25,622] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 13:53:25,672] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 13:53:25,673] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 13:53:25,780] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$11d74476] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-12 13:53:26,124] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-12 13:53:28,154] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-12 13:53:28,165] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-12 13:53:28,169] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 13:53:28,169] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 13:53:28,379] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-12 13:53:28,844] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-12 13:53:28,854] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-12 13:53:28,870] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-12 13:53:28,988] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 12.866 seconds (JVM running for 14.382)
[2023-08-12 13:53:28,992] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-12 13:53:28,994] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-12 13:53:28,995] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-12 13:53:48,712] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-12 13:53:48,712] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-12 13:53:48,719] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 7 ms
[2023-08-12 13:53:48,939] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[60] - requestId：6f8ac7c3d7c54e678d93b1ee1b938686
[2023-08-12 13:53:49,142] [6f8ac7c3d7c54e678d93b1ee1b938686] [INFO] [http-nio-8010-exec-1] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-12 13:53:48","token":"10001"}
[2023-08-12 13:53:49,229] [6f8ac7c3d7c54e678d93b1ee1b938686] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@128beb77
[2023-08-12 13:53:49,451] [6f8ac7c3d7c54e678d93b1ee1b938686] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566872599627444225]
[2023-08-12 13:54:18,007] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[450] - channel [id: 0xbe216796, L:/192.168.43.8:62663 - R:/192.168.43.128:8091] read idle.
[2023-08-12 13:54:18,010] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xbe216796, L:/192.168.43.8:62663 - R:/192.168.43.128:8091]
[2023-08-12 13:54:18,010] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xbe216796, L:/192.168.43.8:62663 - R:/192.168.43.128:8091]) will closed
[2023-08-12 13:54:18,010] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xbe216796, L:/192.168.43.8:62663 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:54:18,010] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xbe216796, L:/192.168.43.8:62663 ! R:/192.168.43.128:8091]
[2023-08-12 13:54:18,011] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xbe216796, L:/192.168.43.8:62663 ! R:/192.168.43.128:8091]
[2023-08-12 13:54:18,011] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xbe216796, L:/192.168.43.8:62663 ! R:/192.168.43.128:8091]
[2023-08-12 13:54:18,011] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xbe216796, L:/192.168.43.8:62663 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:54:18,011] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xbe216796, L:/192.168.43.8:62663 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:54:18,011] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xbe216796, L:/192.168.43.8:62663 ! R:/192.168.43.128:8091]
[2023-08-12 13:54:18,011] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xbe216796, L:/192.168.43.8:62663 ! R:/192.168.43.128:8091]
[2023-08-12 13:54:18,011] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xbe216796, L:/192.168.43.8:62663 ! R:/192.168.43.128:8091]
[2023-08-12 13:54:18,012] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xbe216796, L:/192.168.43.8:62663 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:54:18,012] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xbe216796, L:/192.168.43.8:62663 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:54:19,147] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x52fc1734, L:/192.168.43.8:62721 ! R:/192.168.43.128:8091]
[2023-08-12 13:54:19,147] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x52fc1734, L:/192.168.43.8:62721 ! R:/192.168.43.128:8091]
[2023-08-12 13:54:19,147] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x52fc1734, L:/192.168.43.8:62721 ! R:/192.168.43.128:8091]
[2023-08-12 13:54:19,147] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x52fc1734, L:/192.168.43.8:62721 ! R:/192.168.43.128:8091]
[2023-08-12 13:54:19,148] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x52fc1734, L:/192.168.43.8:62721 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:54:19,148] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x52fc1734, L:/192.168.43.8:62721 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:54:21,721] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 13:54:21,722] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 13:54:21,726] [logId] [INFO] [timeoutChecker_1_1] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xf0072f0a, L:/192.168.43.8:64421 - R:/192.168.43.128:8091]
[2023-08-12 13:54:21,727] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[81] - register success, cost 3 ms, version:1.6.1,role:TMROLE,channel:[id: 0xf0072f0a, L:/192.168.43.8:64421 - R:/192.168.43.128:8091]
[2023-08-12 13:54:22,953] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 13:54:22,954] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-12 13:54:22,954] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 13:54:22,958] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xe675f6e8, L:/192.168.43.8:64473 - R:/192.168.43.128:8091]
[2023-08-12 13:54:22,959] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0xe675f6e8, L:/192.168.43.8:64473 - R:/192.168.43.128:8091]
[2023-08-12 13:54:30,580] [6f8ac7c3d7c54e678d93b1ee1b938686] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566872599627444225
[2023-08-12 13:54:30,582] [6f8ac7c3d7c54e678d93b1ee1b938686] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[189] - [192.168.43.128:8091:5566872599627444225] rollback status: Rollbacked
[2023-08-12 13:54:30,585] [6f8ac7c3d7c54e678d93b1ee1b938686] [INFO] [http-nio-8010-exec-1] RestExceptionHandler[45] - 异常接口:/order/add
[2023-08-12 13:54:30,589] [6f8ac7c3d7c54e678d93b1ee1b938686] [ERROR] [http-nio-8010-exec-1] RestExceptionHandler[46] - 系统异常:
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.43.118:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:210)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:190)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.increment(DefaultValueOperations.java:167)
	at com.sakura.common.redis.RedisUtil.decr(RedisUtil.java:182)
	at com.sakura.order.service.impl.OrderServiceImpl.saveOrder(OrderServiceImpl.java:77)
	at com.sakura.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$38d4abe2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:204)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:130)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:201)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:171)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$11d74476.saveOrder(<generated>)
	at com.sakura.order.controller.OrderController.addOrder(OrderController.java:45)
	at com.sakura.order.controller.OrderController$$FastClassBySpringCGLIB$$2a079ef2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.sakura.common.log.LogAspect.around(LogAspect.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.controller.OrderController$$EnhancerBySpringCGLIB$$3ad491f0.addOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.43.118:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 90 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.43.118:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.util.Optional.orElseGet(Optional.java:267)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211)
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201)
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:70)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:571)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:298)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:223)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122)
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103)
	... 91 common frames omitted
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
[2023-08-12 13:56:20,177] [logId] [WARN] [Thread-5] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-12 13:56:20,176] [logId] [WARN] [Thread-12] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-12 13:56:20,177] [logId] [WARN] [Thread-12] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-12 13:56:20,177] [logId] [WARN] [Thread-5] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-12 13:56:20,622] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-12 13:56:20,628] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-12 13:56:22,638] [logId] [ERROR] [redisson-netty-4-14] CommandsQueue[144] - Exception occured. Channel: [id: 0x756ac997, L:/26.26.26.1:51640 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,640] [logId] [ERROR] [redisson-netty-4-13] CommandsQueue[144] - Exception occured. Channel: [id: 0x46ca59bc, L:/26.26.26.1:51641 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,642] [logId] [ERROR] [redisson-netty-4-11] CommandsQueue[144] - Exception occured. Channel: [id: 0x0574b84f, L:/26.26.26.1:51638 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,643] [logId] [ERROR] [redisson-netty-4-29] CommandsQueue[144] - Exception occured. Channel: [id: 0x6e94ba2d, L:/26.26.26.1:51674 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,645] [logId] [ERROR] [redisson-netty-4-10] CommandsQueue[144] - Exception occured. Channel: [id: 0x539ae26e, L:/26.26.26.1:51637 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,648] [logId] [ERROR] [redisson-netty-4-28] CommandsQueue[144] - Exception occured. Channel: [id: 0x1a218c04, L:/26.26.26.1:51670 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,650] [logId] [ERROR] [redisson-netty-4-20] CommandsQueue[144] - Exception occured. Channel: [id: 0x916bc6f3, L:/26.26.26.1:51651 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,651] [logId] [ERROR] [redisson-netty-4-31] CommandsQueue[144] - Exception occured. Channel: [id: 0xd4d32b4e, L:/26.26.26.1:51672 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,653] [logId] [ERROR] [redisson-netty-4-16] CommandsQueue[144] - Exception occured. Channel: [id: 0xb7063604, L:/26.26.26.1:51643 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,656] [logId] [ERROR] [redisson-netty-4-23] CommandsQueue[144] - Exception occured. Channel: [id: 0xc9677296, L:/26.26.26.1:51658 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,657] [logId] [ERROR] [redisson-netty-4-22] CommandsQueue[144] - Exception occured. Channel: [id: 0x1aded5e0, L:/26.26.26.1:51656 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,660] [logId] [ERROR] [redisson-netty-4-12] CommandsQueue[144] - Exception occured. Channel: [id: 0xf7288a33, L:/26.26.26.1:51639 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,661] [logId] [ERROR] [redisson-netty-4-15] CommandsQueue[144] - Exception occured. Channel: [id: 0x492bd020, L:/26.26.26.1:51642 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,663] [logId] [ERROR] [redisson-netty-4-19] CommandsQueue[144] - Exception occured. Channel: [id: 0xa233e8c6, L:/26.26.26.1:51648 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,666] [logId] [ERROR] [redisson-netty-4-27] CommandsQueue[144] - Exception occured. Channel: [id: 0x3ef18f00, L:/26.26.26.1:51668 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,668] [logId] [ERROR] [redisson-netty-4-24] CommandsQueue[144] - Exception occured. Channel: [id: 0x5b5b94d8, L:/26.26.26.1:51660 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,674] [logId] [ERROR] [redisson-netty-4-21] CommandsQueue[144] - Exception occured. Channel: [id: 0x8f30c140, L:/26.26.26.1:51653 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,674] [logId] [ERROR] [redisson-netty-4-18] CommandsQueue[144] - Exception occured. Channel: [id: 0x8e2abb5c, L:/26.26.26.1:51645 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,674] [logId] [ERROR] [redisson-netty-4-25] CommandsQueue[144] - Exception occured. Channel: [id: 0xa8efcb90, L:/26.26.26.1:51663 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,677] [logId] [ERROR] [redisson-netty-4-1] CommandsQueue[144] - Exception occured. Channel: [id: 0xe448778b, L:/26.26.26.1:51678 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,679] [logId] [ERROR] [redisson-netty-4-30] CommandsQueue[144] - Exception occured. Channel: [id: 0xf4a03e06, L:/26.26.26.1:51675 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,682] [logId] [ERROR] [redisson-netty-4-26] CommandsQueue[144] - Exception occured. Channel: [id: 0x14c884c2, L:/26.26.26.1:51665 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,684] [logId] [ERROR] [redisson-netty-4-17] CommandsQueue[144] - Exception occured. Channel: [id: 0x04535401, L:/26.26.26.1:51644 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,685] [logId] [ERROR] [redisson-netty-4-32] CommandsQueue[144] - Exception occured. Channel: [id: 0xd0e571e7, L:/26.26.26.1:51680 - R:192.168.43.118/192.168.43.118:6379]
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,688] [logId] [ERROR] [redisson-netty-4-2] rejectedExecution[843] - Failed to submit a listener notification task. Event loop shut down?
java.util.concurrent.RejectedExecutionException: event executor terminated
	at io.netty.util.concurrent.SingleThreadEventExecutor.reject(SingleThreadEventExecutor.java:934)
	at io.netty.util.concurrent.SingleThreadEventExecutor.offerTask(SingleThreadEventExecutor.java:351)
	at io.netty.util.concurrent.SingleThreadEventExecutor.addTask(SingleThreadEventExecutor.java:344)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:836)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute0(SingleThreadEventExecutor.java:827)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:817)
	at io.netty.util.concurrent.DefaultPromise.safeExecute(DefaultPromise.java:841)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:499)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:96)
	at io.netty.channel.group.DefaultChannelGroupFuture.setSuccess0(DefaultChannelGroupFuture.java:200)
	at io.netty.channel.group.DefaultChannelGroupFuture.access$400(DefaultChannelGroupFuture.java:41)
	at io.netty.channel.group.DefaultChannelGroupFuture$1.operationComplete(DefaultChannelGroupFuture.java:75)
	at io.netty.channel.group.DefaultChannelGroupFuture$1.operationComplete(DefaultChannelGroupFuture.java:48)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$CloseFuture.setClosed(AbstractChannel.java:1164)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.doClose0(AbstractChannel.java:755)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:731)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:620)
	at io.netty.channel.nio.NioEventLoop.closeAll(NioEventLoop.java:838)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:595)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 13:56:22,821] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-12 13:56:22,826] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-12 13:56:22,827] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xf0072f0a, L:/192.168.43.8:64421 ! R:/192.168.43.128:8091]
[2023-08-12 13:56:22,827] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xf0072f0a, L:/192.168.43.8:64421 ! R:/192.168.43.128:8091]
[2023-08-12 13:56:22,827] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xf0072f0a, L:/192.168.43.8:64421 ! R:/192.168.43.128:8091]
[2023-08-12 13:56:22,828] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xf0072f0a, L:/192.168.43.8:64421 ! R:/192.168.43.128:8091]
[2023-08-12 13:56:22,828] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf0072f0a, L:/192.168.43.8:64421 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:56:22,828] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf0072f0a, L:/192.168.43.8:64421 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:56:22,829] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xe675f6e8, L:/192.168.43.8:64473 ! R:/192.168.43.128:8091]
[2023-08-12 13:56:22,829] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xe675f6e8, L:/192.168.43.8:64473 ! R:/192.168.43.128:8091]
[2023-08-12 13:56:22,829] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xe675f6e8, L:/192.168.43.8:64473 ! R:/192.168.43.128:8091]
[2023-08-12 13:56:22,829] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xe675f6e8, L:/192.168.43.8:64473 ! R:/192.168.43.128:8091]
[2023-08-12 13:56:22,829] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe675f6e8, L:/192.168.43.8:64473 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:56:22,829] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe675f6e8, L:/192.168.43.8:64473 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:56:33,972] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-12 13:56:33,982] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-12 13:56:34,002] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-12 13:56:34,692] [logId] [INFO] [main] RepositoryConfigurationDelegate[262] - Multiple Spring Data modules found, entering strict repository configuration mode
[2023-08-12 13:56:34,694] [logId] [INFO] [main] RepositoryConfigurationDelegate[132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-08-12 13:56:34,712] [logId] [INFO] [main] RepositoryConfigurationDelegate[201] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
[2023-08-12 13:56:34,876] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=63310c4c-260f-395a-9a3a-a9c971dfed8f
[2023-08-12 13:56:34,948] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:56:34,948] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:56:34,948] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:56:34,970] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:56:34,973] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:56:34,975] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:56:34,975] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$484/1947785070] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:56:34,976] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:56:34,979] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:56:34,983] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:56:34,986] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-12 13:56:35,043] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-12 13:56:35,050] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-12 13:56:35,058] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 13:56:35,058] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 13:56:35,548] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-12 13:56:35,773] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 13:56:35,804] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 13:56:35,804] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 13:56:36,063] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 13:56:36,997] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 13:56:39,058] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x428e2633, L:/192.168.43.8:51971 - R:/192.168.43.128:8091]
[2023-08-12 13:56:39,068] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 100 ms, version:1.6.1,role:TMROLE,channel:[id: 0x428e2633, L:/192.168.43.8:51971 - R:/192.168.43.128:8091]
[2023-08-12 13:56:39,069] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 13:56:39,113] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-12 13:56:39,114] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-12 13:56:39,123] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 13:56:39,124] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 13:56:39,124] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-12 13:56:39,876] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-12 13:56:39,886] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-12 13:56:39,887] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-12 13:56:39,887] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-12 13:56:40,233] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-12 13:56:40,233] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 6221 ms
[2023-08-12 13:56:40,611] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-12 13:56:41,076] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-12 13:56:41,267] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 13:56:41,267] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-12 13:56:41,268] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 13:56:41,278] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x34dd35d4, L:/192.168.43.8:52024 - R:/192.168.43.128:8091]
[2023-08-12 13:56:41,279] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 7 ms, version:1.6.1,role:RMROLE,channel:[id: 0x34dd35d4, L:/192.168.43.8:52024 - R:/192.168.43.128:8091]
[2023-08-12 13:56:43,795] [logId] [INFO] [main] Version[41] - Redisson 3.12.0
[2023-08-12 13:56:43,883] [logId] [INFO] [redisson-netty-4-28] MasterPubSubConnectionPool[168] - 1 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 13:56:43,896] [logId] [INFO] [redisson-netty-4-19] MasterConnectionPool[168] - 24 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 13:56:44,202] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 13:56:44,222] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 13:56:44,309] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 13:56:44,309] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 13:56:44,470] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$1b17b3c0] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-12 13:56:45,014] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-12 13:56:47,986] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-12 13:56:47,998] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-12 13:56:48,002] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 13:56:48,002] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 13:56:48,208] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-12 13:56:49,065] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-12 13:56:49,074] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-12 13:56:49,094] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-12 13:56:49,233] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 20.814 seconds (JVM running for 21.991)
[2023-08-12 13:56:49,237] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-12 13:56:49,239] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-12 13:56:49,240] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-12 13:58:17,229] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-12 13:58:17,229] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-12 13:58:17,229] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-12 13:58:17,230] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-12 13:58:17,466] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-12 13:58:17,470] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-12 13:58:17,564] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-12 13:58:17,568] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-12 13:58:17,570] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x428e2633, L:/192.168.43.8:51971 ! R:/192.168.43.128:8091]
[2023-08-12 13:58:17,570] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x428e2633, L:/192.168.43.8:51971 ! R:/192.168.43.128:8091]
[2023-08-12 13:58:17,570] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x428e2633, L:/192.168.43.8:51971 ! R:/192.168.43.128:8091]
[2023-08-12 13:58:17,571] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x428e2633, L:/192.168.43.8:51971 ! R:/192.168.43.128:8091]
[2023-08-12 13:58:17,571] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x428e2633, L:/192.168.43.8:51971 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:58:17,571] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x428e2633, L:/192.168.43.8:51971 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:58:17,571] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x34dd35d4, L:/192.168.43.8:52024 ! R:/192.168.43.128:8091]
[2023-08-12 13:58:17,572] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x34dd35d4, L:/192.168.43.8:52024 ! R:/192.168.43.128:8091]
[2023-08-12 13:58:17,572] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x34dd35d4, L:/192.168.43.8:52024 ! R:/192.168.43.128:8091]
[2023-08-12 13:58:17,572] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x34dd35d4, L:/192.168.43.8:52024 ! R:/192.168.43.128:8091]
[2023-08-12 13:58:17,572] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x34dd35d4, L:/192.168.43.8:52024 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:58:17,572] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x34dd35d4, L:/192.168.43.8:52024 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 13:58:23,684] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-12 13:58:23,695] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-12 13:58:23,729] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-12 13:58:24,658] [logId] [INFO] [main] RepositoryConfigurationDelegate[262] - Multiple Spring Data modules found, entering strict repository configuration mode
[2023-08-12 13:58:24,660] [logId] [INFO] [main] RepositoryConfigurationDelegate[132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-08-12 13:58:24,677] [logId] [INFO] [main] RepositoryConfigurationDelegate[201] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
[2023-08-12 13:58:24,863] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=63310c4c-260f-395a-9a3a-a9c971dfed8f
[2023-08-12 13:58:24,944] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:58:24,945] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:58:24,945] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:58:24,967] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:58:24,970] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:58:24,972] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:58:24,972] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$484/1841440668] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:58:24,973] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:58:24,975] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:58:24,977] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 13:58:24,978] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-12 13:58:25,027] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-12 13:58:25,033] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-12 13:58:25,041] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 13:58:25,041] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 13:58:25,442] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-12 13:58:25,601] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 13:58:25,632] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 13:58:25,632] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 13:58:25,881] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 13:58:26,237] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 13:58:26,882] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x419f8431, L:/192.168.43.8:54155 - R:/192.168.43.128:8091]
[2023-08-12 13:58:26,887] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 55 ms, version:1.6.1,role:TMROLE,channel:[id: 0x419f8431, L:/192.168.43.8:54155 - R:/192.168.43.128:8091]
[2023-08-12 13:58:26,887] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 13:58:26,913] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-12 13:58:26,913] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-12 13:58:26,919] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 13:58:26,919] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 13:58:26,919] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-12 13:58:27,321] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-12 13:58:27,329] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-12 13:58:27,330] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-12 13:58:27,330] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-12 13:58:27,617] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-12 13:58:27,617] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 3873 ms
[2023-08-12 13:58:27,831] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-12 13:58:28,099] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-12 13:58:28,226] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 13:58:28,227] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-12 13:58:28,227] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 13:58:28,235] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x2e7e3914, L:/192.168.43.8:54165 - R:/192.168.43.128:8091]
[2023-08-12 13:58:28,235] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0x2e7e3914, L:/192.168.43.8:54165 - R:/192.168.43.128:8091]
[2023-08-12 13:58:29,658] [logId] [INFO] [main] Version[41] - Redisson 3.12.0
[2023-08-12 13:58:29,776] [logId] [INFO] [redisson-netty-4-31] MasterPubSubConnectionPool[168] - 1 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 13:58:29,784] [logId] [INFO] [redisson-netty-4-19] MasterConnectionPool[168] - 24 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 13:58:30,032] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 13:58:30,053] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 13:58:30,112] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 13:58:30,112] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 13:58:30,219] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$f5185bce] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-12 13:58:30,584] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-12 13:58:32,180] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-12 13:58:32,189] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-12 13:58:32,193] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 13:58:32,193] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 13:58:32,413] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-12 13:58:32,998] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-12 13:58:33,008] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-12 13:58:33,024] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-12 13:58:33,146] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 13.136 seconds (JVM running for 14.233)
[2023-08-12 13:58:33,151] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-12 13:58:33,153] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-12 13:58:33,154] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-12 13:59:06,560] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-12 13:59:06,561] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-12 13:59:06,564] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 3 ms
[2023-08-12 13:59:06,768] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[60] - requestId：b35d5f280c234694926d3ca5fac96ae2
[2023-08-12 13:59:06,962] [b35d5f280c234694926d3ca5fac96ae2] [INFO] [http-nio-8010-exec-1] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-12 13:59:06","token":"10001"}
[2023-08-12 13:59:07,028] [b35d5f280c234694926d3ca5fac96ae2] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@3cf9709a
[2023-08-12 13:59:07,044] [b35d5f280c234694926d3ca5fac96ae2] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566872599627444226]
[2023-08-12 14:01:26,963] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[450] - channel [id: 0x2e7e3914, L:/192.168.43.8:54165 - R:/192.168.43.128:8091] read idle.
[2023-08-12 14:01:26,963] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[450] - channel [id: 0x419f8431, L:/192.168.43.8:54155 - R:/192.168.43.128:8091] read idle.
[2023-08-12 14:01:27,183] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x2e7e3914, L:/192.168.43.8:54165 - R:/192.168.43.128:8091]
[2023-08-12 14:01:27,183] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x419f8431, L:/192.168.43.8:54155 - R:/192.168.43.128:8091]
[2023-08-12 14:01:27,189] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x2e7e3914, L:/192.168.43.8:54165 - R:/192.168.43.128:8091]) will closed
[2023-08-12 14:01:27,189] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x419f8431, L:/192.168.43.8:54155 - R:/192.168.43.128:8091]) will closed
[2023-08-12 14:01:27,193] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x2e7e3914, L:/192.168.43.8:54165 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:01:27,193] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x419f8431, L:/192.168.43.8:54155 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:01:27,195] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x2e7e3914, L:/192.168.43.8:54165 ! R:/192.168.43.128:8091]
[2023-08-12 14:01:27,195] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x419f8431, L:/192.168.43.8:54155 ! R:/192.168.43.128:8091]
[2023-08-12 14:01:27,195] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x2e7e3914, L:/192.168.43.8:54165 ! R:/192.168.43.128:8091]
[2023-08-12 14:01:27,195] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x2e7e3914, L:/192.168.43.8:54165 ! R:/192.168.43.128:8091]
[2023-08-12 14:01:27,195] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x2e7e3914, L:/192.168.43.8:54165 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:01:27,195] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x2e7e3914, L:/192.168.43.8:54165 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:01:27,195] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x419f8431, L:/192.168.43.8:54155 ! R:/192.168.43.128:8091]
[2023-08-12 14:01:27,195] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x419f8431, L:/192.168.43.8:54155 ! R:/192.168.43.128:8091]
[2023-08-12 14:01:27,195] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x419f8431, L:/192.168.43.8:54155 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:01:27,195] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x2e7e3914, L:/192.168.43.8:54165 ! R:/192.168.43.128:8091]
[2023-08-12 14:01:27,196] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x419f8431, L:/192.168.43.8:54155 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:01:27,196] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x2e7e3914, L:/192.168.43.8:54165 ! R:/192.168.43.128:8091]
[2023-08-12 14:01:27,196] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x2e7e3914, L:/192.168.43.8:54165 ! R:/192.168.43.128:8091]
[2023-08-12 14:01:27,196] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x419f8431, L:/192.168.43.8:54155 ! R:/192.168.43.128:8091]
[2023-08-12 14:01:27,196] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x2e7e3914, L:/192.168.43.8:54165 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:01:27,196] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x419f8431, L:/192.168.43.8:54155 ! R:/192.168.43.128:8091]
[2023-08-12 14:01:27,196] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x2e7e3914, L:/192.168.43.8:54165 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:01:27,196] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x419f8431, L:/192.168.43.8:54155 ! R:/192.168.43.128:8091]
[2023-08-12 14:01:27,196] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x419f8431, L:/192.168.43.8:54155 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:01:27,196] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x419f8431, L:/192.168.43.8:54155 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:01:30,867] [b35d5f280c234694926d3ca5fac96ae2] [ERROR] [http-nio-8010-exec-1] OrderServiceImpl[94] - 新增订单查询商品库存异常：NOAUTH Authentication required.. channel: [id: 0x7f7ef3ab, L:/192.168.43.8:54235 - R:192.168.43.118/192.168.43.118:6379] data: CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@39bbcb0d(incomplete)], command=(EVAL), params=[if (redis.call('exists', KEYS[1]) == 0) then redis.call('hset', KEYS[1], ARGV[2], 1); redis.call('pe..., 1, GetProductNum10001, 10000, 75290f11-6af6-4eae-b9e1-a77e33b02181:199], codec=org.redisson.client.codec.LongCodec]
org.redisson.client.RedisAuthRequiredException: NOAUTH Authentication required.. channel: [id: 0x7f7ef3ab, L:/192.168.43.8:54235 - R:192.168.43.118/192.168.43.118:6379] data: CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@39bbcb0d(incomplete)], command=(EVAL), params=[if (redis.call('exists', KEYS[1]) == 0) then redis.call('hset', KEYS[1], ARGV[2], 1); redis.call('pe..., 1, GetProductNum10001, 10000, 75290f11-6af6-4eae-b9e1-a77e33b02181:199], codec=org.redisson.client.codec.LongCodec]
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:351)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:196)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:134)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:519)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:280)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 14:01:31,525] [b35d5f280c234694926d3ca5fac96ae2] [INFO] [http-nio-8010-exec-1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 14:01:31,525] [b35d5f280c234694926d3ca5fac96ae2] [INFO] [http-nio-8010-exec-1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 14:01:31,531] [b35d5f280c234694926d3ca5fac96ae2] [INFO] [http-nio-8010-exec-1] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xecc23d76, L:/192.168.43.8:56556 - R:/192.168.43.128:8091]
[2023-08-12 14:01:31,532] [b35d5f280c234694926d3ca5fac96ae2] [INFO] [http-nio-8010-exec-1] NettyPoolableFactory[81] - register success, cost 5 ms, version:1.6.1,role:TMROLE,channel:[id: 0xecc23d76, L:/192.168.43.8:56556 - R:/192.168.43.128:8091]
[2023-08-12 14:01:31,539] [b35d5f280c234694926d3ca5fac96ae2] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566872599627444226
[2023-08-12 14:01:31,540] [b35d5f280c234694926d3ca5fac96ae2] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[189] - [192.168.43.128:8091:5566872599627444226] rollback status: Finished
[2023-08-12 14:01:31,543] [b35d5f280c234694926d3ca5fac96ae2] [INFO] [http-nio-8010-exec-1] RestExceptionHandler[45] - 异常接口:/order/add
[2023-08-12 14:01:31,544] [b35d5f280c234694926d3ca5fac96ae2] [ERROR] [http-nio-8010-exec-1] RestExceptionHandler[46] - 系统异常:
org.redisson.client.RedisAuthRequiredException: NOAUTH Authentication required.. channel: [id: 0x26b240cf, L:/192.168.43.8:54243 - R:192.168.43.118/192.168.43.118:6379] data: CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@28a6bff3(incomplete)], command=(EXISTS), params=[GetProductNum10001], codec=org.redisson.codec.FstCodec]
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:351)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:196)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:134)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:519)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:280)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 14:01:36,925] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 14:01:36,926] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-12 14:01:36,926] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 14:01:36,943] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x04c2398b, L:/192.168.43.8:56563 - R:/192.168.43.128:8091]
[2023-08-12 14:01:36,944] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[81] - register success, cost 16 ms, version:1.6.1,role:RMROLE,channel:[id: 0x04c2398b, L:/192.168.43.8:56563 - R:/192.168.43.128:8091]
[2023-08-12 14:03:46,605] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-12 14:03:46,605] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-12 14:03:46,605] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-12 14:03:46,606] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-12 14:03:46,894] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-12 14:03:46,908] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-12 14:03:47,075] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-12 14:03:47,082] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-12 14:03:47,083] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xecc23d76, L:/192.168.43.8:56556 ! R:/192.168.43.128:8091]
[2023-08-12 14:03:47,084] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xecc23d76, L:/192.168.43.8:56556 ! R:/192.168.43.128:8091]
[2023-08-12 14:03:47,084] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xecc23d76, L:/192.168.43.8:56556 ! R:/192.168.43.128:8091]
[2023-08-12 14:03:47,084] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xecc23d76, L:/192.168.43.8:56556 ! R:/192.168.43.128:8091]
[2023-08-12 14:03:47,084] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xecc23d76, L:/192.168.43.8:56556 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:03:47,085] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xecc23d76, L:/192.168.43.8:56556 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:03:47,085] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x04c2398b, L:/192.168.43.8:56563 ! R:/192.168.43.128:8091]
[2023-08-12 14:03:47,085] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x04c2398b, L:/192.168.43.8:56563 ! R:/192.168.43.128:8091]
[2023-08-12 14:03:47,085] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x04c2398b, L:/192.168.43.8:56563 ! R:/192.168.43.128:8091]
[2023-08-12 14:03:47,085] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x04c2398b, L:/192.168.43.8:56563 ! R:/192.168.43.128:8091]
[2023-08-12 14:03:47,086] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x04c2398b, L:/192.168.43.8:56563 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:03:47,086] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x04c2398b, L:/192.168.43.8:56563 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 14:04:02,783] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-12 14:04:02,803] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-12 14:04:02,854] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-12 14:04:03,964] [logId] [INFO] [main] RepositoryConfigurationDelegate[262] - Multiple Spring Data modules found, entering strict repository configuration mode
[2023-08-12 14:04:03,966] [logId] [INFO] [main] RepositoryConfigurationDelegate[132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-08-12 14:04:03,999] [logId] [INFO] [main] RepositoryConfigurationDelegate[201] - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
[2023-08-12 14:04:04,301] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=63310c4c-260f-395a-9a3a-a9c971dfed8f
[2023-08-12 14:04:04,425] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 14:04:04,425] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 14:04:04,426] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 14:04:04,456] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 14:04:04,459] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 14:04:04,462] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 14:04:04,463] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$484/739101205] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 14:04:04,463] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 14:04:04,466] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 14:04:04,467] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 14:04:04,469] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-12 14:04:04,574] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-12 14:04:04,587] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-12 14:04:04,606] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 14:04:04,607] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 14:04:05,151] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-12 14:04:05,406] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 14:04:05,485] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 14:04:05,486] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 14:04:05,737] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 14:04:06,090] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 14:04:06,965] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xb1960082, L:/192.168.43.8:56887 - R:/192.168.43.128:8091]
[2023-08-12 14:04:06,972] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 100 ms, version:1.6.1,role:TMROLE,channel:[id: 0xb1960082, L:/192.168.43.8:56887 - R:/192.168.43.128:8091]
[2023-08-12 14:04:06,973] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 14:04:07,012] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-12 14:04:07,014] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-12 14:04:07,028] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 14:04:07,028] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 14:04:07,029] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-12 14:04:07,627] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-12 14:04:07,638] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-12 14:04:07,639] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-12 14:04:07,639] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-12 14:04:08,007] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-12 14:04:08,007] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 5126 ms
[2023-08-12 14:04:08,253] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-12 14:04:08,563] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-12 14:04:08,711] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 14:04:08,711] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-12 14:04:08,712] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 14:04:08,723] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xfe8c870e, L:/192.168.43.8:56895 - R:/192.168.43.128:8091]
[2023-08-12 14:04:08,724] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 10 ms, version:1.6.1,role:RMROLE,channel:[id: 0xfe8c870e, L:/192.168.43.8:56895 - R:/192.168.43.128:8091]
[2023-08-12 14:04:10,756] [logId] [INFO] [main] Version[41] - Redisson 3.12.0
[2023-08-12 14:04:10,961] [logId] [INFO] [redisson-netty-4-11] MasterConnectionPool[168] - 24 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 14:04:10,961] [logId] [INFO] [redisson-netty-4-30] MasterPubSubConnectionPool[168] - 1 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 14:04:11,246] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 14:04:11,263] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 14:04:11,341] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 14:04:11,342] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 14:04:11,539] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$f83a3c0a] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-12 14:04:12,162] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-12 14:04:14,482] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-12 14:04:14,496] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-12 14:04:14,501] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 14:04:14,501] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 14:04:14,724] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-12 14:04:15,261] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-12 14:04:15,280] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-12 14:04:15,304] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-12 14:04:15,514] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 19.359 seconds (JVM running for 21.609)
[2023-08-12 14:04:15,521] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-12 14:04:15,528] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-12 14:04:15,529] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-12 14:04:27,176] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-12 14:04:27,177] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-12 14:04:27,182] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 5 ms
[2023-08-12 14:04:27,494] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[60] - requestId：1b506752693f4c43b94fd61f7773a8e7
[2023-08-12 14:04:27,649] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [http-nio-8010-exec-1] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-12 14:04:27","token":"10001"}
[2023-08-12 14:04:27,689] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@1d53d8fb
[2023-08-12 14:04:27,719] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566872599627444227]
[2023-08-12 14:04:40,453] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-12 14:04:40,455] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: 1b506752693f4c43b94fd61f7773a8e7
[2023-08-12 14:04:40,460] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-12 14:04:40,462] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] requestId: 1b506752693f4c43b94fd61f7773a8e7
[2023-08-12 14:04:40,464] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566872599627444227
[2023-08-12 14:04:40,464] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-12 14:04:41,686] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (1220ms)
[2023-08-12 14:04:41,687] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-12 14:04:41,687] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-12 14:04:41,688] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Sat, 12 Aug 2023 06:04:41 GMT
[2023-08-12 14:04:41,688] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-12 14:04:41,689] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-12 14:04:41,689] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-12 14:04:41,690] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":14,"time":"2023-08-12 06:04:41"}
[2023-08-12 14:04:41,691] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-12 14:04:42,314] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[87] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=14, time=Sat Aug 12 14:04:41 CST 2023)
[2023-08-12 14:04:49,830] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-12 14:04:49,831] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: 1b506752693f4c43b94fd61f7773a8e7
[2023-08-12 14:04:49,831] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-12 14:04:49,832] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-12 14:04:50,335] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (502ms)
[2023-08-12 14:04:50,337] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[112] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Sat Aug 12 14:04:50 CST 2023)
[2023-08-12 14:04:50,472] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-12 14:04:50,489] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081206044780095177703(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-12 14:04:50,837] [1b506752693f4c43b94fd61f7773a8e7] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-12 14:04:50,853] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566872599627444227
[2023-08-12 14:04:50,854] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566872599627444227] commit status: Committed
[2023-08-12 14:04:50,861] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [http-nio-8010-exec-1] LogUtil[47] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-12 14:04:50"}
[2023-08-12 14:04:50,878] [1b506752693f4c43b94fd61f7773a8e7] [INFO] [Feh_Optimize_1] LogUtil[278] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"1b506752693f4c43b94fd61f7773a8e7","requestMethod":"POST","success":true,"type":1}
[2023-08-12 14:04:51,516] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566872599627444227,branchId=5566872599627444228,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"skipCheckLock":true}
[2023-08-12 14:04:51,519] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566872599627444227 5566872599627444228 jdbc:mysql://192.168.43.128:3306/order {"skipCheckLock":true}
[2023-08-12 14:04:51,521] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-12 17:04:02,892] [logId] [WARN] [Thread-13] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-12 17:04:02,892] [logId] [WARN] [Thread-5] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-12 17:04:02,893] [logId] [WARN] [Thread-13] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-12 17:04:02,894] [logId] [WARN] [Thread-5] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-12 17:04:03,554] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-12 17:04:03,577] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-12 17:04:03,951] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-12 17:04:03,966] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-12 17:04:03,970] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xb1960082, L:/192.168.43.8:56887 ! R:/192.168.43.128:8091]
[2023-08-12 17:04:03,971] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xb1960082, L:/192.168.43.8:56887 ! R:/192.168.43.128:8091]
[2023-08-12 17:04:03,971] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xb1960082, L:/192.168.43.8:56887 ! R:/192.168.43.128:8091]
[2023-08-12 17:04:03,975] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xb1960082, L:/192.168.43.8:56887 ! R:/192.168.43.128:8091]
[2023-08-12 17:04:03,976] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb1960082, L:/192.168.43.8:56887 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:04:03,976] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb1960082, L:/192.168.43.8:56887 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:04:03,972] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xfe8c870e, L:/192.168.43.8:56895 ! R:/192.168.43.128:8091]
[2023-08-12 17:04:03,979] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xfe8c870e, L:/192.168.43.8:56895 ! R:/192.168.43.128:8091]
[2023-08-12 17:04:03,979] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xfe8c870e, L:/192.168.43.8:56895 ! R:/192.168.43.128:8091]
[2023-08-12 17:04:03,982] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xfe8c870e, L:/192.168.43.8:56895 ! R:/192.168.43.128:8091]
[2023-08-12 17:04:03,983] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xfe8c870e, L:/192.168.43.8:56895 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:04:03,984] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xfe8c870e, L:/192.168.43.8:56895 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:04:44,530] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-12 17:04:44,556] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-12 17:04:44,619] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-12 17:04:46,820] [logId] [INFO] [main] RepositoryConfigurationDelegate[262] - Multiple Spring Data modules found, entering strict repository configuration mode
[2023-08-12 17:04:46,834] [logId] [INFO] [main] RepositoryConfigurationDelegate[132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-08-12 17:04:46,929] [logId] [INFO] [main] RepositoryConfigurationDelegate[201] - Finished Spring Data repository scanning in 30 ms. Found 0 Redis repository interfaces.
[2023-08-12 17:04:47,911] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=12dc8e89-f838-3c32-8a98-7fa60ae466b5
[2023-08-12 17:04:48,197] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:04:48,200] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:04:48,202] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:04:48,282] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:04:48,295] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:04:48,310] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:04:48,316] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$484/259144923] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:04:48,320] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:04:48,334] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:04:48,343] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:04:48,359] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-12 17:04:48,572] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-12 17:04:48,586] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-12 17:04:48,619] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:04:48,620] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:04:49,594] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-12 17:04:50,097] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 17:04:50,169] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:04:50,170] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:04:50,542] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 17:04:51,221] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 17:04:52,850] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x462e5353, L:/192.168.43.8:55178 - R:/192.168.43.128:8091]
[2023-08-12 17:04:52,861] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 98 ms, version:1.6.1,role:TMROLE,channel:[id: 0x462e5353, L:/192.168.43.8:55178 - R:/192.168.43.128:8091]
[2023-08-12 17:04:52,863] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 17:04:52,928] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-12 17:04:52,930] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-12 17:04:52,939] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 17:04:52,939] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 17:04:52,939] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-12 17:04:53,816] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-12 17:04:53,835] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-12 17:04:53,836] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-12 17:04:53,836] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-12 17:04:54,405] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-12 17:04:54,405] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 9758 ms
[2023-08-12 17:04:54,789] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-12 17:04:55,279] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-12 17:04:55,540] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 17:04:55,541] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-12 17:04:55,543] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 17:04:55,556] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xaaa82110, L:/192.168.43.8:55222 - R:/192.168.43.128:8091]
[2023-08-12 17:04:55,557] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 11 ms, version:1.6.1,role:RMROLE,channel:[id: 0xaaa82110, L:/192.168.43.8:55222 - R:/192.168.43.128:8091]
[2023-08-12 17:04:59,241] [logId] [INFO] [main] Version[41] - Redisson 3.12.0
[2023-08-12 17:04:59,627] [logId] [INFO] [redisson-netty-4-17] MasterPubSubConnectionPool[168] - 1 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 17:04:59,628] [logId] [INFO] [redisson-netty-4-4] MasterConnectionPool[168] - 24 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 17:05:05,169] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 17:05:05,199] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 17:05:05,340] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 17:05:05,341] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 17:05:05,577] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$121136f1] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-12 17:05:06,287] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-12 17:05:10,087] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-12 17:05:10,110] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-12 17:05:10,121] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:05:10,121] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:05:10,352] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-12 17:05:11,279] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-12 17:05:11,294] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-12 17:05:11,318] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-12 17:05:11,545] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 33.78 seconds (JVM running for 35.535)
[2023-08-12 17:05:11,561] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-12 17:05:11,575] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-12 17:05:11,576] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-12 17:06:12,288] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-12 17:06:12,291] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-12 17:06:12,300] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 8 ms
[2023-08-12 17:06:12,656] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[60] - requestId：ddd61486158a435fa09fcb97c518536e
[2023-08-12 17:06:12,674] [ddd61486158a435fa09fcb97c518536e] [INFO] [http-nio-8010-exec-1] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-12 17:06:12","token":"10001"}
[2023-08-12 17:06:12,737] [ddd61486158a435fa09fcb97c518536e] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@7d47bc9c
[2023-08-12 17:06:12,767] [ddd61486158a435fa09fcb97c518536e] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566872599627444229]
[2023-08-12 17:06:13,127] [ddd61486158a435fa09fcb97c518536e] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566872599627444229
[2023-08-12 17:06:13,128] [ddd61486158a435fa09fcb97c518536e] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[189] - [192.168.43.128:8091:5566872599627444229] rollback status: Rollbacked
[2023-08-12 17:06:13,130] [ddd61486158a435fa09fcb97c518536e] [INFO] [http-nio-8010-exec-1] RestExceptionHandler[45] - 异常接口:/order/add
[2023-08-12 17:06:13,135] [ddd61486158a435fa09fcb97c518536e] [ERROR] [http-nio-8010-exec-1] RestExceptionHandler[46] - 系统异常:
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: ERR value is not an integer or out of range
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1063)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:920)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.incrBy(LettuceStringCommands.java:229)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.incrBy(DefaultedRedisConnection.java:376)
	at org.springframework.data.redis.core.DefaultValueOperations.lambda$increment$1(DefaultValueOperations.java:167)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:223)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:190)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.increment(DefaultValueOperations.java:167)
	at com.sakura.common.redis.RedisUtil.decr(RedisUtil.java:182)
	at com.sakura.order.service.impl.OrderServiceImpl.saveOrder(OrderServiceImpl.java:84)
	at com.sakura.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$38d4abe2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:204)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:130)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:201)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:171)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$121136f1.saveOrder(<generated>)
	at com.sakura.order.controller.OrderController.addOrder(OrderController.java:45)
	at com.sakura.order.controller.OrderController$$FastClassBySpringCGLIB$$2a079ef2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.sakura.common.log.LogAspect.around(LogAspect.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.controller.OrderController$$EnhancerBySpringCGLIB$$fba0dbc2.addOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandExecutionException: ERR value is not an integer or out of range
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
[2023-08-12 17:07:07,306] [logId] [WARN] [Thread-15] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-12 17:07:07,305] [logId] [WARN] [Thread-6] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-12 17:07:07,306] [logId] [WARN] [Thread-15] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-12 17:07:07,308] [logId] [WARN] [Thread-6] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-12 17:07:08,105] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-12 17:07:08,145] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-12 17:07:08,247] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:9876] result: true
[2023-08-12 17:07:08,249] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:10911] result: true
[2023-08-12 17:07:08,314] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:9876] result: true
[2023-08-12 17:07:08,317] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:10911] result: true
[2023-08-12 17:07:08,625] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-12 17:07:08,641] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-12 17:07:08,643] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x462e5353, L:/192.168.43.8:55178 ! R:/192.168.43.128:8091]
[2023-08-12 17:07:08,644] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x462e5353, L:/192.168.43.8:55178 ! R:/192.168.43.128:8091]
[2023-08-12 17:07:08,644] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x462e5353, L:/192.168.43.8:55178 ! R:/192.168.43.128:8091]
[2023-08-12 17:07:08,652] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x462e5353, L:/192.168.43.8:55178 ! R:/192.168.43.128:8091]
[2023-08-12 17:07:08,653] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x462e5353, L:/192.168.43.8:55178 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:07:08,654] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x462e5353, L:/192.168.43.8:55178 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:07:08,658] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xaaa82110, L:/192.168.43.8:55222 ! R:/192.168.43.128:8091]
[2023-08-12 17:07:08,659] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xaaa82110, L:/192.168.43.8:55222 ! R:/192.168.43.128:8091]
[2023-08-12 17:07:08,660] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xaaa82110, L:/192.168.43.8:55222 ! R:/192.168.43.128:8091]
[2023-08-12 17:07:08,684] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xaaa82110, L:/192.168.43.8:55222 ! R:/192.168.43.128:8091]
[2023-08-12 17:07:08,684] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xaaa82110, L:/192.168.43.8:55222 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:07:08,684] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xaaa82110, L:/192.168.43.8:55222 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:07:35,469] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-12 17:07:35,483] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-12 17:07:35,518] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-12 17:07:37,302] [logId] [INFO] [main] RepositoryConfigurationDelegate[262] - Multiple Spring Data modules found, entering strict repository configuration mode
[2023-08-12 17:07:37,305] [logId] [INFO] [main] RepositoryConfigurationDelegate[132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-08-12 17:07:37,373] [logId] [INFO] [main] RepositoryConfigurationDelegate[201] - Finished Spring Data repository scanning in 32 ms. Found 0 Redis repository interfaces.
[2023-08-12 17:07:38,008] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=12dc8e89-f838-3c32-8a98-7fa60ae466b5
[2023-08-12 17:07:38,164] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:07:38,164] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:07:38,165] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:07:38,206] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:07:38,210] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:07:38,215] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:07:38,218] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$484/6167135] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:07:38,219] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:07:38,223] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:07:38,226] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:07:38,228] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-12 17:07:38,351] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-12 17:07:38,360] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-12 17:07:38,379] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:07:38,381] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:07:39,076] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-12 17:07:39,318] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 17:07:39,360] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:07:39,360] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:07:39,734] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 17:07:40,659] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 17:07:42,374] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x839193ea, L:/192.168.43.8:56242 - R:/192.168.43.128:8091]
[2023-08-12 17:07:42,380] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 88 ms, version:1.6.1,role:TMROLE,channel:[id: 0x839193ea, L:/192.168.43.8:56242 - R:/192.168.43.128:8091]
[2023-08-12 17:07:42,381] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 17:07:42,417] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-12 17:07:42,418] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-12 17:07:42,424] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 17:07:42,424] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 17:07:42,424] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-12 17:07:43,138] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-12 17:07:43,147] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-12 17:07:43,147] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-12 17:07:43,147] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-12 17:07:43,508] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-12 17:07:43,508] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 7974 ms
[2023-08-12 17:07:43,738] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-12 17:07:44,069] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-12 17:07:44,228] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 17:07:44,229] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-12 17:07:44,229] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 17:07:44,240] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x004fb803, L:/192.168.43.8:56285 - R:/192.168.43.128:8091]
[2023-08-12 17:07:44,241] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 9 ms, version:1.6.1,role:RMROLE,channel:[id: 0x004fb803, L:/192.168.43.8:56285 - R:/192.168.43.128:8091]
[2023-08-12 17:07:47,717] [logId] [INFO] [main] Version[41] - Redisson 3.12.0
[2023-08-12 17:07:47,950] [logId] [INFO] [redisson-netty-4-28] MasterConnectionPool[168] - 24 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 17:07:47,950] [logId] [INFO] [redisson-netty-4-30] MasterPubSubConnectionPool[168] - 1 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 17:07:52,003] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 17:07:52,022] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 17:07:52,084] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 17:07:52,085] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 17:07:52,208] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$3cafd0e2] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-12 17:07:52,675] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-12 17:07:54,669] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-12 17:07:54,679] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-12 17:07:54,687] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:07:54,687] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:07:54,910] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-12 17:07:55,568] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-12 17:07:55,577] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-12 17:07:55,614] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-12 17:07:55,784] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 29.181 seconds (JVM running for 31.299)
[2023-08-12 17:07:55,799] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-12 17:07:55,803] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-12 17:07:55,804] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-12 17:08:04,077] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-12 17:08:04,079] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-12 17:08:04,090] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 8 ms
[2023-08-12 17:08:04,786] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[60] - requestId：a4c451fdf3164e4292e7b03ec8851f3b
[2023-08-12 17:08:04,810] [a4c451fdf3164e4292e7b03ec8851f3b] [INFO] [http-nio-8010-exec-1] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-12 17:08:04","token":"10001"}
[2023-08-12 17:08:04,919] [a4c451fdf3164e4292e7b03ec8851f3b] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@7abed9df
[2023-08-12 17:08:04,956] [a4c451fdf3164e4292e7b03ec8851f3b] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566872599627444230]
[2023-08-12 17:08:05,741] [a4c451fdf3164e4292e7b03ec8851f3b] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566872599627444230
[2023-08-12 17:08:05,747] [a4c451fdf3164e4292e7b03ec8851f3b] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[189] - [192.168.43.128:8091:5566872599627444230] rollback status: Rollbacked
[2023-08-12 17:08:05,752] [a4c451fdf3164e4292e7b03ec8851f3b] [INFO] [http-nio-8010-exec-1] RestExceptionHandler[45] - 异常接口:/order/add
[2023-08-12 17:08:05,767] [a4c451fdf3164e4292e7b03ec8851f3b] [ERROR] [http-nio-8010-exec-1] RestExceptionHandler[46] - 系统异常:
org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: ERR value is not an integer or out of range
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1063)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:920)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.incrBy(LettuceStringCommands.java:229)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.incrBy(DefaultedRedisConnection.java:376)
	at org.springframework.data.redis.core.DefaultValueOperations.lambda$increment$1(DefaultValueOperations.java:167)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:223)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:190)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.increment(DefaultValueOperations.java:167)
	at com.sakura.common.redis.RedisUtil.decr(RedisUtil.java:182)
	at com.sakura.order.service.impl.OrderServiceImpl.saveOrder(OrderServiceImpl.java:84)
	at com.sakura.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$38d4abe2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:204)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:130)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:201)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:171)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$3cafd0e2.saveOrder(<generated>)
	at com.sakura.order.controller.OrderController.addOrder(OrderController.java:45)
	at com.sakura.order.controller.OrderController$$FastClassBySpringCGLIB$$2a079ef2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.sakura.common.log.LogAspect.around(LogAspect.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.controller.OrderController$$EnhancerBySpringCGLIB$$f790e53d.addOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandExecutionException: ERR value is not an integer or out of range
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:147)
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:116)
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120)
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
[2023-08-12 17:14:05,507] [logId] [WARN] [Thread-17] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-12 17:14:05,507] [logId] [WARN] [Thread-6] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-12 17:14:05,508] [logId] [WARN] [Thread-17] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-12 17:14:05,508] [logId] [WARN] [Thread-6] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-12 17:14:06,117] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-12 17:14:06,123] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-12 17:14:06,156] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:9876] result: true
[2023-08-12 17:14:06,157] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:10911] result: true
[2023-08-12 17:14:06,165] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:9876] result: true
[2023-08-12 17:14:06,169] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:10911] result: true
[2023-08-12 17:14:06,356] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-12 17:14:06,361] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-12 17:14:06,363] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x839193ea, L:/192.168.43.8:56242 ! R:/192.168.43.128:8091]
[2023-08-12 17:14:06,364] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x839193ea, L:/192.168.43.8:56242 ! R:/192.168.43.128:8091]
[2023-08-12 17:14:06,364] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x839193ea, L:/192.168.43.8:56242 ! R:/192.168.43.128:8091]
[2023-08-12 17:14:06,365] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x839193ea, L:/192.168.43.8:56242 ! R:/192.168.43.128:8091]
[2023-08-12 17:14:06,365] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x839193ea, L:/192.168.43.8:56242 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:14:06,365] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x839193ea, L:/192.168.43.8:56242 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:14:06,365] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x004fb803, L:/192.168.43.8:56285 ! R:/192.168.43.128:8091]
[2023-08-12 17:14:06,366] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x004fb803, L:/192.168.43.8:56285 ! R:/192.168.43.128:8091]
[2023-08-12 17:14:06,366] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x004fb803, L:/192.168.43.8:56285 ! R:/192.168.43.128:8091]
[2023-08-12 17:14:06,366] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x004fb803, L:/192.168.43.8:56285 ! R:/192.168.43.128:8091]
[2023-08-12 17:14:06,366] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x004fb803, L:/192.168.43.8:56285 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:14:06,366] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x004fb803, L:/192.168.43.8:56285 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:16:39,017] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-12 17:16:39,026] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-12 17:16:39,057] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-12 17:16:39,982] [logId] [INFO] [main] RepositoryConfigurationDelegate[262] - Multiple Spring Data modules found, entering strict repository configuration mode
[2023-08-12 17:16:39,984] [logId] [INFO] [main] RepositoryConfigurationDelegate[132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-08-12 17:16:40,012] [logId] [INFO] [main] RepositoryConfigurationDelegate[201] - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
[2023-08-12 17:16:40,313] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=12dc8e89-f838-3c32-8a98-7fa60ae466b5
[2023-08-12 17:16:40,438] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:16:40,439] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:16:40,439] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:16:40,473] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:16:40,480] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:16:40,484] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:16:40,485] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$484/6167135] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:16:40,487] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:16:40,493] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:16:40,495] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:16:40,497] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-12 17:16:40,569] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-12 17:16:40,579] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-12 17:16:40,597] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:16:40,598] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:16:41,240] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-12 17:16:41,529] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 17:16:41,579] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:16:41,579] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:16:41,915] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 17:16:42,677] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 17:16:44,720] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x363c9730, L:/192.168.43.8:57409 - R:/192.168.43.128:8091]
[2023-08-12 17:16:44,729] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 69 ms, version:1.6.1,role:TMROLE,channel:[id: 0x363c9730, L:/192.168.43.8:57409 - R:/192.168.43.128:8091]
[2023-08-12 17:16:44,730] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 17:16:44,763] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-12 17:16:44,764] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-12 17:16:44,778] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 17:16:44,779] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 17:16:44,779] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-12 17:16:45,668] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-12 17:16:45,685] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-12 17:16:45,686] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-12 17:16:45,686] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-12 17:16:45,908] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-12 17:16:45,909] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 6834 ms
[2023-08-12 17:16:46,322] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-12 17:16:46,717] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-12 17:16:46,900] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 17:16:46,902] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-12 17:16:46,906] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 17:16:46,937] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x3025da5d, L:/192.168.43.8:57517 - R:/192.168.43.128:8091]
[2023-08-12 17:16:46,939] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 27 ms, version:1.6.1,role:RMROLE,channel:[id: 0x3025da5d, L:/192.168.43.8:57517 - R:/192.168.43.128:8091]
[2023-08-12 17:16:48,946] [logId] [INFO] [main] Version[41] - Redisson 3.12.0
[2023-08-12 17:16:49,105] [logId] [INFO] [redisson-netty-4-8] MasterConnectionPool[168] - 24 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 17:16:49,105] [logId] [INFO] [redisson-netty-4-27] MasterPubSubConnectionPool[168] - 1 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 17:16:52,833] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 17:16:52,847] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 17:16:52,937] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 17:16:52,940] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 17:16:53,126] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$3cafd0e2] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-12 17:16:53,688] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-12 17:16:58,382] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-12 17:16:58,417] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-12 17:16:58,422] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:16:58,422] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:16:58,692] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-12 17:16:59,240] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-12 17:16:59,257] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-12 17:16:59,283] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-12 17:16:59,509] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 27.72 seconds (JVM running for 29.053)
[2023-08-12 17:16:59,519] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-12 17:16:59,522] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-12 17:16:59,522] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-12 17:17:18,203] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-12 17:17:18,203] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-12 17:17:18,212] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 7 ms
[2023-08-12 17:17:18,759] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[60] - requestId：226cf379633e437a98a47e3b3f78973c
[2023-08-12 17:17:18,781] [226cf379633e437a98a47e3b3f78973c] [INFO] [http-nio-8010-exec-1] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-12 17:17:18","token":"10001"}
[2023-08-12 17:17:18,882] [226cf379633e437a98a47e3b3f78973c] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@1695fabf
[2023-08-12 17:17:18,914] [226cf379633e437a98a47e3b3f78973c] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566872599627444231]
[2023-08-12 17:17:19,737] [226cf379633e437a98a47e3b3f78973c] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-12 17:17:19,738] [226cf379633e437a98a47e3b3f78973c] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: 226cf379633e437a98a47e3b3f78973c
[2023-08-12 17:17:19,740] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-12 17:17:19,741] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] requestId: 226cf379633e437a98a47e3b3f78973c
[2023-08-12 17:17:19,741] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566872599627444231
[2023-08-12 17:17:19,742] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-12 17:17:20,728] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (986ms)
[2023-08-12 17:17:20,730] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-12 17:17:20,730] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-12 17:17:20,731] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Sat, 12 Aug 2023 09:17:20 GMT
[2023-08-12 17:17:20,731] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-12 17:17:20,731] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-12 17:17:20,731] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-12 17:17:20,732] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":13,"time":"2023-08-12 09:17:20"}
[2023-08-12 17:17:20,732] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-12 17:17:20,743] [226cf379633e437a98a47e3b3f78973c] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[94] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=13, time=Sat Aug 12 17:17:20 CST 2023)
[2023-08-12 17:17:20,779] [226cf379633e437a98a47e3b3f78973c] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-12 17:17:20,779] [226cf379633e437a98a47e3b3f78973c] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: 226cf379633e437a98a47e3b3f78973c
[2023-08-12 17:17:20,780] [226cf379633e437a98a47e3b3f78973c] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-12 17:17:20,780] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-12 17:17:21,238] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (458ms)
[2023-08-12 17:17:21,239] [226cf379633e437a98a47e3b3f78973c] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[132] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Sat Aug 12 17:17:21 CST 2023)
[2023-08-12 17:17:21,315] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-12 17:17:21,327] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081209172077667550020(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-12 17:17:21,629] [logId] [INFO] [NettyClientPublicExecutor_1] OrderServiceImpl[115] - 推送扣减库存消息成功：{"num":1,"productNo":"10001"}
[2023-08-12 17:17:21,674] [226cf379633e437a98a47e3b3f78973c] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-12 17:17:21,688] [226cf379633e437a98a47e3b3f78973c] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566872599627444231
[2023-08-12 17:17:21,689] [226cf379633e437a98a47e3b3f78973c] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566872599627444231] commit status: Committed
[2023-08-12 17:17:21,695] [226cf379633e437a98a47e3b3f78973c] [INFO] [http-nio-8010-exec-1] LogUtil[47] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-12 17:17:21"}
[2023-08-12 17:17:21,712] [226cf379633e437a98a47e3b3f78973c] [INFO] [Feh_Optimize_1] LogUtil[278] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"226cf379633e437a98a47e3b3f78973c","requestMethod":"POST","success":true,"type":1}
[2023-08-12 17:17:22,559] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566872599627444231,branchId=5566872599627444232,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"skipCheckLock":true}
[2023-08-12 17:17:22,561] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566872599627444231 5566872599627444232 jdbc:mysql://192.168.43.128:3306/order {"skipCheckLock":true}
[2023-08-12 17:17:22,562] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-12 17:22:43,054] [logId] [INFO] [http-nio-8010-exec-3] LogUtil[60] - requestId：677e2ea08ac84d77ade0aa9489def2b1
[2023-08-12 17:22:43,056] [677e2ea08ac84d77ade0aa9489def2b1] [INFO] [http-nio-8010-exec-3] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-12 17:22:43","token":"10001"}
[2023-08-12 17:22:43,088] [677e2ea08ac84d77ade0aa9489def2b1] [INFO] [http-nio-8010-exec-3] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566872599627444233]
[2023-08-12 17:22:43,108] [677e2ea08ac84d77ade0aa9489def2b1] [INFO] [http-nio-8010-exec-3] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-12 17:22:43,110] [677e2ea08ac84d77ade0aa9489def2b1] [INFO] [http-nio-8010-exec-3] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: 677e2ea08ac84d77ade0aa9489def2b1
[2023-08-12 17:22:43,111] [677e2ea08ac84d77ade0aa9489def2b1] [INFO] [http-nio-8010-exec-3] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-12 17:22:43,114] [677e2ea08ac84d77ade0aa9489def2b1] [DEBUG] [http-nio-8010-exec-3] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-12 17:22:43,123] [logId] [INFO] [NettyClientPublicExecutor_2] OrderServiceImpl[115] - 推送扣减库存消息成功：{"num":1,"productNo":"10001"}
[2023-08-12 17:22:43,152] [677e2ea08ac84d77ade0aa9489def2b1] [DEBUG] [http-nio-8010-exec-3] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (35ms)
[2023-08-12 17:22:43,158] [677e2ea08ac84d77ade0aa9489def2b1] [INFO] [http-nio-8010-exec-3] OrderServiceImpl[132] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Sat Aug 12 17:22:43 CST 2023)
[2023-08-12 17:22:43,164] [677e2ea08ac84d77ade0aa9489def2b1] [DEBUG] [http-nio-8010-exec-3] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-12 17:22:43,167] [677e2ea08ac84d77ade0aa9489def2b1] [DEBUG] [http-nio-8010-exec-3] insert[143] - ==> Parameters: 2023081209224310798398190(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-12 17:22:43,222] [677e2ea08ac84d77ade0aa9489def2b1] [DEBUG] [http-nio-8010-exec-3] insert[143] - <==    Updates: 1
[2023-08-12 17:22:43,232] [677e2ea08ac84d77ade0aa9489def2b1] [INFO] [http-nio-8010-exec-3] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566872599627444233
[2023-08-12 17:22:43,233] [677e2ea08ac84d77ade0aa9489def2b1] [INFO] [http-nio-8010-exec-3] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566872599627444233] commit status: Committed
[2023-08-12 17:22:43,234] [677e2ea08ac84d77ade0aa9489def2b1] [INFO] [http-nio-8010-exec-3] LogUtil[47] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-12 17:22:43"}
[2023-08-12 17:22:43,238] [677e2ea08ac84d77ade0aa9489def2b1] [INFO] [Feh_Optimize_2] LogUtil[278] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"677e2ea08ac84d77ade0aa9489def2b1","requestMethod":"POST","success":true,"type":1}
[2023-08-12 17:22:43,558] [logId] [INFO] [rpcDispatch_RMROLE_1_2_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566872599627444233,branchId=5566872599627444234,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"skipCheckLock":true}
[2023-08-12 17:22:43,559] [logId] [INFO] [rpcDispatch_RMROLE_1_2_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566872599627444233 5566872599627444234 jdbc:mysql://192.168.43.128:3306/order {"skipCheckLock":true}
[2023-08-12 17:22:43,559] [logId] [INFO] [rpcDispatch_RMROLE_1_2_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-12 17:23:43,432] [logId] [INFO] [http-nio-8010-exec-4] LogUtil[60] - requestId：e8c0fc898eba4f1c94b4abbe4cf7edf2
[2023-08-12 17:23:43,435] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [INFO] [http-nio-8010-exec-4] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10002"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-12 17:23:43","token":"10001"}
[2023-08-12 17:23:43,445] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [INFO] [http-nio-8010-exec-4] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566872599627444235]
[2023-08-12 17:23:43,461] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [INFO] [http-nio-8010-exec-4] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-12 17:23:43,463] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [INFO] [http-nio-8010-exec-4] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: e8c0fc898eba4f1c94b4abbe4cf7edf2
[2023-08-12 17:23:43,465] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [DEBUG] [http-nio-8010-exec-4] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10002 HTTP/1.1
[2023-08-12 17:23:43,465] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [DEBUG] [http-nio-8010-exec-4] StockFeignService[72] - [StockFeignService#getProductNum] requestId: e8c0fc898eba4f1c94b4abbe4cf7edf2
[2023-08-12 17:23:43,465] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [DEBUG] [http-nio-8010-exec-4] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566872599627444235
[2023-08-12 17:23:43,466] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [DEBUG] [http-nio-8010-exec-4] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-12 17:23:44,868] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [DEBUG] [http-nio-8010-exec-4] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (1402ms)
[2023-08-12 17:23:44,869] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [DEBUG] [http-nio-8010-exec-4] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-12 17:23:44,870] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [DEBUG] [http-nio-8010-exec-4] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-12 17:23:44,870] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [DEBUG] [http-nio-8010-exec-4] StockFeignService[72] - [StockFeignService#getProductNum] date: Sat, 12 Aug 2023 09:23:44 GMT
[2023-08-12 17:23:44,870] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [DEBUG] [http-nio-8010-exec-4] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-12 17:23:44,870] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [DEBUG] [http-nio-8010-exec-4] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-12 17:23:44,870] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [DEBUG] [http-nio-8010-exec-4] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-12 17:23:44,875] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [DEBUG] [http-nio-8010-exec-4] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":0,"time":"2023-08-12 09:23:44"}
[2023-08-12 17:23:44,876] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [DEBUG] [http-nio-8010-exec-4] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (90-byte body)
[2023-08-12 17:23:44,878] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [INFO] [http-nio-8010-exec-4] OrderServiceImpl[94] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=0, time=Sat Aug 12 17:23:44 CST 2023)
[2023-08-12 17:23:44,885] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [ERROR] [http-nio-8010-exec-4] OrderServiceImpl[101] - 新增订单查询商品库存异常：商品库存不足
com.sakura.common.exception.BusinessException: 商品库存不足
	at com.sakura.order.service.impl.OrderServiceImpl.saveOrder(OrderServiceImpl.java:96)
	at com.sakura.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$38d4abe2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:204)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:130)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:201)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:171)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$3cafd0e2.saveOrder(<generated>)
	at com.sakura.order.controller.OrderController.addOrder(OrderController.java:45)
	at com.sakura.order.controller.OrderController$$FastClassBySpringCGLIB$$2a079ef2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.sakura.common.log.LogAspect.around(LogAspect.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.controller.OrderController$$EnhancerBySpringCGLIB$$415f4cdd.addOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 17:23:44,904] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [INFO] [http-nio-8010-exec-4] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566872599627444235
[2023-08-12 17:23:44,904] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [INFO] [http-nio-8010-exec-4] DefaultGlobalTransaction[189] - [192.168.43.128:8091:5566872599627444235] rollback status: Rollbacked
[2023-08-12 17:23:44,910] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [INFO] [http-nio-8010-exec-4] RestExceptionHandler[33] - 异常接口:/order/add
[2023-08-12 17:23:44,911] [e8c0fc898eba4f1c94b4abbe4cf7edf2] [INFO] [http-nio-8010-exec-4] RestExceptionHandler[34] - 业务异常:查询商品库存信息异常
[2023-08-12 17:24:05,235] [logId] [INFO] [http-nio-8010-exec-5] LogUtil[60] - requestId：bb94c083785e4596b90d273762d03fcf
[2023-08-12 17:24:05,238] [bb94c083785e4596b90d273762d03fcf] [INFO] [http-nio-8010-exec-5] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10002"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-12 17:24:05","token":"10001"}
[2023-08-12 17:24:05,249] [bb94c083785e4596b90d273762d03fcf] [INFO] [http-nio-8010-exec-5] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566872599627444236]
[2023-08-12 17:24:05,268] [bb94c083785e4596b90d273762d03fcf] [INFO] [http-nio-8010-exec-5] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-12 17:24:05,269] [bb94c083785e4596b90d273762d03fcf] [INFO] [http-nio-8010-exec-5] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: bb94c083785e4596b90d273762d03fcf
[2023-08-12 17:24:05,272] [bb94c083785e4596b90d273762d03fcf] [DEBUG] [http-nio-8010-exec-5] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10002 HTTP/1.1
[2023-08-12 17:24:05,272] [bb94c083785e4596b90d273762d03fcf] [DEBUG] [http-nio-8010-exec-5] StockFeignService[72] - [StockFeignService#getProductNum] requestId: bb94c083785e4596b90d273762d03fcf
[2023-08-12 17:24:05,272] [bb94c083785e4596b90d273762d03fcf] [DEBUG] [http-nio-8010-exec-5] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566872599627444236
[2023-08-12 17:24:05,272] [bb94c083785e4596b90d273762d03fcf] [DEBUG] [http-nio-8010-exec-5] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-12 17:24:05,310] [bb94c083785e4596b90d273762d03fcf] [DEBUG] [http-nio-8010-exec-5] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (36ms)
[2023-08-12 17:24:05,310] [bb94c083785e4596b90d273762d03fcf] [DEBUG] [http-nio-8010-exec-5] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-12 17:24:05,311] [bb94c083785e4596b90d273762d03fcf] [DEBUG] [http-nio-8010-exec-5] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-12 17:24:05,311] [bb94c083785e4596b90d273762d03fcf] [DEBUG] [http-nio-8010-exec-5] StockFeignService[72] - [StockFeignService#getProductNum] date: Sat, 12 Aug 2023 09:24:05 GMT
[2023-08-12 17:24:05,311] [bb94c083785e4596b90d273762d03fcf] [DEBUG] [http-nio-8010-exec-5] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-12 17:24:05,311] [bb94c083785e4596b90d273762d03fcf] [DEBUG] [http-nio-8010-exec-5] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-12 17:24:05,311] [bb94c083785e4596b90d273762d03fcf] [DEBUG] [http-nio-8010-exec-5] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-12 17:24:05,311] [bb94c083785e4596b90d273762d03fcf] [DEBUG] [http-nio-8010-exec-5] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":0,"time":"2023-08-12 09:24:05"}
[2023-08-12 17:24:05,311] [bb94c083785e4596b90d273762d03fcf] [DEBUG] [http-nio-8010-exec-5] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (90-byte body)
[2023-08-12 17:24:05,312] [bb94c083785e4596b90d273762d03fcf] [INFO] [http-nio-8010-exec-5] OrderServiceImpl[94] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=0, time=Sat Aug 12 17:24:05 CST 2023)
[2023-08-12 17:24:05,313] [bb94c083785e4596b90d273762d03fcf] [ERROR] [http-nio-8010-exec-5] OrderServiceImpl[101] - 新增订单查询商品库存异常：商品库存不足
com.sakura.common.exception.BusinessException: 商品库存不足
	at com.sakura.order.service.impl.OrderServiceImpl.saveOrder(OrderServiceImpl.java:96)
	at com.sakura.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$38d4abe2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:204)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:130)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:201)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:171)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$3cafd0e2.saveOrder(<generated>)
	at com.sakura.order.controller.OrderController.addOrder(OrderController.java:45)
	at com.sakura.order.controller.OrderController$$FastClassBySpringCGLIB$$2a079ef2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.sakura.common.log.LogAspect.around(LogAspect.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.controller.OrderController$$EnhancerBySpringCGLIB$$415f4cdd.addOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-12 17:24:05,332] [bb94c083785e4596b90d273762d03fcf] [INFO] [http-nio-8010-exec-5] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566872599627444236
[2023-08-12 17:24:05,333] [bb94c083785e4596b90d273762d03fcf] [INFO] [http-nio-8010-exec-5] DefaultGlobalTransaction[189] - [192.168.43.128:8091:5566872599627444236] rollback status: Rollbacked
[2023-08-12 17:24:05,333] [bb94c083785e4596b90d273762d03fcf] [INFO] [http-nio-8010-exec-5] RestExceptionHandler[33] - 异常接口:/order/add
[2023-08-12 17:24:05,334] [bb94c083785e4596b90d273762d03fcf] [INFO] [http-nio-8010-exec-5] RestExceptionHandler[34] - 业务异常:查询商品库存信息异常
[2023-08-12 17:37:28,261] [logId] [INFO] [http-nio-8010-exec-7] LogUtil[60] - requestId：d711745f0ed04f2bb3cf324641b8db12
[2023-08-12 17:37:28,262] [d711745f0ed04f2bb3cf324641b8db12] [INFO] [http-nio-8010-exec-7] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-12 17:37:28","token":"10001"}
[2023-08-12 17:37:28,293] [d711745f0ed04f2bb3cf324641b8db12] [INFO] [http-nio-8010-exec-7] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566872599627444237]
[2023-08-12 17:37:28,332] [d711745f0ed04f2bb3cf324641b8db12] [INFO] [http-nio-8010-exec-7] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-12 17:37:28,335] [d711745f0ed04f2bb3cf324641b8db12] [INFO] [http-nio-8010-exec-7] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: d711745f0ed04f2bb3cf324641b8db12
[2023-08-12 17:37:28,336] [d711745f0ed04f2bb3cf324641b8db12] [INFO] [http-nio-8010-exec-7] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-12 17:37:28,336] [d711745f0ed04f2bb3cf324641b8db12] [DEBUG] [http-nio-8010-exec-7] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-12 17:37:28,349] [logId] [INFO] [NettyClientPublicExecutor_3] OrderServiceImpl[115] - 推送扣减库存消息成功：{"num":1,"productNo":"10001"}
[2023-08-12 17:37:28,378] [d711745f0ed04f2bb3cf324641b8db12] [DEBUG] [http-nio-8010-exec-7] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (41ms)
[2023-08-12 17:37:28,385] [d711745f0ed04f2bb3cf324641b8db12] [INFO] [http-nio-8010-exec-7] OrderServiceImpl[132] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Sat Aug 12 17:37:28 CST 2023)
[2023-08-12 17:37:28,387] [d711745f0ed04f2bb3cf324641b8db12] [DEBUG] [http-nio-8010-exec-7] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-12 17:37:28,389] [d711745f0ed04f2bb3cf324641b8db12] [DEBUG] [http-nio-8010-exec-7] insert[143] - ==> Parameters: 2023081209372833056990072(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-12 17:37:28,588] [d711745f0ed04f2bb3cf324641b8db12] [DEBUG] [http-nio-8010-exec-7] insert[143] - <==    Updates: 1
[2023-08-12 17:37:28,683] [d711745f0ed04f2bb3cf324641b8db12] [INFO] [http-nio-8010-exec-7] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566872599627444237
[2023-08-12 17:37:28,686] [d711745f0ed04f2bb3cf324641b8db12] [INFO] [http-nio-8010-exec-7] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566872599627444237] commit status: Committed
[2023-08-12 17:37:28,688] [d711745f0ed04f2bb3cf324641b8db12] [INFO] [http-nio-8010-exec-7] LogUtil[47] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-12 17:37:28"}
[2023-08-12 17:37:28,695] [d711745f0ed04f2bb3cf324641b8db12] [INFO] [Feh_Optimize_3] LogUtil[278] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"d711745f0ed04f2bb3cf324641b8db12","requestMethod":"POST","success":true,"type":1}
[2023-08-12 17:37:29,583] [logId] [INFO] [rpcDispatch_RMROLE_1_3_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566872599627444237,branchId=5566872599627444238,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"skipCheckLock":true}
[2023-08-12 17:37:29,586] [logId] [INFO] [rpcDispatch_RMROLE_1_3_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566872599627444237 5566872599627444238 jdbc:mysql://192.168.43.128:3306/order {"skipCheckLock":true}
[2023-08-12 17:37:29,588] [logId] [INFO] [rpcDispatch_RMROLE_1_3_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-12 17:40:21,095] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-12 17:40:21,095] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-12 17:40:21,096] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-12 17:40:21,100] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-12 17:40:21,635] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-12 17:40:21,639] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-12 17:40:21,670] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:9876] result: true
[2023-08-12 17:40:21,672] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:10911] result: true
[2023-08-12 17:40:21,676] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:9876] result: true
[2023-08-12 17:40:21,677] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:10911] result: true
[2023-08-12 17:40:21,835] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-12 17:40:21,838] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-12 17:40:21,839] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x363c9730, L:/192.168.43.8:57409 ! R:/192.168.43.128:8091]
[2023-08-12 17:40:21,839] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x363c9730, L:/192.168.43.8:57409 ! R:/192.168.43.128:8091]
[2023-08-12 17:40:21,839] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x363c9730, L:/192.168.43.8:57409 ! R:/192.168.43.128:8091]
[2023-08-12 17:40:21,840] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x363c9730, L:/192.168.43.8:57409 ! R:/192.168.43.128:8091]
[2023-08-12 17:40:21,840] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x363c9730, L:/192.168.43.8:57409 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:40:21,840] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x363c9730, L:/192.168.43.8:57409 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:40:21,840] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x3025da5d, L:/192.168.43.8:57517 ! R:/192.168.43.128:8091]
[2023-08-12 17:40:21,841] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x3025da5d, L:/192.168.43.8:57517 ! R:/192.168.43.128:8091]
[2023-08-12 17:40:21,841] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x3025da5d, L:/192.168.43.8:57517 ! R:/192.168.43.128:8091]
[2023-08-12 17:40:21,841] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x3025da5d, L:/192.168.43.8:57517 ! R:/192.168.43.128:8091]
[2023-08-12 17:40:21,841] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3025da5d, L:/192.168.43.8:57517 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:40:21,841] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3025da5d, L:/192.168.43.8:57517 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:40:34,075] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-12 17:40:34,105] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-12 17:40:34,175] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-12 17:40:36,889] [logId] [INFO] [main] RepositoryConfigurationDelegate[262] - Multiple Spring Data modules found, entering strict repository configuration mode
[2023-08-12 17:40:36,897] [logId] [INFO] [main] RepositoryConfigurationDelegate[132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-08-12 17:40:36,942] [logId] [INFO] [main] RepositoryConfigurationDelegate[201] - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
[2023-08-12 17:40:38,268] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=12dc8e89-f838-3c32-8a98-7fa60ae466b5
[2023-08-12 17:40:38,592] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:40:38,592] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:40:38,593] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:40:38,706] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:40:38,744] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:40:38,750] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:40:38,751] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$484/6167135] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:40:38,752] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:40:38,764] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:40:38,779] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:40:38,808] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-12 17:40:39,219] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-12 17:40:39,271] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-12 17:40:39,322] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:40:39,323] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:40:40,255] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-12 17:40:40,659] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 17:40:40,721] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:40:40,722] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:40:41,061] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 17:40:41,722] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 17:40:43,283] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x7f34affd, L:/192.168.43.8:60071 - R:/192.168.43.128:8091]
[2023-08-12 17:40:43,290] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 64 ms, version:1.6.1,role:TMROLE,channel:[id: 0x7f34affd, L:/192.168.43.8:60071 - R:/192.168.43.128:8091]
[2023-08-12 17:40:43,291] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 17:40:43,340] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-12 17:40:43,341] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-12 17:40:43,347] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 17:40:43,347] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 17:40:43,347] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-12 17:40:44,020] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-12 17:40:44,056] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-12 17:40:44,056] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-12 17:40:44,057] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-12 17:40:44,536] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-12 17:40:44,537] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 10317 ms
[2023-08-12 17:40:45,088] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-12 17:40:45,495] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-12 17:40:45,658] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 17:40:45,660] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-12 17:40:45,661] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 17:40:45,670] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x1586d6f8, L:/192.168.43.8:60094 - R:/192.168.43.128:8091]
[2023-08-12 17:40:45,671] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 7 ms, version:1.6.1,role:RMROLE,channel:[id: 0x1586d6f8, L:/192.168.43.8:60094 - R:/192.168.43.128:8091]
[2023-08-12 17:40:48,582] [logId] [INFO] [main] Version[41] - Redisson 3.12.0
[2023-08-12 17:40:48,735] [logId] [INFO] [redisson-netty-4-17] MasterPubSubConnectionPool[168] - 1 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 17:40:48,736] [logId] [INFO] [redisson-netty-4-19] MasterConnectionPool[168] - 24 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 17:40:54,644] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 17:40:54,657] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 17:40:54,751] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 17:40:54,751] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 17:40:54,990] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$3cafd0e2] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-12 17:40:56,038] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-12 17:41:01,387] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-12 17:41:01,423] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-12 17:41:01,434] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:41:01,435] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:41:02,069] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-12 17:41:04,119] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-12 17:41:04,153] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-12 17:41:04,229] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-12 17:41:04,812] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 37.882 seconds (JVM running for 39.105)
[2023-08-12 17:41:04,839] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-12 17:41:04,861] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-12 17:41:04,864] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-12 17:41:51,750] [logId] [INFO] [http-nio-8010-exec-5] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-12 17:41:51,750] [logId] [INFO] [http-nio-8010-exec-5] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-12 17:41:51,754] [logId] [INFO] [http-nio-8010-exec-5] DispatcherServlet[547] - Completed initialization in 3 ms
[2023-08-12 17:41:52,090] [logId] [INFO] [http-nio-8010-exec-5] LogUtil[60] - requestId：48dc3f5565c9426fa7713fa74f0ef567
[2023-08-12 17:41:52,101] [48dc3f5565c9426fa7713fa74f0ef567] [INFO] [http-nio-8010-exec-5] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-12 17:41:52","token":"10001"}
[2023-08-12 17:41:52,144] [48dc3f5565c9426fa7713fa74f0ef567] [INFO] [http-nio-8010-exec-5] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@5e136de0
[2023-08-12 17:41:52,161] [48dc3f5565c9426fa7713fa74f0ef567] [INFO] [http-nio-8010-exec-5] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566872599627444239]
[2023-08-12 17:41:52,690] [48dc3f5565c9426fa7713fa74f0ef567] [INFO] [http-nio-8010-exec-5] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-12 17:41:52,691] [48dc3f5565c9426fa7713fa74f0ef567] [INFO] [http-nio-8010-exec-5] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: 48dc3f5565c9426fa7713fa74f0ef567
[2023-08-12 17:41:52,691] [48dc3f5565c9426fa7713fa74f0ef567] [INFO] [http-nio-8010-exec-5] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-12 17:41:52,693] [48dc3f5565c9426fa7713fa74f0ef567] [DEBUG] [http-nio-8010-exec-5] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-12 17:41:53,301] [logId] [INFO] [NettyClientPublicExecutor_1] OrderServiceImpl[115] - 推送扣减库存消息成功：{"num":1,"productNo":"10001"}
[2023-08-12 17:41:53,311] [48dc3f5565c9426fa7713fa74f0ef567] [DEBUG] [http-nio-8010-exec-5] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (617ms)
[2023-08-12 17:41:53,333] [48dc3f5565c9426fa7713fa74f0ef567] [INFO] [http-nio-8010-exec-5] OrderServiceImpl[132] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Sat Aug 12 17:41:53 CST 2023)
[2023-08-12 17:41:53,422] [48dc3f5565c9426fa7713fa74f0ef567] [DEBUG] [http-nio-8010-exec-5] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-12 17:41:53,442] [48dc3f5565c9426fa7713fa74f0ef567] [DEBUG] [http-nio-8010-exec-5] insert[143] - ==> Parameters: 2023081209415251863006180(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-12 17:41:53,752] [48dc3f5565c9426fa7713fa74f0ef567] [DEBUG] [http-nio-8010-exec-5] insert[143] - <==    Updates: 1
[2023-08-12 17:41:53,762] [48dc3f5565c9426fa7713fa74f0ef567] [INFO] [http-nio-8010-exec-5] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566872599627444239
[2023-08-12 17:41:53,763] [48dc3f5565c9426fa7713fa74f0ef567] [INFO] [http-nio-8010-exec-5] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566872599627444239] commit status: Committed
[2023-08-12 17:41:53,765] [48dc3f5565c9426fa7713fa74f0ef567] [INFO] [http-nio-8010-exec-5] LogUtil[47] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-12 17:41:53"}
[2023-08-12 17:41:53,783] [48dc3f5565c9426fa7713fa74f0ef567] [INFO] [Feh_Optimize_1] LogUtil[278] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"48dc3f5565c9426fa7713fa74f0ef567","requestMethod":"POST","success":true,"type":1}
[2023-08-12 17:41:54,567] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566872599627444239,branchId=5566872599627444240,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"skipCheckLock":true}
[2023-08-12 17:41:54,569] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566872599627444239 5566872599627444240 jdbc:mysql://192.168.43.128:3306/order {"skipCheckLock":true}
[2023-08-12 17:41:54,569] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-12 17:43:10,385] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-12 17:43:10,389] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-12 17:43:10,389] [logId] [WARN] [Thread-12] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-12 17:43:10,389] [logId] [WARN] [Thread-12] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-12 17:43:11,381] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-12 17:43:11,392] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-12 17:43:11,483] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:9876] result: true
[2023-08-12 17:43:11,487] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:10911] result: true
[2023-08-12 17:43:11,498] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:9876] result: true
[2023-08-12 17:43:11,505] [logId] [INFO] [NettyClientSelector_1] RocketmqRemoting[95] - closeChannel: close the connection to remote address[192.168.43.118:10911] result: true
[2023-08-12 17:43:11,709] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-12 17:43:11,716] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-12 17:43:11,717] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x7f34affd, L:/192.168.43.8:60071 ! R:/192.168.43.128:8091]
[2023-08-12 17:43:11,718] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x7f34affd, L:/192.168.43.8:60071 ! R:/192.168.43.128:8091]
[2023-08-12 17:43:11,718] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x7f34affd, L:/192.168.43.8:60071 ! R:/192.168.43.128:8091]
[2023-08-12 17:43:11,718] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x7f34affd, L:/192.168.43.8:60071 ! R:/192.168.43.128:8091]
[2023-08-12 17:43:11,718] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7f34affd, L:/192.168.43.8:60071 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:43:11,719] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7f34affd, L:/192.168.43.8:60071 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:43:11,719] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x1586d6f8, L:/192.168.43.8:60094 ! R:/192.168.43.128:8091]
[2023-08-12 17:43:11,719] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x1586d6f8, L:/192.168.43.8:60094 ! R:/192.168.43.128:8091]
[2023-08-12 17:43:11,719] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x1586d6f8, L:/192.168.43.8:60094 ! R:/192.168.43.128:8091]
[2023-08-12 17:43:11,720] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x1586d6f8, L:/192.168.43.8:60094 ! R:/192.168.43.128:8091]
[2023-08-12 17:43:11,720] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x1586d6f8, L:/192.168.43.8:60094 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:43:11,720] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x1586d6f8, L:/192.168.43.8:60094 ! R:/192.168.43.128:8091]) will closed
[2023-08-12 17:43:23,080] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-12 17:43:23,090] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-12 17:43:23,112] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-12 17:43:23,980] [logId] [INFO] [main] RepositoryConfigurationDelegate[262] - Multiple Spring Data modules found, entering strict repository configuration mode
[2023-08-12 17:43:23,983] [logId] [INFO] [main] RepositoryConfigurationDelegate[132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-08-12 17:43:24,014] [logId] [INFO] [main] RepositoryConfigurationDelegate[201] - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
[2023-08-12 17:43:24,249] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=12dc8e89-f838-3c32-8a98-7fa60ae466b5
[2023-08-12 17:43:24,350] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:43:24,350] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:43:24,351] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:43:24,385] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:43:24,389] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:43:24,391] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:43:24,392] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$484/6167135] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:43:24,392] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:43:24,395] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:43:24,396] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-12 17:43:24,397] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-12 17:43:24,456] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-12 17:43:24,462] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-12 17:43:24,470] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:43:24,470] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:43:24,936] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-12 17:43:25,162] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 17:43:25,193] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:43:25,193] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:43:25,433] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 17:43:25,851] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 17:43:26,522] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x179f2e29, L:/192.168.43.8:60981 - R:/192.168.43.128:8091]
[2023-08-12 17:43:26,527] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 68 ms, version:1.6.1,role:TMROLE,channel:[id: 0x179f2e29, L:/192.168.43.8:60981 - R:/192.168.43.128:8091]
[2023-08-12 17:43:26,527] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 17:43:26,556] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-12 17:43:26,557] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-12 17:43:26,564] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-12 17:43:26,564] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-12 17:43:26,564] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-12 17:43:27,188] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-12 17:43:27,206] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-12 17:43:27,206] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-12 17:43:27,206] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-12 17:43:27,619] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-12 17:43:27,619] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4494 ms
[2023-08-12 17:43:27,838] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-12 17:43:28,099] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-12 17:43:28,228] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-12 17:43:28,229] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-12 17:43:28,229] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-12 17:43:28,243] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x7ece5423, L:/192.168.43.8:60991 - R:/192.168.43.128:8091]
[2023-08-12 17:43:28,243] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 8 ms, version:1.6.1,role:RMROLE,channel:[id: 0x7ece5423, L:/192.168.43.8:60991 - R:/192.168.43.128:8091]
[2023-08-12 17:43:29,651] [logId] [INFO] [main] Version[41] - Redisson 3.12.0
[2023-08-12 17:43:29,771] [logId] [INFO] [redisson-netty-4-4] MasterPubSubConnectionPool[168] - 1 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 17:43:29,772] [logId] [INFO] [redisson-netty-4-19] MasterConnectionPool[168] - 24 connections initialized for 192.168.43.118/192.168.43.118:6379
[2023-08-12 17:43:32,276] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 17:43:32,298] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 17:43:32,372] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-12 17:43:32,372] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-12 17:43:32,541] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$3cafd0e2] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-12 17:43:33,030] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-12 17:43:35,150] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-12 17:43:35,161] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-12 17:43:35,164] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-12 17:43:35,165] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-12 17:43:35,409] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-12 17:43:35,935] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-12 17:43:35,946] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-12 17:43:35,979] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-12 17:43:36,169] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 17.34 seconds (JVM running for 18.604)
[2023-08-12 17:43:36,174] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-12 17:43:36,178] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-12 17:43:36,179] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-12 17:43:48,141] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-12 17:43:48,142] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-12 17:43:48,151] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 9 ms
[2023-08-12 17:43:48,552] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[60] - requestId：41980f8411344de59401c7887eff8e75
[2023-08-12 17:43:48,562] [41980f8411344de59401c7887eff8e75] [INFO] [http-nio-8010-exec-1] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":100,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-12 17:43:48","token":"10001"}
[2023-08-12 17:43:48,626] [41980f8411344de59401c7887eff8e75] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@1eadd55f
[2023-08-12 17:43:48,662] [41980f8411344de59401c7887eff8e75] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566872599627444241]
