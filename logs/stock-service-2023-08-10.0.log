[2023-08-10 09:54:09,570] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service] & group[DEFAULT_GROUP]
[2023-08-10 09:54:09,575] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 09:54:09,583] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service-dev.yaml] & group[DEFAULT_GROUP]
[2023-08-10 09:54:09,584] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-stock-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-stock-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-stock-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 09:54:09,608] [logId] [INFO] [main] StockApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 09:54:10,639] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1bf868ba-ef39-3455-a084-8bfca333b18e
[2023-08-10 09:54:10,728] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:10,729] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:10,729] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:10,757] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:10,761] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:10,763] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:10,763] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$449/304494063] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:10,764] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:10,766] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:10,768] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:10,770] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 09:54:10,839] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 09:54:10,854] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 09:54:10,866] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:54:10,867] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:54:11,376] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 09:54:11,583] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 09:54:11,612] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:54:11,613] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:54:11,873] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:54:12,614] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 09:54:14,175] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x0cdd7bb4, L:/192.168.43.8:60946 - R:/192.168.43.128:8091]
[2023-08-10 09:54:14,184] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 79 ms, version:1.6.1,role:TMROLE,channel:[id: 0x0cdd7bb4, L:/192.168.43.8:60946 - R:/192.168.43.128:8091]
[2023-08-10 09:54:14,186] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[stock-service] txServiceGroup[stock-tx-group]
[2023-08-10 09:54:14,210] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 09:54:14,212] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 09:54:14,218] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 09:54:14,219] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[stock-service] txServiceGroup[stock-tx-group]
[2023-08-10 09:54:14,219] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 09:54:14,656] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8020 (http)
[2023-08-10 09:54:14,665] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8020"]
[2023-08-10 09:54:14,666] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 09:54:14,666] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 09:54:14,832] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 09:54:14,833] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 5207 ms
[2023-08-10 09:54:15,029] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 09:54:15,447] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 09:54:15,640] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:54:15,641] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/stock
[2023-08-10 09:54:15,643] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/stock', applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 09:54:15,660] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xa56f7d3f, L:/192.168.43.8:60955 - R:/192.168.43.128:8091]
[2023-08-10 09:54:15,661] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 12 ms, version:1.6.1,role:RMROLE,channel:[id: 0xa56f7d3f, L:/192.168.43.8:60955 - R:/192.168.43.128:8091]
[2023-08-10 09:54:16,930] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.stock.service.impl.StockServiceImpl$$EnhancerBySpringCGLIB$$c9ed6179] with name [stockServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 09:54:17,468] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 09:54:20,043] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8020"]
[2023-08-10 09:54:20,059] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8020 (http) with context path ''
[2023-08-10 09:54:20,063] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:54:20,063] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:54:20,268] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP stock-service 26.26.26.1:8020 register finished
[2023-08-10 09:54:20,698] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 09:54:20,709] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 09:54:20,733] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 09:54:20,906] [logId] [INFO] [main] StockApplication[61] - Started StockApplication in 17.076 seconds (JVM running for 18.491)
[2023-08-10 09:54:20,913] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 09:54:20,915] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service, group=DEFAULT_GROUP
[2023-08-10 09:54:20,915] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service.yaml, group=DEFAULT_GROUP
[2023-08-10 09:54:33,049] [logId] [INFO] [http-nio-8020-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 09:54:33,050] [logId] [INFO] [http-nio-8020-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 09:54:33,052] [logId] [INFO] [http-nio-8020-exec-1] DispatcherServlet[547] - Completed initialization in 2 ms
[2023-08-10 09:54:33,097] [logId] [INFO] [http-nio-8020-exec-1] LogUtil[75] - requestId：a8901e74ae9b44c9bacf7f8f99a7f9d1
[2023-08-10 09:54:33,171] [a8901e74ae9b44c9bacf7f8f99a7f9d1] [INFO] [http-nio-8020-exec-1] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 09:54:33"}
[2023-08-10 09:54:33,285] [a8901e74ae9b44c9bacf7f8f99a7f9d1] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 09:54:33,297] [a8901e74ae9b44c9bacf7f8f99a7f9d1] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 09:54:33,366] [a8901e74ae9b44c9bacf7f8f99a7f9d1] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - <==      Total: 1
[2023-08-10 09:54:33,369] [a8901e74ae9b44c9bacf7f8f99a7f9d1] [DEBUG] [http-nio-8020-exec-1] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 09:54:33,370] [a8901e74ae9b44c9bacf7f8f99a7f9d1] [DEBUG] [http-nio-8020-exec-1] updateById[143] - ==> Parameters: 10001(String), 40(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 09:54:33,513] [a8901e74ae9b44c9bacf7f8f99a7f9d1] [DEBUG] [http-nio-8020-exec-1] updateById[143] - <==    Updates: 1
[2023-08-10 09:54:33,517] [a8901e74ae9b44c9bacf7f8f99a7f9d1] [INFO] [http-nio-8020-exec-1] LogUtil[64] - 返回参数：{"code":200,"data":40,"message":"操作成功","success":true,"time":"2023-08-10 09:54:33"}
[2023-08-10 09:54:33,530] [a8901e74ae9b44c9bacf7f8f99a7f9d1] [INFO] [Feh_Optimize_1] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 09:59:50,008] [logId] [INFO] [http-nio-8020-exec-2] LogUtil[75] - requestId：648074c7fe3b43dc97b8a7a8093efe78
[2023-08-10 09:59:50,008] [648074c7fe3b43dc97b8a7a8093efe78] [INFO] [http-nio-8020-exec-2] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 09:59:50"}
[2023-08-10 09:59:50,010] [648074c7fe3b43dc97b8a7a8093efe78] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 09:59:50,010] [648074c7fe3b43dc97b8a7a8093efe78] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 09:59:50,012] [648074c7fe3b43dc97b8a7a8093efe78] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - <==      Total: 1
[2023-08-10 09:59:50,013] [648074c7fe3b43dc97b8a7a8093efe78] [DEBUG] [http-nio-8020-exec-2] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 09:59:50,014] [648074c7fe3b43dc97b8a7a8093efe78] [DEBUG] [http-nio-8020-exec-2] updateById[143] - ==> Parameters: 10001(String), 39(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 09:59:50,023] [648074c7fe3b43dc97b8a7a8093efe78] [DEBUG] [http-nio-8020-exec-2] updateById[143] - <==    Updates: 1
[2023-08-10 09:59:50,024] [648074c7fe3b43dc97b8a7a8093efe78] [INFO] [http-nio-8020-exec-2] LogUtil[64] - 返回参数：{"code":200,"data":39,"message":"操作成功","success":true,"time":"2023-08-10 09:59:50"}
[2023-08-10 09:59:50,025] [648074c7fe3b43dc97b8a7a8093efe78] [INFO] [Feh_Optimize_2] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:24:49,800] [logId] [INFO] [http-nio-8020-exec-6] LogUtil[75] - requestId：2da157d4616642519d2e168761f6ff52
[2023-08-10 10:24:49,801] [2da157d4616642519d2e168761f6ff52] [INFO] [http-nio-8020-exec-6] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:24:49"}
[2023-08-10 10:24:49,803] [2da157d4616642519d2e168761f6ff52] [DEBUG] [http-nio-8020-exec-6] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:24:49,803] [2da157d4616642519d2e168761f6ff52] [DEBUG] [http-nio-8020-exec-6] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:24:49,804] [2da157d4616642519d2e168761f6ff52] [DEBUG] [http-nio-8020-exec-6] selectOne[143] - <==      Total: 1
[2023-08-10 10:24:49,805] [2da157d4616642519d2e168761f6ff52] [DEBUG] [http-nio-8020-exec-6] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 10:24:49,805] [2da157d4616642519d2e168761f6ff52] [DEBUG] [http-nio-8020-exec-6] updateById[143] - ==> Parameters: 10001(String), 38(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 10:24:49,815] [2da157d4616642519d2e168761f6ff52] [DEBUG] [http-nio-8020-exec-6] updateById[143] - <==    Updates: 1
[2023-08-10 10:24:49,815] [2da157d4616642519d2e168761f6ff52] [INFO] [http-nio-8020-exec-6] LogUtil[64] - 返回参数：{"code":200,"data":38,"message":"操作成功","success":true,"time":"2023-08-10 10:24:49"}
[2023-08-10 10:24:49,816] [2da157d4616642519d2e168761f6ff52] [INFO] [Feh_Optimize_3] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:27:42,325] [logId] [INFO] [http-nio-8020-exec-5] LogUtil[75] - requestId：f99809ea61e94af4a80024050a3d4b4f
[2023-08-10 10:27:42,328] [f99809ea61e94af4a80024050a3d4b4f] [INFO] [http-nio-8020-exec-5] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:27:42"}
[2023-08-10 10:27:42,335] [f99809ea61e94af4a80024050a3d4b4f] [DEBUG] [http-nio-8020-exec-5] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:27:42,339] [f99809ea61e94af4a80024050a3d4b4f] [DEBUG] [http-nio-8020-exec-5] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:27:42,346] [f99809ea61e94af4a80024050a3d4b4f] [DEBUG] [http-nio-8020-exec-5] selectOne[143] - <==      Total: 1
[2023-08-10 10:27:42,358] [f99809ea61e94af4a80024050a3d4b4f] [DEBUG] [http-nio-8020-exec-5] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 10:27:42,363] [f99809ea61e94af4a80024050a3d4b4f] [DEBUG] [http-nio-8020-exec-5] updateById[143] - ==> Parameters: 10001(String), 37(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 10:27:42,380] [f99809ea61e94af4a80024050a3d4b4f] [DEBUG] [http-nio-8020-exec-5] updateById[143] - <==    Updates: 1
[2023-08-10 10:27:42,381] [f99809ea61e94af4a80024050a3d4b4f] [INFO] [http-nio-8020-exec-5] LogUtil[64] - 返回参数：{"code":200,"data":37,"message":"操作成功","success":true,"time":"2023-08-10 10:27:42"}
[2023-08-10 10:27:42,381] [f99809ea61e94af4a80024050a3d4b4f] [INFO] [Feh_Optimize_4] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:32:25,830] [logId] [INFO] [http-nio-8020-exec-9] LogUtil[75] - requestId：ce709cc07a6443e5a56a0d079eb2ccf3
[2023-08-10 10:32:25,831] [ce709cc07a6443e5a56a0d079eb2ccf3] [INFO] [http-nio-8020-exec-9] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:32:25"}
[2023-08-10 10:32:25,836] [ce709cc07a6443e5a56a0d079eb2ccf3] [DEBUG] [http-nio-8020-exec-9] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:32:25,838] [ce709cc07a6443e5a56a0d079eb2ccf3] [DEBUG] [http-nio-8020-exec-9] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:32:25,851] [ce709cc07a6443e5a56a0d079eb2ccf3] [DEBUG] [http-nio-8020-exec-9] selectOne[143] - <==      Total: 1
[2023-08-10 10:32:25,861] [ce709cc07a6443e5a56a0d079eb2ccf3] [DEBUG] [http-nio-8020-exec-9] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 10:32:25,862] [ce709cc07a6443e5a56a0d079eb2ccf3] [DEBUG] [http-nio-8020-exec-9] updateById[143] - ==> Parameters: 10001(String), 36(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 10:32:25,987] [ce709cc07a6443e5a56a0d079eb2ccf3] [DEBUG] [http-nio-8020-exec-9] updateById[143] - <==    Updates: 1
[2023-08-10 10:32:25,991] [ce709cc07a6443e5a56a0d079eb2ccf3] [INFO] [http-nio-8020-exec-9] LogUtil[64] - 返回参数：{"code":200,"data":36,"message":"操作成功","success":true,"time":"2023-08-10 10:32:25"}
[2023-08-10 10:32:25,995] [ce709cc07a6443e5a56a0d079eb2ccf3] [INFO] [Feh_Optimize_5] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:34:08,204] [a8901e74ae9b44c9bacf7f8f99a7f9d1] [INFO] [http-nio-8020-exec-1] LogUtil[75] - requestId：d98b9bdd6d4b4dfc87103795530c022c
[2023-08-10 10:34:08,206] [d98b9bdd6d4b4dfc87103795530c022c] [INFO] [http-nio-8020-exec-1] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:34:08"}
[2023-08-10 10:34:08,215] [d98b9bdd6d4b4dfc87103795530c022c] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:34:08,218] [d98b9bdd6d4b4dfc87103795530c022c] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:34:08,228] [d98b9bdd6d4b4dfc87103795530c022c] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - <==      Total: 1
[2023-08-10 10:34:08,241] [d98b9bdd6d4b4dfc87103795530c022c] [DEBUG] [http-nio-8020-exec-1] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 10:34:08,243] [d98b9bdd6d4b4dfc87103795530c022c] [DEBUG] [http-nio-8020-exec-1] updateById[143] - ==> Parameters: 10001(String), 35(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 10:34:08,350] [d98b9bdd6d4b4dfc87103795530c022c] [DEBUG] [http-nio-8020-exec-1] updateById[143] - <==    Updates: 1
[2023-08-10 10:34:08,352] [d98b9bdd6d4b4dfc87103795530c022c] [INFO] [http-nio-8020-exec-1] LogUtil[64] - 返回参数：{"code":200,"data":35,"message":"操作成功","success":true,"time":"2023-08-10 10:34:08"}
[2023-08-10 10:34:08,432] [d98b9bdd6d4b4dfc87103795530c022c] [INFO] [Feh_Optimize_6] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:38:59,728] [648074c7fe3b43dc97b8a7a8093efe78] [INFO] [http-nio-8020-exec-2] LogUtil[75] - requestId：81114b4d0197434e8f3072cae08429f5
[2023-08-10 10:38:59,729] [81114b4d0197434e8f3072cae08429f5] [INFO] [http-nio-8020-exec-2] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:38:59"}
[2023-08-10 10:38:59,732] [81114b4d0197434e8f3072cae08429f5] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:38:59,733] [81114b4d0197434e8f3072cae08429f5] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:38:59,735] [81114b4d0197434e8f3072cae08429f5] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - <==      Total: 1
[2023-08-10 10:38:59,736] [81114b4d0197434e8f3072cae08429f5] [DEBUG] [http-nio-8020-exec-2] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 10:38:59,736] [81114b4d0197434e8f3072cae08429f5] [DEBUG] [http-nio-8020-exec-2] updateById[143] - ==> Parameters: 10001(String), 34(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 10:38:59,744] [81114b4d0197434e8f3072cae08429f5] [DEBUG] [http-nio-8020-exec-2] updateById[143] - <==    Updates: 1
[2023-08-10 10:38:59,745] [81114b4d0197434e8f3072cae08429f5] [INFO] [http-nio-8020-exec-2] LogUtil[64] - 返回参数：{"code":200,"data":34,"message":"操作成功","success":true,"time":"2023-08-10 10:38:59"}
[2023-08-10 10:38:59,746] [81114b4d0197434e8f3072cae08429f5] [INFO] [Feh_Optimize_7] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:41:33,566] [2da157d4616642519d2e168761f6ff52] [INFO] [http-nio-8020-exec-6] LogUtil[75] - requestId：eab0a0a794504e1993f82eabc450c612
[2023-08-10 10:41:33,566] [eab0a0a794504e1993f82eabc450c612] [INFO] [http-nio-8020-exec-6] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:41:33"}
[2023-08-10 10:41:33,569] [eab0a0a794504e1993f82eabc450c612] [DEBUG] [http-nio-8020-exec-6] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:41:33,570] [eab0a0a794504e1993f82eabc450c612] [DEBUG] [http-nio-8020-exec-6] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:41:33,577] [eab0a0a794504e1993f82eabc450c612] [DEBUG] [http-nio-8020-exec-6] selectOne[143] - <==      Total: 1
[2023-08-10 10:41:33,582] [eab0a0a794504e1993f82eabc450c612] [DEBUG] [http-nio-8020-exec-6] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 10:41:33,584] [eab0a0a794504e1993f82eabc450c612] [DEBUG] [http-nio-8020-exec-6] updateById[143] - ==> Parameters: 10001(String), 33(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 10:41:33,598] [eab0a0a794504e1993f82eabc450c612] [DEBUG] [http-nio-8020-exec-6] updateById[143] - <==    Updates: 1
[2023-08-10 10:41:33,599] [eab0a0a794504e1993f82eabc450c612] [INFO] [http-nio-8020-exec-6] LogUtil[64] - 返回参数：{"code":200,"data":33,"message":"操作成功","success":true,"time":"2023-08-10 10:41:33"}
[2023-08-10 10:41:33,600] [eab0a0a794504e1993f82eabc450c612] [INFO] [Feh_Optimize_8] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:43:17,124] [f99809ea61e94af4a80024050a3d4b4f] [INFO] [http-nio-8020-exec-5] LogUtil[75] - requestId：9b2bee117ce24ca79f6a4f7d49e6856f
[2023-08-10 10:43:17,124] [9b2bee117ce24ca79f6a4f7d49e6856f] [INFO] [http-nio-8020-exec-5] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:43:17"}
[2023-08-10 10:43:17,129] [9b2bee117ce24ca79f6a4f7d49e6856f] [DEBUG] [http-nio-8020-exec-5] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:43:17,130] [9b2bee117ce24ca79f6a4f7d49e6856f] [DEBUG] [http-nio-8020-exec-5] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:43:17,135] [9b2bee117ce24ca79f6a4f7d49e6856f] [DEBUG] [http-nio-8020-exec-5] selectOne[143] - <==      Total: 1
[2023-08-10 10:43:17,146] [9b2bee117ce24ca79f6a4f7d49e6856f] [DEBUG] [http-nio-8020-exec-5] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 10:43:17,148] [9b2bee117ce24ca79f6a4f7d49e6856f] [DEBUG] [http-nio-8020-exec-5] updateById[143] - ==> Parameters: 10001(String), 32(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 10:43:17,213] [9b2bee117ce24ca79f6a4f7d49e6856f] [DEBUG] [http-nio-8020-exec-5] updateById[143] - <==    Updates: 1
[2023-08-10 10:43:17,215] [9b2bee117ce24ca79f6a4f7d49e6856f] [INFO] [http-nio-8020-exec-5] LogUtil[64] - 返回参数：{"code":200,"data":32,"message":"操作成功","success":true,"time":"2023-08-10 10:43:17"}
[2023-08-10 10:43:17,221] [9b2bee117ce24ca79f6a4f7d49e6856f] [INFO] [Feh_Optimize_9] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:44:59,575] [ce709cc07a6443e5a56a0d079eb2ccf3] [INFO] [http-nio-8020-exec-9] LogUtil[75] - requestId：36a26b2737ba4fd7961e92d15ea35822
[2023-08-10 10:44:59,575] [36a26b2737ba4fd7961e92d15ea35822] [INFO] [http-nio-8020-exec-9] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:44:59"}
[2023-08-10 10:44:59,581] [36a26b2737ba4fd7961e92d15ea35822] [DEBUG] [http-nio-8020-exec-9] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:44:59,582] [36a26b2737ba4fd7961e92d15ea35822] [DEBUG] [http-nio-8020-exec-9] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:44:59,584] [36a26b2737ba4fd7961e92d15ea35822] [DEBUG] [http-nio-8020-exec-9] selectOne[143] - <==      Total: 1
[2023-08-10 10:44:59,589] [36a26b2737ba4fd7961e92d15ea35822] [DEBUG] [http-nio-8020-exec-9] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 10:44:59,590] [36a26b2737ba4fd7961e92d15ea35822] [DEBUG] [http-nio-8020-exec-9] updateById[143] - ==> Parameters: 10001(String), 31(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 10:44:59,599] [36a26b2737ba4fd7961e92d15ea35822] [DEBUG] [http-nio-8020-exec-9] updateById[143] - <==    Updates: 1
[2023-08-10 10:44:59,599] [36a26b2737ba4fd7961e92d15ea35822] [INFO] [http-nio-8020-exec-9] LogUtil[64] - 返回参数：{"code":200,"data":31,"message":"操作成功","success":true,"time":"2023-08-10 10:44:59"}
[2023-08-10 10:44:59,600] [36a26b2737ba4fd7961e92d15ea35822] [INFO] [Feh_Optimize_10] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:56:27,804] [d98b9bdd6d4b4dfc87103795530c022c] [INFO] [http-nio-8020-exec-1] LogUtil[75] - requestId：6f70b69c61c24b098c309f296334b63e
[2023-08-10 10:56:27,806] [6f70b69c61c24b098c309f296334b63e] [INFO] [http-nio-8020-exec-1] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:56:27"}
[2023-08-10 10:56:27,810] [6f70b69c61c24b098c309f296334b63e] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:56:27,813] [6f70b69c61c24b098c309f296334b63e] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:56:27,818] [6f70b69c61c24b098c309f296334b63e] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - <==      Total: 1
[2023-08-10 10:56:27,822] [6f70b69c61c24b098c309f296334b63e] [DEBUG] [http-nio-8020-exec-1] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 10:56:27,824] [6f70b69c61c24b098c309f296334b63e] [DEBUG] [http-nio-8020-exec-1] updateById[143] - ==> Parameters: 10001(String), 30(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 10:56:27,855] [6f70b69c61c24b098c309f296334b63e] [DEBUG] [http-nio-8020-exec-1] updateById[143] - <==    Updates: 1
[2023-08-10 10:56:27,857] [6f70b69c61c24b098c309f296334b63e] [INFO] [http-nio-8020-exec-1] LogUtil[64] - 返回参数：{"code":200,"data":30,"message":"操作成功","success":true,"time":"2023-08-10 10:56:27"}
[2023-08-10 10:56:27,858] [6f70b69c61c24b098c309f296334b63e] [INFO] [Feh_Optimize_11] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:57:58,045] [81114b4d0197434e8f3072cae08429f5] [INFO] [http-nio-8020-exec-2] LogUtil[75] - requestId：925beeb1681c4e34a1f4b1bd66781ae6
[2023-08-10 10:57:58,045] [925beeb1681c4e34a1f4b1bd66781ae6] [INFO] [http-nio-8020-exec-2] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 10:57:58"}
[2023-08-10 10:57:58,046] [925beeb1681c4e34a1f4b1bd66781ae6] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 10:57:58,047] [925beeb1681c4e34a1f4b1bd66781ae6] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 10:57:58,048] [925beeb1681c4e34a1f4b1bd66781ae6] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - <==      Total: 1
[2023-08-10 10:57:58,050] [925beeb1681c4e34a1f4b1bd66781ae6] [DEBUG] [http-nio-8020-exec-2] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 10:57:58,050] [925beeb1681c4e34a1f4b1bd66781ae6] [DEBUG] [http-nio-8020-exec-2] updateById[143] - ==> Parameters: 10001(String), 29(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 10:57:58,062] [925beeb1681c4e34a1f4b1bd66781ae6] [DEBUG] [http-nio-8020-exec-2] updateById[143] - <==    Updates: 1
[2023-08-10 10:57:58,062] [925beeb1681c4e34a1f4b1bd66781ae6] [INFO] [http-nio-8020-exec-2] LogUtil[64] - 返回参数：{"code":200,"data":29,"message":"操作成功","success":true,"time":"2023-08-10 10:57:58"}
[2023-08-10 10:57:58,063] [925beeb1681c4e34a1f4b1bd66781ae6] [INFO] [Feh_Optimize_12] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 11:05:59,712] [eab0a0a794504e1993f82eabc450c612] [INFO] [http-nio-8020-exec-6] LogUtil[75] - requestId：a204f1bcd95f450ca6a73d57c566217b
[2023-08-10 11:05:59,713] [a204f1bcd95f450ca6a73d57c566217b] [INFO] [http-nio-8020-exec-6] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 11:05:59"}
[2023-08-10 11:05:59,719] [a204f1bcd95f450ca6a73d57c566217b] [DEBUG] [http-nio-8020-exec-6] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 11:05:59,720] [a204f1bcd95f450ca6a73d57c566217b] [DEBUG] [http-nio-8020-exec-6] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 11:05:59,742] [a204f1bcd95f450ca6a73d57c566217b] [DEBUG] [http-nio-8020-exec-6] selectOne[143] - <==      Total: 1
[2023-08-10 11:05:59,749] [a204f1bcd95f450ca6a73d57c566217b] [DEBUG] [http-nio-8020-exec-6] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 11:05:59,750] [a204f1bcd95f450ca6a73d57c566217b] [DEBUG] [http-nio-8020-exec-6] updateById[143] - ==> Parameters: 10001(String), 28(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 11:05:59,871] [a204f1bcd95f450ca6a73d57c566217b] [DEBUG] [http-nio-8020-exec-6] updateById[143] - <==    Updates: 1
[2023-08-10 11:05:59,873] [a204f1bcd95f450ca6a73d57c566217b] [INFO] [http-nio-8020-exec-6] LogUtil[64] - 返回参数：{"code":200,"data":28,"message":"操作成功","success":true,"time":"2023-08-10 11:05:59"}
[2023-08-10 11:05:59,882] [a204f1bcd95f450ca6a73d57c566217b] [INFO] [Feh_Optimize_13] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 11:07:00,942] [9b2bee117ce24ca79f6a4f7d49e6856f] [INFO] [http-nio-8020-exec-5] LogUtil[75] - requestId：06e567c884244d768df101ea314db4eb
[2023-08-10 11:07:00,942] [06e567c884244d768df101ea314db4eb] [INFO] [http-nio-8020-exec-5] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 11:07:00"}
[2023-08-10 11:07:00,945] [06e567c884244d768df101ea314db4eb] [DEBUG] [http-nio-8020-exec-5] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 11:07:00,945] [06e567c884244d768df101ea314db4eb] [DEBUG] [http-nio-8020-exec-5] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 11:07:00,946] [06e567c884244d768df101ea314db4eb] [DEBUG] [http-nio-8020-exec-5] selectOne[143] - <==      Total: 1
[2023-08-10 11:07:00,948] [06e567c884244d768df101ea314db4eb] [DEBUG] [http-nio-8020-exec-5] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 11:07:00,951] [06e567c884244d768df101ea314db4eb] [DEBUG] [http-nio-8020-exec-5] updateById[143] - ==> Parameters: 10001(String), 27(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 11:07:00,978] [06e567c884244d768df101ea314db4eb] [DEBUG] [http-nio-8020-exec-5] updateById[143] - <==    Updates: 1
[2023-08-10 11:07:00,979] [06e567c884244d768df101ea314db4eb] [INFO] [http-nio-8020-exec-5] LogUtil[64] - 返回参数：{"code":200,"data":27,"message":"操作成功","success":true,"time":"2023-08-10 11:07:00"}
[2023-08-10 11:07:00,984] [06e567c884244d768df101ea314db4eb] [INFO] [Feh_Optimize_14] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 11:18:09,352] [36a26b2737ba4fd7961e92d15ea35822] [INFO] [http-nio-8020-exec-9] LogUtil[75] - requestId：67cc7e3c79994664a6ca056cb286104b
[2023-08-10 11:18:09,355] [67cc7e3c79994664a6ca056cb286104b] [INFO] [http-nio-8020-exec-9] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 11:18:09"}
[2023-08-10 11:18:09,364] [67cc7e3c79994664a6ca056cb286104b] [DEBUG] [http-nio-8020-exec-9] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 11:18:09,366] [67cc7e3c79994664a6ca056cb286104b] [DEBUG] [http-nio-8020-exec-9] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 11:18:09,372] [67cc7e3c79994664a6ca056cb286104b] [DEBUG] [http-nio-8020-exec-9] selectOne[143] - <==      Total: 1
[2023-08-10 11:18:09,385] [67cc7e3c79994664a6ca056cb286104b] [DEBUG] [http-nio-8020-exec-9] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 11:18:09,388] [67cc7e3c79994664a6ca056cb286104b] [DEBUG] [http-nio-8020-exec-9] updateById[143] - ==> Parameters: 10001(String), 26(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 11:18:09,641] [67cc7e3c79994664a6ca056cb286104b] [DEBUG] [http-nio-8020-exec-9] updateById[143] - <==    Updates: 1
[2023-08-10 11:18:09,644] [67cc7e3c79994664a6ca056cb286104b] [INFO] [http-nio-8020-exec-9] LogUtil[64] - 返回参数：{"code":200,"data":26,"message":"操作成功","success":true,"time":"2023-08-10 11:18:09"}
[2023-08-10 11:18:09,650] [67cc7e3c79994664a6ca056cb286104b] [INFO] [Feh_Optimize_15] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 11:19:55,414] [6f70b69c61c24b098c309f296334b63e] [INFO] [http-nio-8020-exec-1] LogUtil[75] - requestId：ab3679ca4c414b228f63b0194b6f74b2
[2023-08-10 11:19:55,418] [ab3679ca4c414b228f63b0194b6f74b2] [INFO] [http-nio-8020-exec-1] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 11:19:55"}
[2023-08-10 11:19:55,439] [ab3679ca4c414b228f63b0194b6f74b2] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 11:19:55,440] [ab3679ca4c414b228f63b0194b6f74b2] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 11:19:55,450] [ab3679ca4c414b228f63b0194b6f74b2] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - <==      Total: 1
[2023-08-10 11:19:55,458] [ab3679ca4c414b228f63b0194b6f74b2] [DEBUG] [http-nio-8020-exec-1] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 11:19:55,461] [ab3679ca4c414b228f63b0194b6f74b2] [DEBUG] [http-nio-8020-exec-1] updateById[143] - ==> Parameters: 10001(String), 25(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 11:19:55,512] [ab3679ca4c414b228f63b0194b6f74b2] [DEBUG] [http-nio-8020-exec-1] updateById[143] - <==    Updates: 1
[2023-08-10 11:19:55,518] [ab3679ca4c414b228f63b0194b6f74b2] [INFO] [http-nio-8020-exec-1] LogUtil[64] - 返回参数：{"code":200,"data":25,"message":"操作成功","success":true,"time":"2023-08-10 11:19:55"}
[2023-08-10 11:19:55,521] [ab3679ca4c414b228f63b0194b6f74b2] [INFO] [Feh_Optimize_16] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 11:25:46,477] [925beeb1681c4e34a1f4b1bd66781ae6] [INFO] [http-nio-8020-exec-2] LogUtil[75] - requestId：c17afe76f6eb4958b2f35c3abf3e5dfa
[2023-08-10 11:25:46,477] [c17afe76f6eb4958b2f35c3abf3e5dfa] [INFO] [http-nio-8020-exec-2] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 11:25:46"}
[2023-08-10 11:25:46,481] [c17afe76f6eb4958b2f35c3abf3e5dfa] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 11:25:46,481] [c17afe76f6eb4958b2f35c3abf3e5dfa] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 11:25:46,485] [c17afe76f6eb4958b2f35c3abf3e5dfa] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - <==      Total: 1
[2023-08-10 11:25:46,487] [c17afe76f6eb4958b2f35c3abf3e5dfa] [DEBUG] [http-nio-8020-exec-2] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 11:25:46,488] [c17afe76f6eb4958b2f35c3abf3e5dfa] [DEBUG] [http-nio-8020-exec-2] updateById[143] - ==> Parameters: 10001(String), 24(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 11:25:46,496] [c17afe76f6eb4958b2f35c3abf3e5dfa] [DEBUG] [http-nio-8020-exec-2] updateById[143] - <==    Updates: 1
[2023-08-10 11:25:46,497] [c17afe76f6eb4958b2f35c3abf3e5dfa] [INFO] [http-nio-8020-exec-2] LogUtil[64] - 返回参数：{"code":200,"data":24,"message":"操作成功","success":true,"time":"2023-08-10 11:25:46"}
[2023-08-10 11:25:46,497] [c17afe76f6eb4958b2f35c3abf3e5dfa] [INFO] [Feh_Optimize_17] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 11:32:10,177] [a204f1bcd95f450ca6a73d57c566217b] [INFO] [http-nio-8020-exec-6] LogUtil[75] - requestId：da96660b6b824e42aedcb41766710e90
[2023-08-10 11:32:10,178] [da96660b6b824e42aedcb41766710e90] [INFO] [http-nio-8020-exec-6] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 11:32:10"}
[2023-08-10 11:32:10,184] [da96660b6b824e42aedcb41766710e90] [DEBUG] [http-nio-8020-exec-6] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 11:32:10,184] [da96660b6b824e42aedcb41766710e90] [DEBUG] [http-nio-8020-exec-6] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 11:32:10,193] [da96660b6b824e42aedcb41766710e90] [DEBUG] [http-nio-8020-exec-6] selectOne[143] - <==      Total: 1
[2023-08-10 11:32:10,199] [da96660b6b824e42aedcb41766710e90] [DEBUG] [http-nio-8020-exec-6] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 11:32:10,202] [da96660b6b824e42aedcb41766710e90] [DEBUG] [http-nio-8020-exec-6] updateById[143] - ==> Parameters: 10001(String), 23(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 11:32:10,223] [da96660b6b824e42aedcb41766710e90] [DEBUG] [http-nio-8020-exec-6] updateById[143] - <==    Updates: 1
[2023-08-10 11:32:10,223] [da96660b6b824e42aedcb41766710e90] [INFO] [http-nio-8020-exec-6] LogUtil[64] - 返回参数：{"code":200,"data":23,"message":"操作成功","success":true,"time":"2023-08-10 11:32:10"}
[2023-08-10 11:32:10,225] [da96660b6b824e42aedcb41766710e90] [INFO] [Feh_Optimize_18] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 12:33:23,163] [logId] [ERROR] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[476] - 0318
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 12:33:23,163] [logId] [ERROR] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[476] - 0318
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 12:33:23,164] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xa56f7d3f, L:/192.168.43.8:60955 - R:/192.168.43.128:8091]
[2023-08-10 12:33:23,164] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x0cdd7bb4, L:/192.168.43.8:60946 - R:/192.168.43.128:8091]
[2023-08-10 12:33:23,165] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[480] - remove exception rm channel:[id: 0xa56f7d3f, L:/192.168.43.8:60955 - R:/192.168.43.128:8091]
[2023-08-10 12:33:23,165] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[480] - remove exception rm channel:[id: 0x0cdd7bb4, L:/192.168.43.8:60946 - R:/192.168.43.128:8091]
[2023-08-10 12:33:23,165] [logId] [WARN] [NettyClientSelector_RMROLE_1_1] DefaultChannelPipeline[1152] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 12:33:23,165] [logId] [WARN] [NettyClientSelector_TMROLE_1_1] DefaultChannelPipeline[1152] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 12:33:23,166] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xa56f7d3f, L:/192.168.43.8:60955 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,166] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x0cdd7bb4, L:/192.168.43.8:60946 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,166] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xa56f7d3f, L:/192.168.43.8:60955 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,166] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xa56f7d3f, L:/192.168.43.8:60955 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,167] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa56f7d3f, L:/192.168.43.8:60955 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 12:33:23,166] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x0cdd7bb4, L:/192.168.43.8:60946 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,167] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa56f7d3f, L:/192.168.43.8:60955 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 12:33:23,167] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x0cdd7bb4, L:/192.168.43.8:60946 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,167] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x0cdd7bb4, L:/192.168.43.8:60946 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 12:33:23,167] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x0cdd7bb4, L:/192.168.43.8:60946 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:31:48,748] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:48,748] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/stock
[2023-08-10 13:31:48,749] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xa56f7d3f, L:/192.168.43.8:60955 ! R:/192.168.43.128:8091]
[2023-08-10 13:31:48,750] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xa56f7d3f, L:/192.168.43.8:60955 ! R:/192.168.43.128:8091]
[2023-08-10 13:31:48,751] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/stock', applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 13:31:51,095] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:51,095] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 13:31:58,769] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7890893b]) will closed
[2023-08-10 13:31:58,770] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /192.168.43.128:8091
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	... 2 common frames omitted
[2023-08-10 13:31:58,770] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:58,770] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:58,770] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/stock
[2023-08-10 13:31:58,771] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/stock', applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 13:32:01,102] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x31d6670f]) will closed
[2023-08-10 13:32:01,102] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
[2023-08-10 13:32:01,102] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:01,103] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:01,103] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 13:32:03,786] [logId] [ERROR] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[476] - 0318
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:06,113] [logId] [ERROR] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[476] - 0318
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:28,786] [logId] [ERROR] [timeoutChecker_2_1] AbstractNettyRemoting[203] - wait response error:null ,cost: 30013 ms,ip:/192.168.43.128:8091,request:RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/stock', applicationId='stock-service', transactionServiceGroup='stock-tx-group'}
[2023-08-10 13:32:28,787] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: register RMROLE error, errMsg:null ,cost: 30013 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:28,788] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[480] - remove exception rm channel:[id: 0x5046aa60, L:/26.26.26.1:60788 - R:/192.168.43.128:8091]
[2023-08-10 13:32:28,788] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:register RMROLE error, errMsg:null ,cost: 30013 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register RMROLE error, errMsg:null ,cost: 30013 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:28,788] [logId] [WARN] [NettyClientSelector_RMROLE_1_1] DefaultChannelPipeline[1152] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:28,788] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:28,788] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/stock
[2023-08-10 13:32:28,788] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5046aa60, L:/26.26.26.1:60788 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:28,788] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x5046aa60, L:/26.26.26.1:60788 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:28,788] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x5046aa60, L:/26.26.26.1:60788 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:28,788] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x5046aa60, L:/26.26.26.1:60788 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:28,789] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/stock', applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 13:32:31,108] [logId] [ERROR] [timeoutChecker_1_1] AbstractNettyRemoting[203] - wait response error:null ,cost: 30002 ms,ip:/192.168.43.128:8091,request:RegisterTMRequest{applicationId='stock-service', transactionServiceGroup='stock-tx-group'}
[2023-08-10 13:32:31,108] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: register TMROLE error, errMsg:null ,cost: 30002 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:31,108] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:register TMROLE error, errMsg:null ,cost: 30002 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register TMROLE error, errMsg:null ,cost: 30002 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:31,108] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[480] - remove exception rm channel:[id: 0xd28c2b65, L:/26.26.26.1:60958 - R:/192.168.43.128:8091]
[2023-08-10 13:32:31,108] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:31,108] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 13:32:31,108] [logId] [WARN] [NettyClientSelector_TMROLE_1_1] DefaultChannelPipeline[1152] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:31,109] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd28c2b65, L:/26.26.26.1:60958 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:31,109] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xd28c2b65, L:/26.26.26.1:60958 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:38,800] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
[2023-08-10 13:32:38,801] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:38,801] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x5046aa60, L:/26.26.26.1:60788 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:38,801] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x5046aa60, L:/26.26.26.1:60788 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:38,801] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:38,801] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5046aa60, L:/26.26.26.1:60788 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:38,801] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5046aa60, L:/26.26.26.1:60788 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:38,801] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/stock
[2023-08-10 13:32:38,801] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/stock', applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 13:32:38,806] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x201b8c9c, L:/192.168.43.8:61805 - R:/192.168.43.128:8091]
[2023-08-10 13:32:38,806] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0x201b8c9c, L:/192.168.43.8:61805 - R:/192.168.43.128:8091]
[2023-08-10 13:32:41,121] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
[2023-08-10 13:32:41,121] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:41,121] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xd28c2b65, L:/26.26.26.1:60958 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:41,121] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xd28c2b65, L:/26.26.26.1:60958 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:41,121] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:41,121] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd28c2b65, L:/26.26.26.1:60958 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:41,121] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd28c2b65, L:/26.26.26.1:60958 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:41,122] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 13:32:41,125] [logId] [INFO] [timeoutChecker_1_1] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x41435312, L:/192.168.43.8:61819 - R:/192.168.43.128:8091]
[2023-08-10 13:32:41,125] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[81] - register success, cost 2 ms, version:1.6.1,role:TMROLE,channel:[id: 0x41435312, L:/192.168.43.8:61819 - R:/192.168.43.128:8091]
[2023-08-10 13:53:18,362] [06e567c884244d768df101ea314db4eb] [INFO] [http-nio-8020-exec-5] LogUtil[75] - requestId：ce9048a305a449f78070e62b8e7c02c9
[2023-08-10 13:53:18,363] [ce9048a305a449f78070e62b8e7c02c9] [INFO] [http-nio-8020-exec-5] LogUtil[85] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 13:53:18"}
[2023-08-10 13:53:18,367] [ce9048a305a449f78070e62b8e7c02c9] [DEBUG] [http-nio-8020-exec-5] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 13:53:18,368] [ce9048a305a449f78070e62b8e7c02c9] [DEBUG] [http-nio-8020-exec-5] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 13:53:18,371] [ce9048a305a449f78070e62b8e7c02c9] [DEBUG] [http-nio-8020-exec-5] selectOne[143] - <==      Total: 1
[2023-08-10 13:53:18,372] [ce9048a305a449f78070e62b8e7c02c9] [DEBUG] [http-nio-8020-exec-5] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 13:53:18,373] [ce9048a305a449f78070e62b8e7c02c9] [DEBUG] [http-nio-8020-exec-5] updateById[143] - ==> Parameters: 10001(String), 22(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 13:53:18,391] [ce9048a305a449f78070e62b8e7c02c9] [DEBUG] [http-nio-8020-exec-5] updateById[143] - <==    Updates: 1
[2023-08-10 13:53:18,391] [ce9048a305a449f78070e62b8e7c02c9] [INFO] [http-nio-8020-exec-5] LogUtil[64] - 返回参数：{"code":200,"data":22,"message":"操作成功","success":true,"time":"2023-08-10 13:53:18"}
[2023-08-10 13:53:18,392] [ce9048a305a449f78070e62b8e7c02c9] [INFO] [Feh_Optimize_19] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 13:54:00,808] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 13:54:00,808] [logId] [WARN] [Thread-13] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 13:54:00,808] [logId] [WARN] [Thread-13] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 13:54:00,808] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 13:54:01,283] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 13:54:01,287] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 13:54:01,292] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 13:54:01,294] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 13:54:01,295] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x41435312, L:/192.168.43.8:61819 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,295] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x41435312, L:/192.168.43.8:61819 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,295] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x41435312, L:/192.168.43.8:61819 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,295] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x41435312, L:/192.168.43.8:61819 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,295] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x41435312, L:/192.168.43.8:61819 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,296] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x41435312, L:/192.168.43.8:61819 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,296] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x5477fa1c, L:0.0.0.0/0.0.0.0:61818 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,296] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x5477fa1c, L:0.0.0.0/0.0.0.0:61818 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,296] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x5477fa1c, L:0.0.0.0/0.0.0.0:61818 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,296] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5477fa1c, L:0.0.0.0/0.0.0.0:61818 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,296] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5477fa1c, L:0.0.0.0/0.0.0.0:61818 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,297] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x201b8c9c, L:/192.168.43.8:61805 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,297] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x201b8c9c, L:/192.168.43.8:61805 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,297] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x201b8c9c, L:/192.168.43.8:61805 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,297] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x201b8c9c, L:/192.168.43.8:61805 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,297] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x201b8c9c, L:/192.168.43.8:61805 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,297] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x201b8c9c, L:/192.168.43.8:61805 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,307] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x20bb4193, L:0.0.0.0/0.0.0.0:61803 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,307] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x20bb4193, L:0.0.0.0/0.0.0.0:61803 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,307] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x20bb4193, L:0.0.0.0/0.0.0.0:61803 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,308] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x20bb4193, L:0.0.0.0/0.0.0.0:61803 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,308] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x20bb4193, L:0.0.0.0/0.0.0.0:61803 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:14,084] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service] & group[DEFAULT_GROUP]
[2023-08-10 13:54:14,089] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 13:54:14,092] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service-dev.yaml] & group[DEFAULT_GROUP]
[2023-08-10 13:54:14,092] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-stock-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-stock-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-stock-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 13:54:14,111] [logId] [INFO] [main] StockApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 13:54:14,856] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1bf868ba-ef39-3455-a084-8bfca333b18e
[2023-08-10 13:54:14,908] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:14,909] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:14,909] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:14,926] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:14,928] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:14,930] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:14,931] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$449/501530336] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:14,931] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:14,933] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:14,934] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:14,936] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 13:54:14,977] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 13:54:14,982] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 13:54:14,988] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:54:14,988] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:54:15,359] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 13:54:15,466] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:54:15,487] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:54:15,487] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:54:15,705] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:54:16,105] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 13:54:17,324] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x9a8c6abc, L:/192.168.43.8:64745 - R:/192.168.43.128:8091]
[2023-08-10 13:54:17,334] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 75 ms, version:1.6.1,role:TMROLE,channel:[id: 0x9a8c6abc, L:/192.168.43.8:64745 - R:/192.168.43.128:8091]
[2023-08-10 13:54:17,335] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[stock-service] txServiceGroup[stock-tx-group]
[2023-08-10 13:54:17,364] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 13:54:17,365] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 13:54:17,373] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:54:17,374] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[stock-service] txServiceGroup[stock-tx-group]
[2023-08-10 13:54:17,374] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 13:54:17,842] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8020 (http)
[2023-08-10 13:54:17,850] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8020"]
[2023-08-10 13:54:17,850] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 13:54:17,850] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 13:54:17,988] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 13:54:17,989] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 3867 ms
[2023-08-10 13:54:18,135] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 13:54:18,461] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 13:54:18,572] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:54:18,572] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/stock
[2023-08-10 13:54:18,573] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/stock', applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 13:54:18,579] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x66803603, L:/192.168.43.8:64793 - R:/192.168.43.128:8091]
[2023-08-10 13:54:18,579] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0x66803603, L:/192.168.43.8:64793 - R:/192.168.43.128:8091]
[2023-08-10 13:54:19,969] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.stock.service.impl.StockServiceImpl$$EnhancerBySpringCGLIB$$791f7788] with name [stockServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 13:54:20,282] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 13:54:22,464] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8020"]
[2023-08-10 13:54:22,471] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8020 (http) with context path ''
[2023-08-10 13:54:22,474] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:54:22,475] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:54:22,661] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP stock-service 26.26.26.1:8020 register finished
[2023-08-10 13:54:23,030] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 13:54:23,039] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 13:54:23,052] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 13:54:23,149] [logId] [INFO] [main] StockApplication[61] - Started StockApplication in 14.89 seconds (JVM running for 15.982)
[2023-08-10 13:54:23,151] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 13:54:23,152] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service, group=DEFAULT_GROUP
[2023-08-10 13:54:23,152] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service.yaml, group=DEFAULT_GROUP
[2023-08-10 13:57:18,445] [logId] [WARN] [Thread-12] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 13:57:18,445] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 13:57:18,446] [logId] [WARN] [Thread-12] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 13:57:18,447] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 13:57:18,878] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 13:57:18,883] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 13:57:18,891] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 13:57:18,894] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 13:57:18,896] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x9a8c6abc, L:/192.168.43.8:64745 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,896] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x9a8c6abc, L:/192.168.43.8:64745 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,897] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x66803603, L:/192.168.43.8:64793 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,897] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x9a8c6abc, L:/192.168.43.8:64745 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,897] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x66803603, L:/192.168.43.8:64793 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,897] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x9a8c6abc, L:/192.168.43.8:64745 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,897] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x66803603, L:/192.168.43.8:64793 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,898] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x66803603, L:/192.168.43.8:64793 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,898] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9a8c6abc, L:/192.168.43.8:64745 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:57:18,898] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x66803603, L:/192.168.43.8:64793 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:57:18,898] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9a8c6abc, L:/192.168.43.8:64745 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:57:18,898] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x66803603, L:/192.168.43.8:64793 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:57:33,530] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service] & group[DEFAULT_GROUP]
[2023-08-10 13:57:33,534] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 13:57:33,536] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service-dev.yaml] & group[DEFAULT_GROUP]
[2023-08-10 13:57:33,537] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-stock-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-stock-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-stock-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 13:57:33,557] [logId] [INFO] [main] StockApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 13:57:34,365] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1bf868ba-ef39-3455-a084-8bfca333b18e
[2023-08-10 13:57:34,420] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:34,421] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:34,422] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:34,443] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:34,447] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:34,450] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:34,450] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$449/1019714562] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:34,451] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:34,454] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:34,455] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:34,457] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 13:57:34,505] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 13:57:34,512] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 13:57:34,520] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:57:34,520] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:57:34,927] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 13:57:35,086] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:57:35,110] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:57:35,110] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:57:35,332] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:57:35,810] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 13:57:36,952] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x9362b4e2, L:/192.168.43.8:65165 - R:/192.168.43.128:8091]
[2023-08-10 13:57:36,958] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 44 ms, version:1.6.1,role:TMROLE,channel:[id: 0x9362b4e2, L:/192.168.43.8:65165 - R:/192.168.43.128:8091]
[2023-08-10 13:57:36,959] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[stock-service] txServiceGroup[stock-tx-group]
[2023-08-10 13:57:36,996] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 13:57:36,996] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 13:57:37,003] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:57:37,004] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[stock-service] txServiceGroup[stock-tx-group]
[2023-08-10 13:57:37,004] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 13:57:37,486] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8020 (http)
[2023-08-10 13:57:37,496] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8020"]
[2023-08-10 13:57:37,496] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 13:57:37,497] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 13:57:37,651] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 13:57:37,652] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4084 ms
[2023-08-10 13:57:37,818] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 13:57:38,310] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 13:57:38,467] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:57:38,467] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/stock
[2023-08-10 13:57:38,469] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/stock', applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 13:57:38,476] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x586c471a, L:/192.168.43.8:65181 - R:/192.168.43.128:8091]
[2023-08-10 13:57:38,476] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 5 ms, version:1.6.1,role:RMROLE,channel:[id: 0x586c471a, L:/192.168.43.8:65181 - R:/192.168.43.128:8091]
[2023-08-10 13:57:40,389] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.stock.service.impl.StockServiceImpl$$EnhancerBySpringCGLIB$$dfe1ae9e] with name [stockServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 13:57:40,700] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 13:57:43,163] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8020"]
[2023-08-10 13:57:43,173] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8020 (http) with context path ''
[2023-08-10 13:57:43,177] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:57:43,177] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:57:43,376] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP stock-service 26.26.26.1:8020 register finished
[2023-08-10 13:57:44,284] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 13:57:44,299] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 13:57:44,325] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 13:57:44,552] [logId] [INFO] [main] StockApplication[61] - Started StockApplication in 17.777 seconds (JVM running for 19.26)
[2023-08-10 13:57:44,559] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 13:57:44,560] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service, group=DEFAULT_GROUP
[2023-08-10 13:57:44,561] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service.yaml, group=DEFAULT_GROUP
[2023-08-10 13:59:44,191] [logId] [INFO] [http-nio-8020-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 13:59:44,191] [logId] [INFO] [http-nio-8020-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 13:59:44,195] [logId] [INFO] [http-nio-8020-exec-1] DispatcherServlet[547] - Completed initialization in 3 ms
[2023-08-10 13:59:44,246] [logId] [INFO] [http-nio-8020-exec-1] LogUtil[67] - requestId：fb8d12aba52a4fd3ae775c763d31f59b
[2023-08-10 13:59:44,316] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8020-exec-1] LogUtil[76] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 13:59:44"}
[2023-08-10 13:59:44,399] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 13:59:44,407] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 13:59:44,470] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - <==      Total: 1
[2023-08-10 13:59:44,473] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8020-exec-1] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 13:59:44,474] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8020-exec-1] updateById[143] - ==> Parameters: 10001(String), 21(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 13:59:44,589] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8020-exec-1] updateById[143] - <==    Updates: 1
[2023-08-10 13:59:44,592] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8020-exec-1] LogUtil[54] - 返回参数：{"code":200,"data":21,"message":"操作成功","success":true,"time":"2023-08-10 13:59:44"}
[2023-08-10 13:59:44,601] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [Feh_Optimize_1] LogUtil[285] - 日志信息：{"className":"com.sakura.stock.controller.StockController","code":200,"ip":"26.26.26.1","message":"操作成功","methodName":"getProductNum","module":"stock","name":"获取商品库存数量","param":"null","path":"/stock/getProductNum/10001","remark":"","requestBody":false,"requestId":"fb8d12aba52a4fd3ae775c763d31f59b","requestMethod":"GET","success":true,"type":4}
[2023-08-10 14:13:52,056] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 14:13:52,056] [logId] [WARN] [Thread-10] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 14:13:52,057] [logId] [WARN] [Thread-10] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 14:13:52,058] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 14:13:52,523] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 14:13:52,536] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 14:13:52,547] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 14:13:52,550] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 14:13:52,552] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x9362b4e2, L:/192.168.43.8:65165 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,552] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x9362b4e2, L:/192.168.43.8:65165 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,553] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x9362b4e2, L:/192.168.43.8:65165 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,553] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x9362b4e2, L:/192.168.43.8:65165 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,555] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9362b4e2, L:/192.168.43.8:65165 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:13:52,555] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9362b4e2, L:/192.168.43.8:65165 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:13:52,556] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x586c471a, L:/192.168.43.8:65181 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,556] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x586c471a, L:/192.168.43.8:65181 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,557] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x586c471a, L:/192.168.43.8:65181 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,557] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x586c471a, L:/192.168.43.8:65181 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,558] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x586c471a, L:/192.168.43.8:65181 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:13:52,558] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x586c471a, L:/192.168.43.8:65181 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:14:06,026] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service] & group[DEFAULT_GROUP]
[2023-08-10 14:14:06,032] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:14:06,035] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service-dev.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:14:06,035] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-stock-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-stock-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-stock-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 14:14:06,056] [logId] [INFO] [main] StockApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 14:14:06,980] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1bf868ba-ef39-3455-a084-8bfca333b18e
[2023-08-10 14:14:07,054] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:07,054] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:07,055] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:07,087] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:07,091] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:07,093] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:07,094] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$449/1810273055] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:07,095] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:07,098] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:07,100] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:07,104] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 14:14:07,171] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 14:14:07,181] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 14:14:07,190] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:14:07,191] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:14:07,716] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 14:14:07,964] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:14:08,003] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:14:08,004] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:14:08,268] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:14:09,010] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 14:14:10,078] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x6ffeb639, L:/192.168.43.8:49913 - R:/192.168.43.128:8091]
[2023-08-10 14:14:10,087] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 70 ms, version:1.6.1,role:TMROLE,channel:[id: 0x6ffeb639, L:/192.168.43.8:49913 - R:/192.168.43.128:8091]
[2023-08-10 14:14:10,087] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[stock-service] txServiceGroup[stock-tx-group]
[2023-08-10 14:14:10,111] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 14:14:10,112] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 14:14:10,118] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:14:10,119] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[stock-service] txServiceGroup[stock-tx-group]
[2023-08-10 14:14:10,119] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 14:14:10,471] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8020 (http)
[2023-08-10 14:14:10,479] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8020"]
[2023-08-10 14:14:10,479] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 14:14:10,479] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 14:14:10,615] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 14:14:10,615] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4546 ms
[2023-08-10 14:14:10,775] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 14:14:11,172] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 14:14:11,300] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:14:11,301] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/stock
[2023-08-10 14:14:11,302] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/stock', applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 14:14:11,307] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x3082cdf9, L:/192.168.43.8:49957 - R:/192.168.43.128:8091]
[2023-08-10 14:14:11,307] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 3 ms, version:1.6.1,role:RMROLE,channel:[id: 0x3082cdf9, L:/192.168.43.8:49957 - R:/192.168.43.128:8091]
[2023-08-10 14:14:12,555] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.stock.service.impl.StockServiceImpl$$EnhancerBySpringCGLIB$$6e01cb5c] with name [stockServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 14:14:12,967] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 14:14:15,275] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8020"]
[2023-08-10 14:14:15,283] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8020 (http) with context path ''
[2023-08-10 14:14:15,286] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:14:15,286] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:14:15,479] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP stock-service 26.26.26.1:8020 register finished
[2023-08-10 14:14:16,529] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 14:14:16,541] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 14:14:16,559] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 14:14:16,694] [logId] [INFO] [main] StockApplication[61] - Started StockApplication in 15.23 seconds (JVM running for 16.292)
[2023-08-10 14:14:16,697] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 14:14:16,698] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service, group=DEFAULT_GROUP
[2023-08-10 14:14:16,698] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service.yaml, group=DEFAULT_GROUP
[2023-08-10 14:14:50,399] [logId] [INFO] [http-nio-8020-exec-2] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 14:14:50,400] [logId] [INFO] [http-nio-8020-exec-2] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 14:14:50,402] [logId] [INFO] [http-nio-8020-exec-2] DispatcherServlet[547] - Completed initialization in 2 ms
[2023-08-10 14:14:50,436] [logId] [INFO] [http-nio-8020-exec-2] LogUtil[60] - requestId：28009aa0e32c419e8adc0156f2e47f8f
[2023-08-10 14:14:50,489] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8020-exec-2] LogUtil[69] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 14:14:50"}
[2023-08-10 14:14:50,576] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 14:14:50,585] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 14:14:50,651] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8020-exec-2] selectOne[143] - <==      Total: 1
[2023-08-10 14:14:50,654] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8020-exec-2] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 14:14:50,655] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8020-exec-2] updateById[143] - ==> Parameters: 10001(String), 20(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 14:14:50,803] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8020-exec-2] updateById[143] - <==    Updates: 1
[2023-08-10 14:14:50,806] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8020-exec-2] LogUtil[47] - 返回参数：{"code":200,"data":20,"message":"操作成功","success":true,"time":"2023-08-10 14:14:50"}
[2023-08-10 14:14:50,816] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [Feh_Optimize_1] LogUtil[278] - 日志信息：{"className":"com.sakura.stock.controller.StockController","code":200,"ip":"26.26.26.1","message":"操作成功","methodName":"getProductNum","module":"stock","name":"获取商品库存数量","param":"null","path":"/stock/getProductNum/10001","remark":"","requestBody":false,"requestId":"28009aa0e32c419e8adc0156f2e47f8f","requestMethod":"GET","success":true,"type":4}
[2023-08-10 14:18:48,649] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 14:18:48,649] [logId] [WARN] [Thread-12] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 14:18:48,650] [logId] [WARN] [Thread-12] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 14:18:48,651] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 14:18:49,089] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 14:18:49,092] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 14:18:49,099] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 14:18:49,101] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 14:18:49,102] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x6ffeb639, L:/192.168.43.8:49913 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,102] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x6ffeb639, L:/192.168.43.8:49913 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,102] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x3082cdf9, L:/192.168.43.8:49957 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,102] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x6ffeb639, L:/192.168.43.8:49913 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,102] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x3082cdf9, L:/192.168.43.8:49957 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,103] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x3082cdf9, L:/192.168.43.8:49957 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,103] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x6ffeb639, L:/192.168.43.8:49913 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,103] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x3082cdf9, L:/192.168.43.8:49957 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,103] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3082cdf9, L:/192.168.43.8:49957 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:18:49,103] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x6ffeb639, L:/192.168.43.8:49913 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:18:49,103] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3082cdf9, L:/192.168.43.8:49957 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:18:49,103] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x6ffeb639, L:/192.168.43.8:49913 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:19:11,146] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service] & group[DEFAULT_GROUP]
[2023-08-10 14:19:11,150] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:19:11,153] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service-dev.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:19:11,153] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-stock-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-stock-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-stock-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 14:19:11,169] [logId] [INFO] [main] StockApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 14:19:11,847] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1bf868ba-ef39-3455-a084-8bfca333b18e
[2023-08-10 14:19:11,891] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:11,891] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:11,891] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:11,907] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:11,910] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:11,911] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:11,912] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$449/501530336] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:11,912] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:11,914] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:11,915] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:11,916] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 14:19:11,956] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 14:19:11,961] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 14:19:11,967] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:19:11,967] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:19:12,349] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 14:19:12,492] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:19:12,516] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:19:12,516] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:19:12,729] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:19:13,081] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 14:19:14,760] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x9cb1fe01, L:/192.168.43.8:50509 - R:/192.168.43.128:8091]
[2023-08-10 14:19:14,765] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 47 ms, version:1.6.1,role:TMROLE,channel:[id: 0x9cb1fe01, L:/192.168.43.8:50509 - R:/192.168.43.128:8091]
[2023-08-10 14:19:14,766] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[stock-service] txServiceGroup[stock-tx-group]
[2023-08-10 14:19:14,786] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 14:19:14,787] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 14:19:14,793] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:19:14,794] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[stock-service] txServiceGroup[stock-tx-group]
[2023-08-10 14:19:14,794] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 14:19:15,080] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8020 (http)
[2023-08-10 14:19:15,086] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8020"]
[2023-08-10 14:19:15,087] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 14:19:15,087] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 14:19:15,209] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 14:19:15,209] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4031 ms
[2023-08-10 14:19:15,344] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 14:19:15,655] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 14:19:15,773] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:19:15,773] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/stock
[2023-08-10 14:19:15,774] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/stock', applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 14:19:15,780] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x95cd8d9d, L:/192.168.43.8:50525 - R:/192.168.43.128:8091]
[2023-08-10 14:19:15,780] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0x95cd8d9d, L:/192.168.43.8:50525 - R:/192.168.43.128:8091]
[2023-08-10 14:19:17,382] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.stock.service.impl.StockServiceImpl$$EnhancerBySpringCGLIB$$791f7788] with name [stockServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 14:19:17,708] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 14:19:20,168] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8020"]
[2023-08-10 14:19:20,176] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8020 (http) with context path ''
[2023-08-10 14:19:20,179] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:19:20,179] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:19:20,367] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP stock-service 26.26.26.1:8020 register finished
[2023-08-10 14:19:20,767] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 14:19:20,775] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 14:19:20,788] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 14:19:20,885] [logId] [INFO] [main] StockApplication[61] - Started StockApplication in 15.546 seconds (JVM running for 17.144)
[2023-08-10 14:19:20,887] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 14:19:20,888] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service, group=DEFAULT_GROUP
[2023-08-10 14:19:20,889] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service.yaml, group=DEFAULT_GROUP
[2023-08-10 14:19:35,489] [logId] [INFO] [http-nio-8020-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 14:19:35,490] [logId] [INFO] [http-nio-8020-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 14:19:35,493] [logId] [INFO] [http-nio-8020-exec-1] DispatcherServlet[547] - Completed initialization in 2 ms
[2023-08-10 14:19:35,552] [logId] [INFO] [http-nio-8020-exec-1] LogUtil[60] - requestId：c36de9a0374a4423b271a1d988fe22e7
[2023-08-10 14:19:35,674] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8020-exec-1] LogUtil[69] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 14:19:35"}
[2023-08-10 14:19:35,789] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 14:19:35,801] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 14:19:35,870] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8020-exec-1] selectOne[143] - <==      Total: 1
[2023-08-10 14:19:35,874] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8020-exec-1] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 14:19:35,875] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8020-exec-1] updateById[143] - ==> Parameters: 10001(String), 19(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 14:19:36,018] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8020-exec-1] updateById[143] - <==    Updates: 1
[2023-08-10 14:19:36,022] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8020-exec-1] LogUtil[47] - 返回参数：{"code":200,"data":19,"message":"操作成功","success":true,"time":"2023-08-10 14:19:36"}
[2023-08-10 14:19:36,036] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [Feh_Optimize_1] LogUtil[278] - 日志信息：{"className":"com.sakura.stock.controller.StockController","code":200,"ip":"26.26.26.1","message":"操作成功","methodName":"getProductNum","module":"stock","name":"获取商品库存数量","param":"null","path":"/stock/getProductNum/10001","remark":"","requestBody":false,"requestId":"c36de9a0374a4423b271a1d988fe22e7","requestMethod":"GET","success":true,"type":4}
[2023-08-10 14:53:04,540] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 14:53:04,540] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 14:53:04,541] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 14:53:04,541] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 14:53:05,144] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 14:53:05,148] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 14:53:05,157] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 14:53:05,160] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 14:53:05,162] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x9cb1fe01, L:/192.168.43.8:50509 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,162] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x9cb1fe01, L:/192.168.43.8:50509 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,163] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x9cb1fe01, L:/192.168.43.8:50509 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,163] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x95cd8d9d, L:/192.168.43.8:50525 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,163] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x95cd8d9d, L:/192.168.43.8:50525 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,163] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x9cb1fe01, L:/192.168.43.8:50509 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,163] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x95cd8d9d, L:/192.168.43.8:50525 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,163] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x95cd8d9d, L:/192.168.43.8:50525 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,163] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9cb1fe01, L:/192.168.43.8:50509 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:53:05,163] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x95cd8d9d, L:/192.168.43.8:50525 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:53:05,163] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9cb1fe01, L:/192.168.43.8:50509 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:53:05,163] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x95cd8d9d, L:/192.168.43.8:50525 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:53:28,772] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service] & group[DEFAULT_GROUP]
[2023-08-10 14:53:28,776] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:53:28,779] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[stock-service-dev.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:53:28,780] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-stock-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-stock-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-stock-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 14:53:28,796] [logId] [INFO] [main] StockApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 14:53:29,453] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1bf868ba-ef39-3455-a084-8bfca333b18e
[2023-08-10 14:53:29,499] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:29,500] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:29,500] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:29,520] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:29,523] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:29,525] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:29,525] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$449/1019714562] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:29,526] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:29,528] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:29,529] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:29,531] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 14:53:29,581] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 14:53:29,587] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 14:53:29,592] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:53:29,592] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:53:29,985] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 14:53:30,140] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:53:30,164] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:53:30,164] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:53:30,404] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:53:31,357] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 14:53:32,542] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xfb23afae, L:/192.168.43.8:52938 - R:/192.168.43.128:8091]
[2023-08-10 14:53:32,547] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 55 ms, version:1.6.1,role:TMROLE,channel:[id: 0xfb23afae, L:/192.168.43.8:52938 - R:/192.168.43.128:8091]
[2023-08-10 14:53:32,547] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[stock-service] txServiceGroup[stock-tx-group]
[2023-08-10 14:53:32,568] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 14:53:32,569] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 14:53:32,574] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:53:32,574] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[stock-service] txServiceGroup[stock-tx-group]
[2023-08-10 14:53:32,574] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 14:53:32,920] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8020 (http)
[2023-08-10 14:53:32,926] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8020"]
[2023-08-10 14:53:32,926] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 14:53:32,926] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 14:53:33,055] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 14:53:33,055] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4250 ms
[2023-08-10 14:53:33,167] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 14:53:33,448] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 14:53:33,547] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:53:33,548] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/stock
[2023-08-10 14:53:33,548] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/stock', applicationId='stock-service', transactionServiceGroup='stock-tx-group'} >
[2023-08-10 14:53:33,554] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x5bdd1a28, L:/192.168.43.8:52952 - R:/192.168.43.128:8091]
[2023-08-10 14:53:33,554] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0x5bdd1a28, L:/192.168.43.8:52952 - R:/192.168.43.128:8091]
[2023-08-10 14:53:34,323] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.stock.service.impl.StockServiceImpl$$EnhancerBySpringCGLIB$$dfe1ae9e] with name [stockServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 14:53:34,632] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 14:53:36,457] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8020"]
[2023-08-10 14:53:36,465] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8020 (http) with context path ''
[2023-08-10 14:53:36,468] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:53:36,468] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:53:36,663] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP stock-service 26.26.26.1:8020 register finished
[2023-08-10 14:53:37,199] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 14:53:37,208] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 14:53:37,220] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 14:53:37,317] [logId] [INFO] [main] StockApplication[61] - Started StockApplication in 14.022 seconds (JVM running for 15.157)
[2023-08-10 14:53:37,319] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 14:53:37,320] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service, group=DEFAULT_GROUP
[2023-08-10 14:53:37,321] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=stock-service.yaml, group=DEFAULT_GROUP
[2023-08-10 14:53:43,100] [logId] [INFO] [http-nio-8020-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 14:53:43,100] [logId] [INFO] [http-nio-8020-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 14:53:43,103] [logId] [INFO] [http-nio-8020-exec-1] DispatcherServlet[547] - Completed initialization in 2 ms
[2023-08-10 14:53:43,114] [logId] [WARN] [http-nio-8020-exec-1] PageNotFound[1282] - No mapping for GET /
[2023-08-10 14:53:43,183] [logId] [WARN] [http-nio-8020-exec-2] PageNotFound[1282] - No mapping for GET /favicon.ico
[2023-08-10 14:53:50,789] [logId] [INFO] [http-nio-8020-exec-3] LogUtil[60] - requestId：951d6fc4fd3b4310a4738b0d7d7c189a
[2023-08-10 14:53:50,834] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8020-exec-3] LogUtil[69] - 请求参数：{"ip":"26.26.26.1","path":"/stock/getProductNum/10001","requestBody":false,"requestMethod":"GET","time":"2023-08-10 14:53:50"}
[2023-08-10 14:53:50,909] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8020-exec-3] selectOne[143] - ==>  Preparing: SELECT id,product_no,product_num,create_dt,update_dt,status FROM t_stock WHERE (product_no = ? AND status = ?) 
[2023-08-10 14:53:50,918] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8020-exec-3] selectOne[143] - ==> Parameters: 10001(String), 1(Integer)
[2023-08-10 14:53:50,965] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8020-exec-3] selectOne[143] - <==      Total: 1
[2023-08-10 14:53:50,967] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8020-exec-3] updateById[143] - ==>  Preparing: UPDATE t_stock SET product_no=?, product_num=?, create_dt=?, update_dt=?, status=? WHERE id=? 
[2023-08-10 14:53:50,968] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8020-exec-3] updateById[143] - ==> Parameters: 10001(String), 18(Integer), 2023-07-28 17:41:00.0(Timestamp), 2023-07-28 17:41:00.0(Timestamp), 1(Integer), 1(Integer)
[2023-08-10 14:53:51,104] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8020-exec-3] updateById[143] - <==    Updates: 1
[2023-08-10 14:53:51,107] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8020-exec-3] LogUtil[47] - 返回参数：{"code":200,"data":18,"message":"操作成功","success":true,"time":"2023-08-10 14:53:51"}
[2023-08-10 14:53:51,117] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [Feh_Optimize_1] LogUtil[278] - 日志信息：{"className":"com.sakura.stock.controller.StockController","code":200,"ip":"26.26.26.1","message":"操作成功","methodName":"getProductNum","module":"stock","name":"获取商品库存数量","param":"null","path":"/stock/getProductNum/10001","remark":"","requestBody":false,"requestId":"951d6fc4fd3b4310a4738b0d7d7c189a","requestMethod":"GET","success":true,"type":4}
[2023-08-10 17:05:05,873] [logId] [WARN] [Thread-12] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 17:05:05,875] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 17:05:05,876] [logId] [WARN] [Thread-12] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 17:05:05,877] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 17:05:06,317] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 17:05:06,320] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 17:05:06,326] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 17:05:06,328] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 17:05:06,330] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xfb23afae, L:/192.168.43.8:52938 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,330] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xfb23afae, L:/192.168.43.8:52938 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,330] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xfb23afae, L:/192.168.43.8:52938 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,330] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xfb23afae, L:/192.168.43.8:52938 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,330] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x5bdd1a28, L:/192.168.43.8:52952 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,330] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xfb23afae, L:/192.168.43.8:52938 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 17:05:06,330] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x5bdd1a28, L:/192.168.43.8:52952 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,330] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xfb23afae, L:/192.168.43.8:52938 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 17:05:06,330] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x5bdd1a28, L:/192.168.43.8:52952 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,331] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x5bdd1a28, L:/192.168.43.8:52952 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,331] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5bdd1a28, L:/192.168.43.8:52952 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 17:05:06,331] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5bdd1a28, L:/192.168.43.8:52952 ! R:/192.168.43.128:8091]) will closed
