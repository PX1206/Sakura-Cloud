[2023-08-10 09:37:14,375] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 09:37:14,413] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 09:37:14,474] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 09:37:16,116] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 09:37:16,264] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:37:16,265] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:37:16,266] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:37:16,314] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:37:16,327] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:37:16,332] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:37:16,333] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/320501014] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:37:16,335] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:37:16,341] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:37:16,346] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:37:16,355] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 09:37:16,470] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 09:37:16,487] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 09:37:16,502] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:37:16,502] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:37:17,302] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 09:37:17,802] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 09:37:17,948] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:37:17,949] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:37:18,348] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:37:19,735] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 09:37:24,440] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xdf21a9a5, L:/192.168.43.8:59467 - R:/192.168.43.128:8091]
[2023-08-10 09:37:24,454] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 829 ms, version:1.6.1,role:TMROLE,channel:[id: 0xdf21a9a5, L:/192.168.43.8:59467 - R:/192.168.43.128:8091]
[2023-08-10 09:37:24,455] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 09:37:24,841] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 09:37:24,842] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 09:37:24,876] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 09:37:24,877] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 09:37:24,878] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 09:37:26,332] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 09:37:26,348] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 09:37:26,351] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 09:37:26,351] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 09:37:26,871] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 09:37:26,871] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 12367 ms
[2023-08-10 09:37:27,401] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 09:37:28,492] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 09:37:28,824] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:37:28,825] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 09:37:28,829] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 09:37:28,902] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xd8380e67, L:/192.168.43.8:59527 - R:/192.168.43.128:8091]
[2023-08-10 09:37:28,903] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 35 ms, version:1.6.1,role:RMROLE,channel:[id: 0xd8380e67, L:/192.168.43.8:59527 - R:/192.168.43.128:8091]
[2023-08-10 09:37:31,772] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 09:37:31,792] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 09:37:31,876] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 09:37:31,877] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 09:37:32,101] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$a66a4f01] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 09:37:32,720] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 09:37:35,333] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 09:37:35,349] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 09:37:35,355] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:37:35,356] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:37:35,564] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 09:37:36,330] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 09:37:36,343] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 09:37:36,367] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 09:37:36,550] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 27.707 seconds (JVM running for 28.891)
[2023-08-10 09:37:36,562] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 09:37:36,569] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 09:37:36,570] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 09:40:50,090] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 09:40:50,091] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 09:40:50,093] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 2 ms
[2023-08-10 09:40:50,244] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[75] - requestId：2b4069a3dda74ce089b4f2afd0714876
[2023-08-10 09:40:50,338] [2b4069a3dda74ce089b4f2afd0714876] [INFO] [http-nio-8010-exec-1] LogUtil[85] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 09:40:50"}
[2023-08-10 09:40:50,367] [2b4069a3dda74ce089b4f2afd0714876] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@6ba2dee4
[2023-08-10 09:40:50,392] [2b4069a3dda74ce089b4f2afd0714876] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745771]
[2023-08-10 09:40:50,576] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 09:40:50,577] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745771
[2023-08-10 09:40:50,577] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 09:40:51,614] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (1036ms)
[2023-08-10 09:40:51,615] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 09:40:51,615] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 09:40:51,615] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 01:40:51 GMT
[2023-08-10 09:40:51,616] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 09:40:51,616] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 09:40:51,616] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 09:40:51,616] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":41,"time":"2023-08-10 01:40:51"}
[2023-08-10 09:40:51,617] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 09:40:51,629] [2b4069a3dda74ce089b4f2afd0714876] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=41, time=Thu Aug 10 09:40:51 CST 2023)
[2023-08-10 09:40:51,636] [2b4069a3dda74ce089b4f2afd0714876] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 09:40:51,636] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 09:40:52,072] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (435ms)
[2023-08-10 09:40:52,075] [2b4069a3dda74ce089b4f2afd0714876] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 09:40:52 CST 2023)
[2023-08-10 09:40:52,116] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 09:40:52,131] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081001405163192776393(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 09:40:52,339] [2b4069a3dda74ce089b4f2afd0714876] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 09:40:52,467] [2b4069a3dda74ce089b4f2afd0714876] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745771
[2023-08-10 09:40:52,468] [2b4069a3dda74ce089b4f2afd0714876] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745771] commit status: Committed
[2023-08-10 09:40:52,472] [2b4069a3dda74ce089b4f2afd0714876] [INFO] [http-nio-8010-exec-1] LogUtil[64] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 09:40:52"}
[2023-08-10 09:40:52,770] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745771,branchId=5566871554652745772,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 09:40:52,774] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745771 5566871554652745772 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 09:40:52,775] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 09:41:02,480] [2b4069a3dda74ce089b4f2afd0714876] [INFO] [Feh_Optimize_1] LogUtil[260] - ++++++++++++++++++++++++++++++++++++++++++
[2023-08-10 09:41:02,488] [2b4069a3dda74ce089b4f2afd0714876] [INFO] [Feh_Optimize_1] LogUtil[334] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 09:43:08,407] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 09:43:08,407] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 09:43:08,408] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 09:43:08,409] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 09:43:08,668] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 09:43:08,673] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 09:43:08,695] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 09:43:08,701] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 09:43:08,704] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xdf21a9a5, L:/192.168.43.8:59467 ! R:/192.168.43.128:8091]
[2023-08-10 09:43:08,704] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xdf21a9a5, L:/192.168.43.8:59467 ! R:/192.168.43.128:8091]
[2023-08-10 09:43:08,704] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xdf21a9a5, L:/192.168.43.8:59467 ! R:/192.168.43.128:8091]
[2023-08-10 09:43:08,705] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xdf21a9a5, L:/192.168.43.8:59467 ! R:/192.168.43.128:8091]
[2023-08-10 09:43:08,705] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xdf21a9a5, L:/192.168.43.8:59467 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:43:08,706] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xdf21a9a5, L:/192.168.43.8:59467 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:43:08,736] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xd8380e67, L:/192.168.43.8:59527 ! R:/192.168.43.128:8091]
[2023-08-10 09:43:08,736] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xd8380e67, L:/192.168.43.8:59527 ! R:/192.168.43.128:8091]
[2023-08-10 09:43:08,736] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xd8380e67, L:/192.168.43.8:59527 ! R:/192.168.43.128:8091]
[2023-08-10 09:43:08,766] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xd8380e67, L:/192.168.43.8:59527 ! R:/192.168.43.128:8091]
[2023-08-10 09:43:08,767] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd8380e67, L:/192.168.43.8:59527 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:43:08,767] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd8380e67, L:/192.168.43.8:59527 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:43:23,508] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 09:43:23,543] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 09:43:23,634] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 09:43:26,405] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 09:43:26,598] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:43:26,598] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:43:26,599] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:43:26,666] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:43:26,673] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:43:26,681] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:43:26,685] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/1459215931] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:43:26,686] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:43:26,693] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:43:26,697] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:43:26,701] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 09:43:26,805] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 09:43:26,816] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 09:43:26,871] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:43:26,872] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:43:27,460] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 09:43:27,737] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 09:43:27,782] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:43:27,783] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:43:28,048] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:43:28,307] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 09:43:28,995] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x311fe24a, L:/192.168.43.8:60058 - R:/192.168.43.128:8091]
[2023-08-10 09:43:29,000] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 72 ms, version:1.6.1,role:TMROLE,channel:[id: 0x311fe24a, L:/192.168.43.8:60058 - R:/192.168.43.128:8091]
[2023-08-10 09:43:29,001] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 09:43:29,034] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 09:43:29,035] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 09:43:29,042] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 09:43:29,043] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 09:43:29,043] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 09:43:29,511] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 09:43:29,524] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 09:43:29,524] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 09:43:29,524] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 09:43:29,675] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 09:43:29,676] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 6006 ms
[2023-08-10 09:43:30,099] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 09:43:30,365] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 09:43:30,494] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:43:30,494] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 09:43:30,495] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 09:43:30,502] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x274c6d04, L:/192.168.43.8:60066 - R:/192.168.43.128:8091]
[2023-08-10 09:43:30,503] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 6 ms, version:1.6.1,role:RMROLE,channel:[id: 0x274c6d04, L:/192.168.43.8:60066 - R:/192.168.43.128:8091]
[2023-08-10 09:43:31,431] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 09:43:31,439] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 09:43:31,517] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 09:43:31,518] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 09:43:31,691] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$52905815] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 09:43:32,161] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 09:43:33,905] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 09:43:33,919] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 09:43:33,922] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:43:33,923] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:43:34,135] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 09:43:34,681] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 09:43:34,696] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 09:43:34,719] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 09:43:34,866] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 16.138 seconds (JVM running for 17.977)
[2023-08-10 09:43:34,871] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 09:43:34,874] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 09:43:34,874] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 09:53:55,089] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 09:53:55,089] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 09:53:55,090] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 09:53:55,090] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 09:53:55,564] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 09:53:55,567] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 09:53:55,584] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 09:53:55,593] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 09:53:55,596] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x274c6d04, L:/192.168.43.8:60066 ! R:/192.168.43.128:8091]
[2023-08-10 09:53:55,597] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x274c6d04, L:/192.168.43.8:60066 ! R:/192.168.43.128:8091]
[2023-08-10 09:53:55,597] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x274c6d04, L:/192.168.43.8:60066 ! R:/192.168.43.128:8091]
[2023-08-10 09:53:55,597] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x274c6d04, L:/192.168.43.8:60066 ! R:/192.168.43.128:8091]
[2023-08-10 09:53:55,599] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x274c6d04, L:/192.168.43.8:60066 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:53:55,599] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x274c6d04, L:/192.168.43.8:60066 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:54:03,874] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 09:54:03,891] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 09:54:03,924] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 09:54:05,427] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 09:54:05,534] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:05,535] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:05,535] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:05,570] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:05,574] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:05,579] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:05,580] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/1655993826] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:05,581] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:05,586] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:05,588] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:54:05,590] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 09:54:05,671] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 09:54:05,685] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 09:54:05,698] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:54:05,698] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:54:06,257] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 09:54:06,492] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 09:54:06,522] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:54:06,523] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:54:06,765] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:54:07,566] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 09:54:09,199] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xc1cd633c, L:/192.168.43.8:60883 - R:/192.168.43.128:8091]
[2023-08-10 09:54:09,208] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 72 ms, version:1.6.1,role:TMROLE,channel:[id: 0xc1cd633c, L:/192.168.43.8:60883 - R:/192.168.43.128:8091]
[2023-08-10 09:54:09,209] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 09:54:09,237] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 09:54:09,237] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 09:54:09,246] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 09:54:09,246] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 09:54:09,247] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 09:54:09,697] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 09:54:09,705] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 09:54:09,706] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 09:54:09,706] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 09:54:09,924] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 09:54:09,925] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 5987 ms
[2023-08-10 09:54:10,156] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 09:54:10,605] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 09:54:10,761] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:54:10,762] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 09:54:10,762] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 09:54:10,769] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x8276b7a8, L:/192.168.43.8:60926 - R:/192.168.43.128:8091]
[2023-08-10 09:54:10,770] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 5 ms, version:1.6.1,role:RMROLE,channel:[id: 0x8276b7a8, L:/192.168.43.8:60926 - R:/192.168.43.128:8091]
[2023-08-10 09:54:11,842] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 09:54:11,864] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 09:54:11,948] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 09:54:11,949] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 09:54:12,105] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$60d33b5e] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 09:54:12,646] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 09:54:15,675] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 09:54:15,695] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 09:54:15,699] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:54:15,699] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:54:15,918] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 09:54:16,675] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 09:54:16,691] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 09:54:16,710] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 09:54:16,877] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 18.571 seconds (JVM running for 19.679)
[2023-08-10 09:54:16,887] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 09:54:16,891] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 09:54:16,891] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 09:54:32,481] [logId] [INFO] [http-nio-8010-exec-3] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 09:54:32,482] [logId] [INFO] [http-nio-8010-exec-3] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 09:54:32,484] [logId] [INFO] [http-nio-8010-exec-3] DispatcherServlet[547] - Completed initialization in 2 ms
[2023-08-10 09:54:32,597] [logId] [INFO] [http-nio-8010-exec-3] LogUtil[75] - requestId：a29839e87798407089be0940a31d1d11
[2023-08-10 09:54:32,662] [a29839e87798407089be0940a31d1d11] [INFO] [http-nio-8010-exec-3] LogUtil[85] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 09:54:32"}
[2023-08-10 09:54:32,683] [a29839e87798407089be0940a31d1d11] [INFO] [http-nio-8010-exec-3] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@3db3b2de
[2023-08-10 09:54:32,693] [a29839e87798407089be0940a31d1d11] [INFO] [http-nio-8010-exec-3] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745773]
[2023-08-10 09:54:32,858] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 09:54:32,859] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745773
[2023-08-10 09:54:32,859] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 09:54:33,543] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (683ms)
[2023-08-10 09:54:33,543] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 09:54:33,544] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 09:54:33,544] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 01:54:33 GMT
[2023-08-10 09:54:33,544] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 09:54:33,544] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 09:54:33,544] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 09:54:33,545] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":40,"time":"2023-08-10 01:54:33"}
[2023-08-10 09:54:33,545] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 09:54:33,557] [a29839e87798407089be0940a31d1d11] [INFO] [http-nio-8010-exec-3] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=40, time=Thu Aug 10 09:54:33 CST 2023)
[2023-08-10 09:54:33,559] [a29839e87798407089be0940a31d1d11] [INFO] [http-nio-8010-exec-3] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 09:54:33,559] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 09:54:33,873] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (313ms)
[2023-08-10 09:54:33,875] [a29839e87798407089be0940a31d1d11] [INFO] [http-nio-8010-exec-3] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 09:54:33 CST 2023)
[2023-08-10 09:54:33,919] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 09:54:33,934] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] insert[143] - ==> Parameters: 2023081001543355797784745(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 09:54:34,119] [a29839e87798407089be0940a31d1d11] [DEBUG] [http-nio-8010-exec-3] insert[143] - <==    Updates: 1
[2023-08-10 09:54:34,200] [a29839e87798407089be0940a31d1d11] [INFO] [http-nio-8010-exec-3] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745773
[2023-08-10 09:54:34,201] [a29839e87798407089be0940a31d1d11] [INFO] [http-nio-8010-exec-3] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745773] commit status: Committed
[2023-08-10 09:54:34,203] [a29839e87798407089be0940a31d1d11] [INFO] [http-nio-8010-exec-3] LogUtil[64] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 09:54:34"}
[2023-08-10 09:54:34,215] [a29839e87798407089be0940a31d1d11] [INFO] [Feh_Optimize_1] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 09:54:34,595] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745773,branchId=5566871554652745774,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 09:54:34,597] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745773 5566871554652745774 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 09:54:34,597] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 09:56:17,167] [logId] [WARN] [Thread-12] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 09:56:17,167] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 09:56:17,168] [logId] [WARN] [Thread-12] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 09:56:17,169] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 09:56:17,416] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 09:56:17,422] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 09:56:17,431] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 09:56:17,434] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 09:56:17,435] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xc1cd633c, L:/192.168.43.8:60883 ! R:/192.168.43.128:8091]
[2023-08-10 09:56:17,436] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xc1cd633c, L:/192.168.43.8:60883 ! R:/192.168.43.128:8091]
[2023-08-10 09:56:17,436] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x8276b7a8, L:/192.168.43.8:60926 ! R:/192.168.43.128:8091]
[2023-08-10 09:56:17,437] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xc1cd633c, L:/192.168.43.8:60883 ! R:/192.168.43.128:8091]
[2023-08-10 09:56:17,437] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x8276b7a8, L:/192.168.43.8:60926 ! R:/192.168.43.128:8091]
[2023-08-10 09:56:17,437] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x8276b7a8, L:/192.168.43.8:60926 ! R:/192.168.43.128:8091]
[2023-08-10 09:56:17,437] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xc1cd633c, L:/192.168.43.8:60883 ! R:/192.168.43.128:8091]
[2023-08-10 09:56:17,437] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x8276b7a8, L:/192.168.43.8:60926 ! R:/192.168.43.128:8091]
[2023-08-10 09:56:17,437] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xc1cd633c, L:/192.168.43.8:60883 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:56:17,437] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x8276b7a8, L:/192.168.43.8:60926 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:56:17,438] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x8276b7a8, L:/192.168.43.8:60926 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:56:17,438] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xc1cd633c, L:/192.168.43.8:60883 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:56:25,596] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 09:56:25,608] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 09:56:25,638] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 09:56:26,603] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 09:56:26,662] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:56:26,663] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:56:26,663] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:56:26,686] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:56:26,691] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:56:26,693] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:56:26,693] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/697172013] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:56:26,694] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:56:26,696] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:56:26,697] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 09:56:26,698] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 09:56:26,754] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 09:56:26,760] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 09:56:26,767] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:56:26,767] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:56:27,209] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 09:56:27,357] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 09:56:27,383] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:56:27,384] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:56:27,603] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:56:27,850] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 09:56:28,531] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x17eacb72, L:/192.168.43.8:61207 - R:/192.168.43.128:8091]
[2023-08-10 09:56:28,537] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 75 ms, version:1.6.1,role:TMROLE,channel:[id: 0x17eacb72, L:/192.168.43.8:61207 - R:/192.168.43.128:8091]
[2023-08-10 09:56:28,538] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 09:56:28,584] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 09:56:28,586] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 09:56:28,597] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 09:56:28,597] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 09:56:28,597] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 09:56:29,118] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 09:56:29,127] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 09:56:29,127] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 09:56:29,127] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 09:56:29,282] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 09:56:29,283] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 3626 ms
[2023-08-10 09:56:29,614] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 09:56:29,862] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 09:56:30,000] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:56:30,000] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 09:56:30,001] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 09:56:30,010] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x282ce639, L:/192.168.43.8:61221 - R:/192.168.43.128:8091]
[2023-08-10 09:56:30,011] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 7 ms, version:1.6.1,role:RMROLE,channel:[id: 0x282ce639, L:/192.168.43.8:61221 - R:/192.168.43.128:8091]
[2023-08-10 09:56:30,703] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 09:56:30,710] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 09:56:30,761] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 09:56:30,761] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 09:56:30,891] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$c26768f1] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 09:56:31,291] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 09:56:33,004] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 09:56:33,016] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 09:56:33,020] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 09:56:33,020] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 09:56:33,210] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 09:56:33,791] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 09:56:33,800] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 09:56:33,819] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 09:56:33,966] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 12.399 seconds (JVM running for 13.45)
[2023-08-10 09:56:33,970] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 09:56:33,972] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 09:56:33,972] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 09:59:23,490] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 09:59:23,491] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 09:59:23,494] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 2 ms
[2023-08-10 09:59:44,519] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[450] - channel [id: 0x17eacb72, L:/192.168.43.8:61207 - R:/192.168.43.128:8091] read idle.
[2023-08-10 09:59:44,519] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[450] - channel [id: 0x282ce639, L:/192.168.43.8:61221 - R:/192.168.43.128:8091] read idle.
[2023-08-10 09:59:44,520] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x282ce639, L:/192.168.43.8:61221 - R:/192.168.43.128:8091]
[2023-08-10 09:59:44,520] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x17eacb72, L:/192.168.43.8:61207 - R:/192.168.43.128:8091]
[2023-08-10 09:59:44,521] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x17eacb72, L:/192.168.43.8:61207 - R:/192.168.43.128:8091]) will closed
[2023-08-10 09:59:44,521] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x282ce639, L:/192.168.43.8:61221 - R:/192.168.43.128:8091]) will closed
[2023-08-10 09:59:44,523] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x282ce639, L:/192.168.43.8:61221 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:59:44,523] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x17eacb72, L:/192.168.43.8:61207 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:59:45,550] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x17eacb72, L:/192.168.43.8:61207 ! R:/192.168.43.128:8091]
[2023-08-10 09:59:45,550] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x282ce639, L:/192.168.43.8:61221 ! R:/192.168.43.128:8091]
[2023-08-10 09:59:46,035] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x17eacb72, L:/192.168.43.8:61207 ! R:/192.168.43.128:8091]
[2023-08-10 09:59:46,035] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x282ce639, L:/192.168.43.8:61221 ! R:/192.168.43.128:8091]
[2023-08-10 09:59:46,035] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x17eacb72, L:/192.168.43.8:61207 ! R:/192.168.43.128:8091]
[2023-08-10 09:59:46,035] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x282ce639, L:/192.168.43.8:61221 ! R:/192.168.43.128:8091]
[2023-08-10 09:59:46,035] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x17eacb72, L:/192.168.43.8:61207 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:59:46,035] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x282ce639, L:/192.168.43.8:61221 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:59:46,036] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x17eacb72, L:/192.168.43.8:61207 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:59:46,255] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x17eacb72, L:/192.168.43.8:61207 ! R:/192.168.43.128:8091]
[2023-08-10 09:59:46,256] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x17eacb72, L:/192.168.43.8:61207 ! R:/192.168.43.128:8091]
[2023-08-10 09:59:46,256] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x17eacb72, L:/192.168.43.8:61207 ! R:/192.168.43.128:8091]
[2023-08-10 09:59:46,256] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x17eacb72, L:/192.168.43.8:61207 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:59:46,036] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x282ce639, L:/192.168.43.8:61221 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:59:46,256] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x17eacb72, L:/192.168.43.8:61207 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:59:46,256] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x282ce639, L:/192.168.43.8:61221 ! R:/192.168.43.128:8091]
[2023-08-10 09:59:46,674] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x282ce639, L:/192.168.43.8:61221 ! R:/192.168.43.128:8091]
[2023-08-10 09:59:47,066] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x282ce639, L:/192.168.43.8:61221 ! R:/192.168.43.128:8091]
[2023-08-10 09:59:47,066] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x282ce639, L:/192.168.43.8:61221 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:59:47,067] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x282ce639, L:/192.168.43.8:61221 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 09:59:47,612] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:59:48,005] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 09:59:48,011] [logId] [INFO] [timeoutChecker_1_1] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x5f843e9e, L:/192.168.43.8:61483 - R:/192.168.43.128:8091]
[2023-08-10 09:59:48,012] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:TMROLE,channel:[id: 0x5f843e9e, L:/192.168.43.8:61483 - R:/192.168.43.128:8091]
[2023-08-10 09:59:48,672] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 09:59:48,877] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 09:59:49,089] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 09:59:49,089] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[75] - requestId：08678a5e3ed54ae1bcd7bc8bc713bcfe
[2023-08-10 09:59:49,647] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x219c8e46, L:/192.168.43.8:61488 - R:/192.168.43.128:8091]
[2023-08-10 09:59:49,648] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[81] - register success, cost 5 ms, version:1.6.1,role:RMROLE,channel:[id: 0x219c8e46, L:/192.168.43.8:61488 - R:/192.168.43.128:8091]
[2023-08-10 09:59:49,712] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [INFO] [http-nio-8010-exec-1] LogUtil[85] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 09:59:48"}
[2023-08-10 09:59:49,733] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@66850beb
[2023-08-10 09:59:49,744] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745775]
[2023-08-10 09:59:49,891] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 09:59:49,892] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745775
[2023-08-10 09:59:49,892] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 09:59:50,032] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (139ms)
[2023-08-10 09:59:50,032] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 09:59:50,032] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 09:59:50,032] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 01:59:50 GMT
[2023-08-10 09:59:50,032] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 09:59:50,032] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 09:59:50,033] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 09:59:50,033] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":39,"time":"2023-08-10 01:59:50"}
[2023-08-10 09:59:50,034] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 09:59:50,044] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=39, time=Thu Aug 10 09:59:50 CST 2023)
[2023-08-10 09:59:50,046] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 09:59:50,046] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 09:59:50,077] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (31ms)
[2023-08-10 09:59:50,079] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 09:59:50 CST 2023)
[2023-08-10 09:59:50,119] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 09:59:50,130] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081001595004480627443(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 09:59:50,294] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 09:59:50,420] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745775
[2023-08-10 09:59:50,421] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745775] commit status: Committed
[2023-08-10 09:59:50,423] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [INFO] [http-nio-8010-exec-1] LogUtil[64] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 09:59:50"}
[2023-08-10 09:59:58,079] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745775,branchId=5566871554652745776,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 09:59:58,086] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745775 5566871554652745776 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 09:59:58,088] [08678a5e3ed54ae1bcd7bc8bc713bcfe] [INFO] [Feh_Optimize_1] LogUtil[331] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 09:59:58,089] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 10:00:47,103] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[450] - channel [id: 0x5f843e9e, L:/192.168.43.8:61483 - R:/192.168.43.128:8091] read idle.
[2023-08-10 10:00:47,105] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x5f843e9e, L:/192.168.43.8:61483 - R:/192.168.43.128:8091]
[2023-08-10 10:00:47,103] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[450] - channel [id: 0x219c8e46, L:/192.168.43.8:61488 - R:/192.168.43.128:8091] read idle.
[2023-08-10 10:00:47,105] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5f843e9e, L:/192.168.43.8:61483 - R:/192.168.43.128:8091]) will closed
[2023-08-10 10:00:47,105] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x219c8e46, L:/192.168.43.8:61488 - R:/192.168.43.128:8091]
[2023-08-10 10:00:47,105] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x219c8e46, L:/192.168.43.8:61488 - R:/192.168.43.128:8091]) will closed
[2023-08-10 10:00:47,105] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5f843e9e, L:/192.168.43.8:61483 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:00:47,105] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x5f843e9e, L:/192.168.43.8:61483 ! R:/192.168.43.128:8091]
[2023-08-10 10:00:47,105] [logId] [INFO] [http-nio-8010-exec-3] LogUtil[75] - requestId：e41354517bd14101a5118cc201b6902d
[2023-08-10 10:00:47,106] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x219c8e46, L:/192.168.43.8:61488 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:00:47,106] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x5f843e9e, L:/192.168.43.8:61483 ! R:/192.168.43.128:8091]
[2023-08-10 10:00:47,106] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x219c8e46, L:/192.168.43.8:61488 ! R:/192.168.43.128:8091]
[2023-08-10 10:00:47,106] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x5f843e9e, L:/192.168.43.8:61483 ! R:/192.168.43.128:8091]
[2023-08-10 10:00:47,106] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5f843e9e, L:/192.168.43.8:61483 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:00:47,106] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x219c8e46, L:/192.168.43.8:61488 ! R:/192.168.43.128:8091]
[2023-08-10 10:00:48,298] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:00:48,299] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5f843e9e, L:/192.168.43.8:61483 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:00:48,299] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x219c8e46, L:/192.168.43.8:61488 ! R:/192.168.43.128:8091]
[2023-08-10 10:00:48,299] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x219c8e46, L:/192.168.43.8:61488 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:00:48,299] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x5f843e9e, L:/192.168.43.8:61483 ! R:/192.168.43.128:8091]
[2023-08-10 10:00:48,299] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x219c8e46, L:/192.168.43.8:61488 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:00:48,299] [e41354517bd14101a5118cc201b6902d] [INFO] [http-nio-8010-exec-3] LogUtil[85] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 10:00:47"}
[2023-08-10 10:00:48,299] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:00:48,299] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x219c8e46, L:/192.168.43.8:61488 ! R:/192.168.43.128:8091]
[2023-08-10 10:00:48,300] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x219c8e46, L:/192.168.43.8:61488 ! R:/192.168.43.128:8091]
[2023-08-10 10:00:48,300] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x219c8e46, L:/192.168.43.8:61488 ! R:/192.168.43.128:8091]
[2023-08-10 10:00:48,300] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x219c8e46, L:/192.168.43.8:61488 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:00:48,300] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x219c8e46, L:/192.168.43.8:61488 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:00:48,300] [e41354517bd14101a5118cc201b6902d] [INFO] [http-nio-8010-exec-3] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:00:48,602] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:00:48,603] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 10:00:48,604] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:00:48,611] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xe66af6b9, L:/192.168.43.8:61560 - R:/192.168.43.128:8091]
[2023-08-10 10:00:48,611] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0xe66af6b9, L:/192.168.43.8:61560 - R:/192.168.43.128:8091]
[2023-08-10 10:00:58,315] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 16 common frames omitted
[2023-08-10 10:00:58,316] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 10:00:58,316] [e41354517bd14101a5118cc201b6902d] [INFO] [http-nio-8010-exec-3] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:00:58,316] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:01:08,319] [e41354517bd14101a5118cc201b6902d] [ERROR] [http-nio-8010-exec-3] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient.sendSyncRequest(AbstractNettyRemotingClient.java:186)
	at io.seata.tm.DefaultTransactionManager.syncCall(DefaultTransactionManager.java:95)
	at io.seata.tm.DefaultTransactionManager.begin(DefaultTransactionManager.java:53)
	at io.seata.tm.api.DefaultGlobalTransaction.begin(DefaultGlobalTransaction.java:114)
	at io.seata.tm.api.TransactionalTemplate.beginTransaction(TransactionalTemplate.java:250)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:125)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:201)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:171)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$c26768f1.saveOrder(<generated>)
	at com.sakura.order.controller.OrderController.addOrder(OrderController.java:46)
	at com.sakura.order.controller.OrderController$$FastClassBySpringCGLIB$$2a079ef2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.sakura.common.log.LogAspect.around(LogAspect.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.controller.OrderController$$EnhancerBySpringCGLIB$$bf5c1ea3.addOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 81 common frames omitted
[2023-08-10 10:01:08,319] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x5f843e9e, L:/192.168.43.8:61483 ! R:/192.168.43.128:8091]
[2023-08-10 10:01:08,319] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x5f843e9e, L:/192.168.43.8:61483 ! R:/192.168.43.128:8091]
[2023-08-10 10:01:08,319] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5f843e9e, L:/192.168.43.8:61483 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:01:08,319] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5f843e9e, L:/192.168.43.8:61483 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:01:08,320] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:01:08,323] [e41354517bd14101a5118cc201b6902d] [INFO] [http-nio-8010-exec-3] RestExceptionHandler[45] - 异常接口:/order/add
[2023-08-10 10:01:08,324] [e41354517bd14101a5118cc201b6902d] [ERROR] [http-nio-8010-exec-3] RestExceptionHandler[46] - 系统异常:
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient.sendSyncRequest(AbstractNettyRemotingClient.java:186)
	at io.seata.tm.DefaultTransactionManager.syncCall(DefaultTransactionManager.java:95)
	at io.seata.tm.DefaultTransactionManager.begin(DefaultTransactionManager.java:53)
	at io.seata.tm.api.DefaultGlobalTransaction.begin(DefaultGlobalTransaction.java:114)
	at io.seata.tm.api.TransactionalTemplate.beginTransaction(TransactionalTemplate.java:250)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:125)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:201)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:171)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$c26768f1.saveOrder(<generated>)
	at com.sakura.order.controller.OrderController.addOrder(OrderController.java:46)
	at com.sakura.order.controller.OrderController$$FastClassBySpringCGLIB$$2a079ef2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.sakura.common.log.LogAspect.around(LogAspect.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.controller.OrderController$$EnhancerBySpringCGLIB$$bf5c1ea3.addOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 10:01:08,327] [logId] [INFO] [timeoutChecker_1_1] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x551c6c25, L:/192.168.43.8:61582 - R:/192.168.43.128:8091]
[2023-08-10 10:01:08,328] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[81] - register success, cost 7 ms, version:1.6.1,role:TMROLE,channel:[id: 0x551c6c25, L:/192.168.43.8:61582 - R:/192.168.43.128:8091]
[2023-08-10 10:24:02,501] [logId] [WARN] [Thread-5] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 10:24:02,501] [logId] [WARN] [Thread-12] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 10:24:02,502] [logId] [WARN] [Thread-12] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 10:24:02,502] [logId] [WARN] [Thread-5] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 10:24:02,759] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 10:24:02,765] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 10:24:02,796] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 10:24:02,811] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 10:24:02,813] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x551c6c25, L:/192.168.43.8:61582 ! R:/192.168.43.128:8091]
[2023-08-10 10:24:02,813] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x551c6c25, L:/192.168.43.8:61582 ! R:/192.168.43.128:8091]
[2023-08-10 10:24:02,813] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x551c6c25, L:/192.168.43.8:61582 ! R:/192.168.43.128:8091]
[2023-08-10 10:24:02,813] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x551c6c25, L:/192.168.43.8:61582 ! R:/192.168.43.128:8091]
[2023-08-10 10:24:02,813] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x551c6c25, L:/192.168.43.8:61582 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:24:02,813] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x551c6c25, L:/192.168.43.8:61582 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:24:02,815] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xe66af6b9, L:/192.168.43.8:61560 ! R:/192.168.43.128:8091]
[2023-08-10 10:24:02,815] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xe66af6b9, L:/192.168.43.8:61560 ! R:/192.168.43.128:8091]
[2023-08-10 10:24:02,815] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xe66af6b9, L:/192.168.43.8:61560 ! R:/192.168.43.128:8091]
[2023-08-10 10:24:02,815] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xe66af6b9, L:/192.168.43.8:61560 ! R:/192.168.43.128:8091]
[2023-08-10 10:24:02,815] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe66af6b9, L:/192.168.43.8:61560 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:24:02,815] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe66af6b9, L:/192.168.43.8:61560 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:24:13,420] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 10:24:13,431] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 10:24:13,449] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 10:24:14,337] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 10:24:14,401] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:24:14,402] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:24:14,402] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:24:14,426] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:24:14,432] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:24:14,435] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:24:14,436] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/805659195] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:24:14,437] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:24:14,440] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:24:14,441] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:24:14,443] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 10:24:14,501] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 10:24:14,509] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 10:24:14,519] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:24:14,520] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:24:15,082] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 10:24:15,511] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:24:15,603] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:24:15,604] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:24:15,998] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:24:16,646] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:24:18,464] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xad055d9c, L:/192.168.43.8:62996 - R:/192.168.43.128:8091]
[2023-08-10 10:24:18,474] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 139 ms, version:1.6.1,role:TMROLE,channel:[id: 0xad055d9c, L:/192.168.43.8:62996 - R:/192.168.43.128:8091]
[2023-08-10 10:24:18,476] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:24:18,516] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 10:24:18,517] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 10:24:18,531] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:24:18,531] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:24:18,531] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 10:24:19,172] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 10:24:19,179] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:24:19,180] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 10:24:19,180] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 10:24:19,331] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 10:24:19,331] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 5868 ms
[2023-08-10 10:24:19,684] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 10:24:19,984] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 10:24:20,138] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:24:20,138] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 10:24:20,139] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:24:20,149] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xf7a3e184, L:/192.168.43.8:63008 - R:/192.168.43.128:8091]
[2023-08-10 10:24:20,150] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 8 ms, version:1.6.1,role:RMROLE,channel:[id: 0xf7a3e184, L:/192.168.43.8:63008 - R:/192.168.43.128:8091]
[2023-08-10 10:24:21,113] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:24:21,120] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:24:21,198] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:24:21,199] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:24:21,321] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$92529d00] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 10:24:21,750] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 10:24:23,549] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:24:23,564] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 10:24:23,568] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:24:23,568] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:24:23,782] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 10:24:24,262] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 10:24:24,273] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 10:24:24,291] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 10:24:24,430] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 14.71 seconds (JVM running for 15.623)
[2023-08-10 10:24:24,436] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 10:24:24,438] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 10:24:24,439] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 10:24:42,152] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 10:24:42,153] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 10:24:42,166] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 12 ms
[2023-08-10 10:24:49,453] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[65] - requestId：18ecb1848c4e4c21a5dc6da0317007ef
[2023-08-10 10:24:49,516] [18ecb1848c4e4c21a5dc6da0317007ef] [INFO] [http-nio-8010-exec-1] LogUtil[75] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 10:24:49"}
[2023-08-10 10:24:49,538] [18ecb1848c4e4c21a5dc6da0317007ef] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@6b3dbf51
[2023-08-10 10:24:49,546] [18ecb1848c4e4c21a5dc6da0317007ef] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745777]
[2023-08-10 10:24:49,692] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 10:24:49,693] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745777
[2023-08-10 10:24:49,693] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 10:24:49,819] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (125ms)
[2023-08-10 10:24:49,819] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 10:24:49,819] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 10:24:49,819] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 02:24:49 GMT
[2023-08-10 10:24:49,819] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 10:24:49,820] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 10:24:49,820] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 10:24:49,820] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":38,"time":"2023-08-10 02:24:49"}
[2023-08-10 10:24:49,820] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 10:24:49,835] [18ecb1848c4e4c21a5dc6da0317007ef] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=38, time=Thu Aug 10 10:24:49 CST 2023)
[2023-08-10 10:24:49,837] [18ecb1848c4e4c21a5dc6da0317007ef] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 10:24:49,837] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 10:24:49,870] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (32ms)
[2023-08-10 10:24:49,871] [18ecb1848c4e4c21a5dc6da0317007ef] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 10:24:49 CST 2023)
[2023-08-10 10:24:49,906] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 10:24:49,914] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081002244983511842853(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 10:24:50,113] [18ecb1848c4e4c21a5dc6da0317007ef] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 10:24:50,248] [18ecb1848c4e4c21a5dc6da0317007ef] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745777
[2023-08-10 10:24:50,249] [18ecb1848c4e4c21a5dc6da0317007ef] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745777] commit status: Committed
[2023-08-10 10:24:50,252] [18ecb1848c4e4c21a5dc6da0317007ef] [INFO] [http-nio-8010-exec-1] LogUtil[54] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 10:24:50"}
[2023-08-10 10:24:52,509] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745777,branchId=5566871554652745778,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:24:52,511] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745777 5566871554652745778 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:24:52,512] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 10:25:01,933] [18ecb1848c4e4c21a5dc6da0317007ef] [ERROR] [Feh_Optimize_1] LogUtil[321] - 保存系统操作日志失败
java.lang.NullPointerException: null
	at com.sakura.common.tool.IpUtil.getRequestIp(IpUtil.java:46)
	at com.sakura.common.tool.ClientInfoUtil.get(ClientInfoUtil.java:83)
	at com.sakura.common.log.LogUtil.saveSysOperationLog(LogUtil.java:273)
	at com.sakura.common.log.LogUtil.finish(LogUtil.java:230)
	at com.sakura.common.log.LogUtil$$FastClassBySpringCGLIB$$712eb7d3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115)
	at com.sakura.common.thread.ThreadMdcUtil.lambda$wrap$0(ThreadMdcUtil.java:30)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 10:25:05,254] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[450] - channel [id: 0xad055d9c, L:/192.168.43.8:62996 - R:/192.168.43.128:8091] read idle.
[2023-08-10 10:25:05,255] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xad055d9c, L:/192.168.43.8:62996 - R:/192.168.43.128:8091]
[2023-08-10 10:25:05,255] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xad055d9c, L:/192.168.43.8:62996 - R:/192.168.43.128:8091]) will closed
[2023-08-10 10:25:05,258] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xad055d9c, L:/192.168.43.8:62996 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:25:05,259] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xad055d9c, L:/192.168.43.8:62996 ! R:/192.168.43.128:8091]
[2023-08-10 10:25:05,259] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xad055d9c, L:/192.168.43.8:62996 ! R:/192.168.43.128:8091]
[2023-08-10 10:25:05,259] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xad055d9c, L:/192.168.43.8:62996 ! R:/192.168.43.128:8091]
[2023-08-10 10:25:05,259] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xad055d9c, L:/192.168.43.8:62996 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:25:05,259] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xad055d9c, L:/192.168.43.8:62996 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:25:05,260] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xad055d9c, L:/192.168.43.8:62996 ! R:/192.168.43.128:8091]
[2023-08-10 10:25:05,260] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xad055d9c, L:/192.168.43.8:62996 ! R:/192.168.43.128:8091]
[2023-08-10 10:25:05,260] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xad055d9c, L:/192.168.43.8:62996 ! R:/192.168.43.128:8091]
[2023-08-10 10:25:05,260] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xad055d9c, L:/192.168.43.8:62996 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:25:05,260] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xad055d9c, L:/192.168.43.8:62996 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:25:15,485] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:25:15,485] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:25:15,490] [logId] [INFO] [timeoutChecker_1_1] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x9f86698b, L:/192.168.43.8:63070 - R:/192.168.43.128:8091]
[2023-08-10 10:25:15,491] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:TMROLE,channel:[id: 0x9f86698b, L:/192.168.43.8:63070 - R:/192.168.43.128:8091]
[2023-08-10 10:26:46,946] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 10:26:46,946] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 10:26:46,947] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 10:26:46,947] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 10:26:47,186] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 10:26:47,193] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 10:26:47,206] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 10:26:47,210] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 10:26:47,211] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x9f86698b, L:/192.168.43.8:63070 ! R:/192.168.43.128:8091]
[2023-08-10 10:26:47,212] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x9f86698b, L:/192.168.43.8:63070 ! R:/192.168.43.128:8091]
[2023-08-10 10:26:47,212] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x9f86698b, L:/192.168.43.8:63070 ! R:/192.168.43.128:8091]
[2023-08-10 10:26:47,212] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x9f86698b, L:/192.168.43.8:63070 ! R:/192.168.43.128:8091]
[2023-08-10 10:26:47,212] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9f86698b, L:/192.168.43.8:63070 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:26:47,213] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9f86698b, L:/192.168.43.8:63070 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:26:47,213] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xf7a3e184, L:/192.168.43.8:63008 ! R:/192.168.43.128:8091]
[2023-08-10 10:26:47,214] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xf7a3e184, L:/192.168.43.8:63008 ! R:/192.168.43.128:8091]
[2023-08-10 10:26:47,214] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xf7a3e184, L:/192.168.43.8:63008 ! R:/192.168.43.128:8091]
[2023-08-10 10:26:47,216] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xf7a3e184, L:/192.168.43.8:63008 ! R:/192.168.43.128:8091]
[2023-08-10 10:26:47,217] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf7a3e184, L:/192.168.43.8:63008 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:26:47,217] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf7a3e184, L:/192.168.43.8:63008 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:26:57,323] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 10:26:57,332] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 10:26:57,349] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 10:26:58,083] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 10:26:58,138] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:26:58,138] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:26:58,138] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:26:58,159] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:26:58,164] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:26:58,167] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:26:58,168] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/1655993826] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:26:58,169] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:26:58,171] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:26:58,172] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:26:58,173] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 10:26:58,218] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 10:26:58,225] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 10:26:58,233] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:26:58,233] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:26:58,616] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 10:26:58,741] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:26:58,767] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:26:58,767] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:26:58,978] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:26:59,329] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:26:59,913] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xeda76403, L:/192.168.43.8:63219 - R:/192.168.43.128:8091]
[2023-08-10 10:26:59,918] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 47 ms, version:1.6.1,role:TMROLE,channel:[id: 0xeda76403, L:/192.168.43.8:63219 - R:/192.168.43.128:8091]
[2023-08-10 10:26:59,919] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:26:59,946] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 10:26:59,947] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 10:26:59,951] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:26:59,951] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:26:59,951] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 10:27:00,392] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 10:27:00,400] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:27:00,401] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 10:27:00,401] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 10:27:00,516] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 10:27:00,516] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 3155 ms
[2023-08-10 10:27:00,665] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 10:27:00,986] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 10:27:01,097] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:27:01,098] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 10:27:01,099] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:27:01,105] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xf64434a3, L:/192.168.43.8:63228 - R:/192.168.43.128:8091]
[2023-08-10 10:27:01,106] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0xf64434a3, L:/192.168.43.8:63228 - R:/192.168.43.128:8091]
[2023-08-10 10:27:01,781] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:27:01,786] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:27:01,834] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:27:01,834] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:27:01,940] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$60d33b5e] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 10:27:02,261] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 10:27:03,607] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:27:03,616] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 10:27:03,619] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:27:03,619] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:27:03,818] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 10:27:04,159] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 10:27:04,171] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 10:27:04,185] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 10:27:04,330] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 10.346 seconds (JVM running for 11.165)
[2023-08-10 10:27:04,334] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 10:27:04,336] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 10:27:04,337] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 10:27:41,468] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 10:27:41,470] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 10:27:41,480] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 9 ms
[2023-08-10 10:27:41,917] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[75] - requestId：1a1c3d6f84be4164b67d0e56fca655b9
[2023-08-10 10:27:41,984] [1a1c3d6f84be4164b67d0e56fca655b9] [INFO] [http-nio-8010-exec-1] LogUtil[85] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 10:27:41"}
[2023-08-10 10:27:42,006] [1a1c3d6f84be4164b67d0e56fca655b9] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@1a3fdbd
[2023-08-10 10:27:42,013] [1a1c3d6f84be4164b67d0e56fca655b9] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745779]
[2023-08-10 10:27:42,130] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 10:27:42,131] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745779
[2023-08-10 10:27:42,131] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 10:27:42,386] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (254ms)
[2023-08-10 10:27:42,386] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 10:27:42,387] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 10:27:42,387] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 02:27:42 GMT
[2023-08-10 10:27:42,387] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 10:27:42,387] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 10:27:42,387] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 10:27:42,388] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":37,"time":"2023-08-10 02:27:42"}
[2023-08-10 10:27:42,389] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 10:27:42,412] [1a1c3d6f84be4164b67d0e56fca655b9] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=37, time=Thu Aug 10 10:27:42 CST 2023)
[2023-08-10 10:27:42,415] [1a1c3d6f84be4164b67d0e56fca655b9] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 10:27:42,415] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 10:27:42,532] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (116ms)
[2023-08-10 10:27:42,537] [1a1c3d6f84be4164b67d0e56fca655b9] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 10:27:42 CST 2023)
[2023-08-10 10:27:42,644] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 10:27:42,666] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081002274241339823396(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 10:27:43,073] [1a1c3d6f84be4164b67d0e56fca655b9] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 10:27:43,483] [1a1c3d6f84be4164b67d0e56fca655b9] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745779
[2023-08-10 10:27:43,484] [1a1c3d6f84be4164b67d0e56fca655b9] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745779] commit status: Committed
[2023-08-10 10:27:43,494] [1a1c3d6f84be4164b67d0e56fca655b9] [INFO] [http-nio-8010-exec-1] LogUtil[64] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 10:27:43"}
[2023-08-10 10:27:43,649] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745779,branchId=5566871554652745780,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:27:43,674] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745779 5566871554652745780 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:27:43,684] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 10:27:53,528] [1a1c3d6f84be4164b67d0e56fca655b9] [INFO] [Feh_Optimize_1] LogUtil[260] - ++++++++++++++++++++++++++++++++++++++++++
[2023-08-10 10:27:53,535] [1a1c3d6f84be4164b67d0e56fca655b9] [INFO] [Feh_Optimize_1] LogUtil[334] - 日志信息：{"code":200,"message":"操作成功","success":true,"userId":10000}
[2023-08-10 10:31:34,550] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 10:31:34,550] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 10:31:34,551] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 10:31:34,551] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 10:31:34,786] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 10:31:34,792] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 10:31:34,803] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 10:31:34,806] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 10:31:34,807] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xeda76403, L:/192.168.43.8:63219 ! R:/192.168.43.128:8091]
[2023-08-10 10:31:34,807] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xeda76403, L:/192.168.43.8:63219 ! R:/192.168.43.128:8091]
[2023-08-10 10:31:34,808] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xf64434a3, L:/192.168.43.8:63228 ! R:/192.168.43.128:8091]
[2023-08-10 10:31:34,808] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xeda76403, L:/192.168.43.8:63219 ! R:/192.168.43.128:8091]
[2023-08-10 10:31:34,808] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xf64434a3, L:/192.168.43.8:63228 ! R:/192.168.43.128:8091]
[2023-08-10 10:31:34,808] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xeda76403, L:/192.168.43.8:63219 ! R:/192.168.43.128:8091]
[2023-08-10 10:31:34,808] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xf64434a3, L:/192.168.43.8:63228 ! R:/192.168.43.128:8091]
[2023-08-10 10:31:34,808] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xf64434a3, L:/192.168.43.8:63228 ! R:/192.168.43.128:8091]
[2023-08-10 10:31:34,808] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xeda76403, L:/192.168.43.8:63219 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:31:34,808] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf64434a3, L:/192.168.43.8:63228 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:31:34,808] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xeda76403, L:/192.168.43.8:63219 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:31:34,808] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf64434a3, L:/192.168.43.8:63228 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:31:45,882] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 10:31:45,888] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 10:31:45,904] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 10:31:46,683] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 10:31:46,734] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:31:46,735] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:31:46,735] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:31:46,756] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:31:46,759] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:31:46,760] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:31:46,761] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/408551386] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:31:46,761] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:31:46,763] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:31:46,764] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:31:46,766] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 10:31:46,815] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 10:31:46,821] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 10:31:46,827] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:31:46,828] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:31:47,247] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 10:31:47,364] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:31:47,388] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:31:47,389] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:31:47,605] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:31:47,824] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:31:48,547] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xa42c95d2, L:/192.168.43.8:63523 - R:/192.168.43.128:8091]
[2023-08-10 10:31:48,551] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 52 ms, version:1.6.1,role:TMROLE,channel:[id: 0xa42c95d2, L:/192.168.43.8:63523 - R:/192.168.43.128:8091]
[2023-08-10 10:31:48,552] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:31:48,569] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 10:31:48,570] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 10:31:48,578] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:31:48,579] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:31:48,579] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 10:31:48,903] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 10:31:48,913] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:31:48,914] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 10:31:48,914] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 10:31:49,036] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 10:31:49,036] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 3119 ms
[2023-08-10 10:31:49,194] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 10:31:49,503] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 10:31:49,629] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:31:49,631] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 10:31:49,633] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:31:49,655] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xa3bee815, L:/192.168.43.8:63533 - R:/192.168.43.128:8091]
[2023-08-10 10:31:49,656] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 10 ms, version:1.6.1,role:RMROLE,channel:[id: 0xa3bee815, L:/192.168.43.8:63533 - R:/192.168.43.128:8091]
[2023-08-10 10:31:50,629] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:31:50,634] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:31:50,680] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:31:50,680] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:31:50,785] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$3a0fe7e3] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 10:31:51,114] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 10:31:52,735] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:31:52,746] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 10:31:52,750] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:31:52,750] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:31:52,953] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 10:31:53,320] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 10:31:53,329] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 10:31:53,348] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 10:31:53,490] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 10.956 seconds (JVM running for 11.776)
[2023-08-10 10:31:53,494] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 10:31:53,515] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 10:31:53,516] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 10:32:25,053] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 10:32:25,054] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 10:32:25,061] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 6 ms
[2023-08-10 10:32:25,451] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[62] - requestId：8231a8fd511a4d97a3ba9d3eeacac461
[2023-08-10 10:32:25,508] [8231a8fd511a4d97a3ba9d3eeacac461] [INFO] [http-nio-8010-exec-1] LogUtil[71] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 10:32:25"}
[2023-08-10 10:32:25,524] [8231a8fd511a4d97a3ba9d3eeacac461] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@20b8af9f
[2023-08-10 10:32:25,531] [8231a8fd511a4d97a3ba9d3eeacac461] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745781]
[2023-08-10 10:32:25,648] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 10:32:25,649] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745781
[2023-08-10 10:32:25,649] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 10:32:26,000] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (351ms)
[2023-08-10 10:32:26,001] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 10:32:26,001] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 10:32:26,001] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 02:32:25 GMT
[2023-08-10 10:32:26,002] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 10:32:26,002] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 10:32:26,002] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 10:32:26,003] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":36,"time":"2023-08-10 02:32:25"}
[2023-08-10 10:32:26,003] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 10:32:26,026] [8231a8fd511a4d97a3ba9d3eeacac461] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=36, time=Thu Aug 10 10:32:25 CST 2023)
[2023-08-10 10:32:26,030] [8231a8fd511a4d97a3ba9d3eeacac461] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 10:32:26,031] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 10:32:26,227] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (195ms)
[2023-08-10 10:32:26,231] [8231a8fd511a4d97a3ba9d3eeacac461] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 10:32:26 CST 2023)
[2023-08-10 10:32:26,408] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 10:32:26,432] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081002322602755779841(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 10:32:26,875] [8231a8fd511a4d97a3ba9d3eeacac461] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 10:32:27,047] [8231a8fd511a4d97a3ba9d3eeacac461] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745781
[2023-08-10 10:32:27,049] [8231a8fd511a4d97a3ba9d3eeacac461] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745781] commit status: Committed
[2023-08-10 10:32:27,052] [8231a8fd511a4d97a3ba9d3eeacac461] [INFO] [http-nio-8010-exec-1] LogUtil[51] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 10:32:27"}
[2023-08-10 10:32:27,612] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745781,branchId=5566871554652745782,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:32:27,614] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745781 5566871554652745782 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:32:27,616] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 10:32:37,066] [8231a8fd511a4d97a3ba9d3eeacac461] [INFO] [Feh_Optimize_1] LogUtil[242] - ++++++++++++++++++++++++++++++++++++++++++
[2023-08-10 10:32:37,082] [8231a8fd511a4d97a3ba9d3eeacac461] [ERROR] [Feh_Optimize_1] LogUtil[320] - 保存系统操作日志失败
java.lang.NullPointerException: null
	at com.sakura.common.tool.IpUtil.getRequestIp(IpUtil.java:46)
	at com.sakura.common.tool.ClientInfoUtil.get(ClientInfoUtil.java:83)
	at com.sakura.common.log.LogUtil.saveSysOperationLog(LogUtil.java:272)
	at com.sakura.common.log.LogUtil.finish(LogUtil.java:226)
	at com.sakura.common.log.LogUtil$$FastClassBySpringCGLIB$$712eb7d3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115)
	at com.sakura.common.thread.ThreadMdcUtil.lambda$wrap$0(ThreadMdcUtil.java:30)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 10:33:44,287] [logId] [WARN] [Thread-10] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 10:33:44,287] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 10:33:44,287] [logId] [WARN] [Thread-10] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 10:33:44,288] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 10:33:44,551] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 10:33:44,556] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 10:33:44,573] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 10:33:44,578] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 10:33:53,858] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 10:33:53,863] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 10:33:53,885] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 10:33:54,633] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 10:33:54,688] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:33:54,688] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:33:54,689] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:33:54,707] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:33:54,713] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:33:54,715] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:33:54,715] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/1655993826] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:33:54,716] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:33:54,718] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:33:54,719] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:33:54,720] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 10:33:54,764] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 10:33:54,769] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 10:33:54,778] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:33:54,779] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:33:55,180] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 10:33:55,301] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:33:55,325] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:33:55,325] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:33:55,538] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:33:55,759] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:33:56,353] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xf10fb263, L:/192.168.43.8:63716 - R:/192.168.43.128:8091]
[2023-08-10 10:33:56,358] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 46 ms, version:1.6.1,role:TMROLE,channel:[id: 0xf10fb263, L:/192.168.43.8:63716 - R:/192.168.43.128:8091]
[2023-08-10 10:33:56,358] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:33:56,382] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 10:33:56,382] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 10:33:56,387] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:33:56,387] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:33:56,387] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 10:33:56,713] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 10:33:56,722] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:33:56,722] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 10:33:56,722] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 10:33:56,836] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 10:33:56,837] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 2943 ms
[2023-08-10 10:33:56,986] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 10:33:57,311] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 10:33:57,424] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:33:57,425] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 10:33:57,425] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:33:57,431] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x50be6a38, L:/192.168.43.8:63725 - R:/192.168.43.128:8091]
[2023-08-10 10:33:57,432] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0x50be6a38, L:/192.168.43.8:63725 - R:/192.168.43.128:8091]
[2023-08-10 10:33:58,359] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:33:58,365] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:33:58,409] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:33:58,409] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:33:58,514] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$60d33b5e] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 10:33:58,834] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 10:34:00,935] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:34:00,947] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 10:34:00,950] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:34:00,950] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:34:01,150] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 10:34:01,598] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 10:34:01,609] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 10:34:01,626] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 10:34:01,745] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 11.064 seconds (JVM running for 11.863)
[2023-08-10 10:34:01,750] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 10:34:01,752] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 10:34:01,752] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 10:34:06,862] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 10:34:06,863] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 10:34:06,866] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 3 ms
[2023-08-10 10:34:07,284] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[62] - requestId：5fa18878ef2d49738b45e55af570451d
[2023-08-10 10:34:07,379] [5fa18878ef2d49738b45e55af570451d] [INFO] [http-nio-8010-exec-1] LogUtil[71] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 10:34:07"}
[2023-08-10 10:34:07,412] [5fa18878ef2d49738b45e55af570451d] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@1bba1907
[2023-08-10 10:34:07,426] [5fa18878ef2d49738b45e55af570451d] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745783]
[2023-08-10 10:34:07,639] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 10:34:07,640] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745783
[2023-08-10 10:34:07,641] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 10:34:08,367] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (725ms)
[2023-08-10 10:34:08,368] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 10:34:08,369] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 10:34:08,370] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 02:34:08 GMT
[2023-08-10 10:34:08,370] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 10:34:08,370] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 10:34:08,370] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 10:34:08,371] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":35,"time":"2023-08-10 02:34:08"}
[2023-08-10 10:34:08,371] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 10:34:08,398] [5fa18878ef2d49738b45e55af570451d] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=35, time=Thu Aug 10 10:34:08 CST 2023)
[2023-08-10 10:34:08,402] [5fa18878ef2d49738b45e55af570451d] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 10:34:08,404] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 10:34:08,529] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (124ms)
[2023-08-10 10:34:08,537] [5fa18878ef2d49738b45e55af570451d] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 10:34:08 CST 2023)
[2023-08-10 10:34:08,641] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 10:34:08,692] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081002340839867834329(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 10:34:09,246] [5fa18878ef2d49738b45e55af570451d] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 10:34:09,423] [5fa18878ef2d49738b45e55af570451d] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745783
[2023-08-10 10:34:09,425] [5fa18878ef2d49738b45e55af570451d] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745783] commit status: Committed
[2023-08-10 10:34:09,428] [5fa18878ef2d49738b45e55af570451d] [INFO] [http-nio-8010-exec-1] LogUtil[51] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 10:34:09"}
[2023-08-10 10:34:09,610] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745783,branchId=5566871554652745784,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:34:09,612] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745783 5566871554652745784 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:34:09,613] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 10:34:19,450] [5fa18878ef2d49738b45e55af570451d] [INFO] [Feh_Optimize_1] LogUtil[240] - ++++++++++++++++++++++++++++++++++++++++++
[2023-08-10 10:34:19,460] [5fa18878ef2d49738b45e55af570451d] [ERROR] [Feh_Optimize_1] LogUtil[318] - 保存系统操作日志失败
java.lang.NullPointerException: null
	at com.sakura.common.tool.IpUtil.getRequestIp(IpUtil.java:46)
	at com.sakura.common.tool.ClientInfoUtil.get(ClientInfoUtil.java:83)
	at com.sakura.common.log.LogUtil.saveSysOperationLog(LogUtil.java:270)
	at com.sakura.common.log.LogUtil.finish(LogUtil.java:226)
	at com.sakura.common.log.LogUtil$$FastClassBySpringCGLIB$$712eb7d3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115)
	at com.sakura.common.thread.ThreadMdcUtil.lambda$wrap$0(ThreadMdcUtil.java:30)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 10:38:28,533] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 10:38:28,533] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 10:38:28,533] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 10:38:28,534] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 10:38:28,887] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 10:38:28,906] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 10:38:28,951] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 10:38:28,966] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 10:38:28,992] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xf10fb263, L:/192.168.43.8:63716 ! R:/192.168.43.128:8091]
[2023-08-10 10:38:28,994] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xf10fb263, L:/192.168.43.8:63716 ! R:/192.168.43.128:8091]
[2023-08-10 10:38:28,995] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xf10fb263, L:/192.168.43.8:63716 ! R:/192.168.43.128:8091]
[2023-08-10 10:38:29,010] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xf10fb263, L:/192.168.43.8:63716 ! R:/192.168.43.128:8091]
[2023-08-10 10:38:29,010] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf10fb263, L:/192.168.43.8:63716 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:38:29,011] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf10fb263, L:/192.168.43.8:63716 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:38:29,078] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x50be6a38, L:/192.168.43.8:63725 ! R:/192.168.43.128:8091]
[2023-08-10 10:38:29,079] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x50be6a38, L:/192.168.43.8:63725 ! R:/192.168.43.128:8091]
[2023-08-10 10:38:29,080] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x50be6a38, L:/192.168.43.8:63725 ! R:/192.168.43.128:8091]
[2023-08-10 10:38:29,083] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x50be6a38, L:/192.168.43.8:63725 ! R:/192.168.43.128:8091]
[2023-08-10 10:38:29,088] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x50be6a38, L:/192.168.43.8:63725 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:38:29,095] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x50be6a38, L:/192.168.43.8:63725 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:38:40,772] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 10:38:40,777] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 10:38:40,798] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 10:38:41,872] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=0b52230f-148d-388b-b6e3-546de0d43736
[2023-08-10 10:38:41,914] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:38:41,915] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:38:41,915] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:38:41,937] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:38:41,940] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:38:41,941] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:38:41,942] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$444/1582906120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:38:41,943] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:38:41,945] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:38:41,946] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:38:41,947] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 10:38:41,999] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 10:38:42,005] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 10:38:42,012] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:38:42,012] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:38:42,408] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 10:38:42,538] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:38:42,565] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:38:42,566] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:38:42,779] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:38:43,050] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:38:43,844] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x7f21170f, L:/192.168.43.8:64034 - R:/192.168.43.128:8091]
[2023-08-10 10:38:43,849] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 51 ms, version:1.6.1,role:TMROLE,channel:[id: 0x7f21170f, L:/192.168.43.8:64034 - R:/192.168.43.128:8091]
[2023-08-10 10:38:43,849] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:38:43,875] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 10:38:43,876] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 10:38:43,881] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:38:43,881] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:38:43,881] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 10:38:44,253] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 10:38:44,264] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:38:44,264] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 10:38:44,264] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 10:38:44,379] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 10:38:44,379] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 3570 ms
[2023-08-10 10:38:44,516] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 10:38:44,844] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 10:38:44,959] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:38:44,960] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 10:38:44,961] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:38:44,972] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x7867bc23, L:/192.168.43.8:64044 - R:/192.168.43.128:8091]
[2023-08-10 10:38:44,973] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 6 ms, version:1.6.1,role:RMROLE,channel:[id: 0x7867bc23, L:/192.168.43.8:64044 - R:/192.168.43.128:8091]
[2023-08-10 10:38:45,671] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:38:45,676] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:38:45,718] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:38:45,718] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:38:45,828] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$66148376] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 10:38:46,145] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 10:38:47,734] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:38:47,745] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 10:38:47,749] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:38:47,749] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:38:47,951] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 10:38:48,292] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 10:38:48,301] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 10:38:48,319] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 10:38:48,434] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 11.018 seconds (JVM running for 12.004)
[2023-08-10 10:38:48,441] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 10:38:48,446] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 10:38:48,446] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 10:38:58,333] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 10:38:58,333] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 10:38:58,345] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 11 ms
[2023-08-10 10:38:58,958] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[62] - requestId：e4ccb95dc5594a86b63e0f9eeea654ab
[2023-08-10 10:38:59,233] [e4ccb95dc5594a86b63e0f9eeea654ab] [INFO] [http-nio-8010-exec-1] LogUtil[71] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 10:38:58"}
[2023-08-10 10:38:59,303] [e4ccb95dc5594a86b63e0f9eeea654ab] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@40eb5ada
[2023-08-10 10:38:59,329] [e4ccb95dc5594a86b63e0f9eeea654ab] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745785]
[2023-08-10 10:38:59,618] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 10:38:59,621] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745785
[2023-08-10 10:38:59,621] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 10:38:59,749] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (128ms)
[2023-08-10 10:38:59,750] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 10:38:59,750] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 10:38:59,750] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 02:38:59 GMT
[2023-08-10 10:38:59,750] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 10:38:59,750] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 10:38:59,750] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 10:38:59,751] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":34,"time":"2023-08-10 02:38:59"}
[2023-08-10 10:38:59,751] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 10:38:59,770] [e4ccb95dc5594a86b63e0f9eeea654ab] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=34, time=Thu Aug 10 10:38:59 CST 2023)
[2023-08-10 10:38:59,773] [e4ccb95dc5594a86b63e0f9eeea654ab] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 10:38:59,774] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 10:38:59,804] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (30ms)
[2023-08-10 10:38:59,805] [e4ccb95dc5594a86b63e0f9eeea654ab] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 10:38:59 CST 2023)
[2023-08-10 10:38:59,837] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 10:38:59,883] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081002385977191519314(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 10:39:00,749] [e4ccb95dc5594a86b63e0f9eeea654ab] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 10:39:01,088] [e4ccb95dc5594a86b63e0f9eeea654ab] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745785
[2023-08-10 10:39:01,091] [e4ccb95dc5594a86b63e0f9eeea654ab] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745785] commit status: Committed
[2023-08-10 10:39:01,101] [e4ccb95dc5594a86b63e0f9eeea654ab] [INFO] [http-nio-8010-exec-1] LogUtil[51] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 10:39:01"}
[2023-08-10 10:39:01,127] [e4ccb95dc5594a86b63e0f9eeea654ab] [INFO] [http-nio-8010-exec-1] LogUtil[311] - 日志信息：{"browserName":"Unknown","className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","engineName":"Unknown","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","mobile":false,"module":"order","name":"添加订单表","osName":"Unknown","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","platformName":"Unknown","remark":"","requestBody":true,"requestId":"e4ccb95dc5594a86b63e0f9eeea654ab","requestMethod":"POST","success":true,"type":1,"userId":10000}
[2023-08-10 10:39:01,612] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745785,branchId=5566871554652745786,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:39:01,615] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745785 5566871554652745786 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:39:01,616] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 10:40:27,343] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 10:40:27,343] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 10:40:27,343] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 10:40:27,344] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 10:40:27,607] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 10:40:27,613] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 10:40:27,668] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 10:40:27,673] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 10:40:27,674] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x7f21170f, L:/192.168.43.8:64034 ! R:/192.168.43.128:8091]
[2023-08-10 10:40:27,675] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x7867bc23, L:/192.168.43.8:64044 ! R:/192.168.43.128:8091]
[2023-08-10 10:40:27,675] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x7f21170f, L:/192.168.43.8:64034 ! R:/192.168.43.128:8091]
[2023-08-10 10:40:27,675] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x7867bc23, L:/192.168.43.8:64044 ! R:/192.168.43.128:8091]
[2023-08-10 10:40:27,675] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x7f21170f, L:/192.168.43.8:64034 ! R:/192.168.43.128:8091]
[2023-08-10 10:40:27,676] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x7f21170f, L:/192.168.43.8:64034 ! R:/192.168.43.128:8091]
[2023-08-10 10:40:27,675] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x7867bc23, L:/192.168.43.8:64044 ! R:/192.168.43.128:8091]
[2023-08-10 10:40:27,676] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x7867bc23, L:/192.168.43.8:64044 ! R:/192.168.43.128:8091]
[2023-08-10 10:40:27,676] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7f21170f, L:/192.168.43.8:64034 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:40:27,676] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7867bc23, L:/192.168.43.8:64044 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:40:27,676] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7f21170f, L:/192.168.43.8:64034 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:40:27,676] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7867bc23, L:/192.168.43.8:64044 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:40:37,631] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 10:40:37,640] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 10:40:37,660] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 10:40:38,503] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 10:40:38,565] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:40:38,565] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:40:38,566] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:40:38,591] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:40:38,593] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:40:38,595] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:40:38,596] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/407958234] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:40:38,596] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:40:38,598] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:40:38,600] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:40:38,601] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 10:40:38,661] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 10:40:38,666] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 10:40:38,679] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:40:38,679] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:40:39,115] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 10:40:39,253] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:40:39,275] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:40:39,275] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:40:39,499] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:40:39,745] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:40:40,311] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xcdb81b62, L:/192.168.43.8:64195 - R:/192.168.43.128:8091]
[2023-08-10 10:40:40,317] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 52 ms, version:1.6.1,role:TMROLE,channel:[id: 0xcdb81b62, L:/192.168.43.8:64195 - R:/192.168.43.128:8091]
[2023-08-10 10:40:40,317] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:40:40,336] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 10:40:40,337] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 10:40:40,344] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:40:40,344] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:40:40,344] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 10:40:40,747] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 10:40:40,754] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:40:40,754] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 10:40:40,754] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 10:40:40,881] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 10:40:40,881] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 3207 ms
[2023-08-10 10:40:41,166] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 10:40:41,386] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 10:40:41,498] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:40:41,498] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 10:40:41,499] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:40:41,508] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xf12bde2f, L:/192.168.43.8:64205 - R:/192.168.43.128:8091]
[2023-08-10 10:40:41,508] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 6 ms, version:1.6.1,role:RMROLE,channel:[id: 0xf12bde2f, L:/192.168.43.8:64205 - R:/192.168.43.128:8091]
[2023-08-10 10:40:42,246] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:40:42,252] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:40:42,297] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:40:42,297] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:40:42,412] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$5e1e6a05] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 10:40:42,764] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 10:40:44,248] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:40:44,257] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 10:40:44,259] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:40:44,259] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:40:44,455] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 10:40:44,833] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 10:40:44,846] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 10:40:44,860] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 10:40:44,983] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 10.737 seconds (JVM running for 11.726)
[2023-08-10 10:40:44,986] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 10:40:44,989] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 10:40:44,989] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 10:41:32,140] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 10:41:32,142] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 10:41:32,148] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 6 ms
[2023-08-10 10:41:32,632] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[62] - requestId：f0d0db632d3c452e8817bb5a17a113f4
[2023-08-10 10:41:33,043] [f0d0db632d3c452e8817bb5a17a113f4] [INFO] [http-nio-8010-exec-1] LogUtil[71] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 10:41:32"}
[2023-08-10 10:41:33,166] [f0d0db632d3c452e8817bb5a17a113f4] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@2f6fd181
[2023-08-10 10:41:33,184] [f0d0db632d3c452e8817bb5a17a113f4] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745787]
[2023-08-10 10:41:33,395] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 10:41:33,396] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745787
[2023-08-10 10:41:33,396] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 10:41:33,611] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (214ms)
[2023-08-10 10:41:33,612] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 10:41:33,613] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 10:41:33,613] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 02:41:33 GMT
[2023-08-10 10:41:33,614] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 10:41:33,614] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 10:41:33,614] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 10:41:33,615] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":33,"time":"2023-08-10 02:41:33"}
[2023-08-10 10:41:33,615] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 10:41:33,642] [f0d0db632d3c452e8817bb5a17a113f4] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=33, time=Thu Aug 10 10:41:33 CST 2023)
[2023-08-10 10:41:33,652] [f0d0db632d3c452e8817bb5a17a113f4] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 10:41:33,653] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 10:41:33,722] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (67ms)
[2023-08-10 10:41:33,724] [f0d0db632d3c452e8817bb5a17a113f4] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 10:41:33 CST 2023)
[2023-08-10 10:41:33,798] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 10:41:33,824] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081002413364473381327(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 10:41:34,134] [f0d0db632d3c452e8817bb5a17a113f4] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 10:41:34,310] [f0d0db632d3c452e8817bb5a17a113f4] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745787
[2023-08-10 10:41:34,311] [f0d0db632d3c452e8817bb5a17a113f4] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745787] commit status: Committed
[2023-08-10 10:41:34,317] [f0d0db632d3c452e8817bb5a17a113f4] [INFO] [http-nio-8010-exec-1] LogUtil[51] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 10:41:34"}
[2023-08-10 10:41:37,469] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745787,branchId=5566871554652745788,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:41:39,448] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745787 5566871554652745788 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:41:39,450] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 10:41:49,461] [f0d0db632d3c452e8817bb5a17a113f4] [INFO] [Feh_Optimize_1] LogUtil[242] - ++++++++++++++++++++++++++++++++++++++++++
[2023-08-10 10:42:02,122] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[450] - channel [id: 0xf12bde2f, L:/192.168.43.8:64205 - R:/192.168.43.128:8091] read idle.
[2023-08-10 10:42:02,122] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[450] - channel [id: 0xcdb81b62, L:/192.168.43.8:64195 - R:/192.168.43.128:8091] read idle.
[2023-08-10 10:42:02,123] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xf12bde2f, L:/192.168.43.8:64205 - R:/192.168.43.128:8091]
[2023-08-10 10:42:02,123] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xcdb81b62, L:/192.168.43.8:64195 - R:/192.168.43.128:8091]
[2023-08-10 10:42:02,124] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xcdb81b62, L:/192.168.43.8:64195 - R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:02,124] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf12bde2f, L:/192.168.43.8:64205 - R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:02,126] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xcdb81b62, L:/192.168.43.8:64195 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:02,126] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf12bde2f, L:/192.168.43.8:64205 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:02,126] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xf12bde2f, L:/192.168.43.8:64205 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:02,126] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xcdb81b62, L:/192.168.43.8:64195 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:02,126] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xf12bde2f, L:/192.168.43.8:64205 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:02,126] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xf12bde2f, L:/192.168.43.8:64205 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:02,126] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xcdb81b62, L:/192.168.43.8:64195 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xcdb81b62, L:/192.168.43.8:64195 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf12bde2f, L:/192.168.43.8:64205 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xcdb81b62, L:/192.168.43.8:64195 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf12bde2f, L:/192.168.43.8:64205 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xcdb81b62, L:/192.168.43.8:64195 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xcdb81b62, L:/192.168.43.8:64195 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xf12bde2f, L:/192.168.43.8:64205 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xcdb81b62, L:/192.168.43.8:64195 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xf12bde2f, L:/192.168.43.8:64205 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xcdb81b62, L:/192.168.43.8:64195 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xf12bde2f, L:/192.168.43.8:64205 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xcdb81b62, L:/192.168.43.8:64195 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf12bde2f, L:/192.168.43.8:64205 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xcdb81b62, L:/192.168.43.8:64195 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:02,127] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf12bde2f, L:/192.168.43.8:64205 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:02,138] [f0d0db632d3c452e8817bb5a17a113f4] [ERROR] [Feh_Optimize_1] LogUtil[320] - 保存系统操作日志失败
java.lang.NullPointerException: null
	at com.sakura.common.tool.IpUtil.getRequestIp(IpUtil.java:46)
	at com.sakura.common.tool.ClientInfoUtil.get(ClientInfoUtil.java:83)
	at com.sakura.common.log.LogUtil.saveSysOperationLog(LogUtil.java:272)
	at com.sakura.common.log.LogUtil.finish(LogUtil.java:226)
	at com.sakura.common.log.LogUtil$$FastClassBySpringCGLIB$$712eb7d3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115)
	at com.sakura.common.thread.ThreadMdcUtil.lambda$wrap$0(ThreadMdcUtil.java:30)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 10:42:09,256] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:42:09,257] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:42:09,304] [logId] [INFO] [timeoutChecker_1_1] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x10f4dfb1, L:/192.168.43.8:64282 - R:/192.168.43.128:8091]
[2023-08-10 10:42:09,305] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[81] - register success, cost 41 ms, version:1.6.1,role:TMROLE,channel:[id: 0x10f4dfb1, L:/192.168.43.8:64282 - R:/192.168.43.128:8091]
[2023-08-10 10:42:10,353] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:42:10,354] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 10:42:10,354] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:42:10,360] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xa3ed19d7, L:/192.168.43.8:64287 - R:/192.168.43.128:8091]
[2023-08-10 10:42:10,360] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[81] - register success, cost 3 ms, version:1.6.1,role:RMROLE,channel:[id: 0xa3ed19d7, L:/192.168.43.8:64287 - R:/192.168.43.128:8091]
[2023-08-10 10:42:44,699] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 10:42:44,699] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 10:42:44,699] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 10:42:44,700] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 10:42:44,930] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 10:42:44,933] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 10:42:44,948] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 10:42:44,952] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 10:42:44,952] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x10f4dfb1, L:/192.168.43.8:64282 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:44,953] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x10f4dfb1, L:/192.168.43.8:64282 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:44,953] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x10f4dfb1, L:/192.168.43.8:64282 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:44,953] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x10f4dfb1, L:/192.168.43.8:64282 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:44,953] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x10f4dfb1, L:/192.168.43.8:64282 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:44,953] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x10f4dfb1, L:/192.168.43.8:64282 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:44,954] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xa3ed19d7, L:/192.168.43.8:64287 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:44,954] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xa3ed19d7, L:/192.168.43.8:64287 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:44,954] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xa3ed19d7, L:/192.168.43.8:64287 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:44,955] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xa3ed19d7, L:/192.168.43.8:64287 ! R:/192.168.43.128:8091]
[2023-08-10 10:42:44,955] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa3ed19d7, L:/192.168.43.8:64287 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:44,955] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa3ed19d7, L:/192.168.43.8:64287 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:42:56,939] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 10:42:56,946] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 10:42:56,969] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 10:42:58,018] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 10:42:58,089] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:42:58,089] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:42:58,090] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:42:58,114] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:42:58,117] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:42:58,118] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:42:58,119] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/318052965] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:42:58,120] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:42:58,121] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:42:58,123] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:42:58,124] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 10:42:58,178] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 10:42:58,185] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 10:42:58,192] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:42:58,192] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:42:58,614] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 10:42:58,797] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:42:58,829] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:42:58,829] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:42:59,049] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:42:59,260] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:42:59,827] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xbd4fff59, L:/192.168.43.8:64382 - R:/192.168.43.128:8091]
[2023-08-10 10:42:59,832] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 50 ms, version:1.6.1,role:TMROLE,channel:[id: 0xbd4fff59, L:/192.168.43.8:64382 - R:/192.168.43.128:8091]
[2023-08-10 10:42:59,832] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:42:59,856] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 10:42:59,856] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 10:42:59,861] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:42:59,861] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:42:59,861] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 10:43:00,283] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 10:43:00,290] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:43:00,291] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 10:43:00,291] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 10:43:00,464] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 10:43:00,465] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 3486 ms
[2023-08-10 10:43:00,789] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 10:43:01,012] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 10:43:01,125] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:43:01,126] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 10:43:01,126] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:43:01,132] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xab2651e8, L:/192.168.43.8:64396 - R:/192.168.43.128:8091]
[2023-08-10 10:43:01,132] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 3 ms, version:1.6.1,role:RMROLE,channel:[id: 0xab2651e8, L:/192.168.43.8:64396 - R:/192.168.43.128:8091]
[2023-08-10 10:43:01,913] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:43:01,920] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:43:01,965] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:43:01,966] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:43:02,082] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$979f2d63] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 10:43:02,423] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 10:43:04,207] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:43:04,218] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 10:43:04,221] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:43:04,221] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:43:04,448] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 10:43:04,829] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 10:43:04,840] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 10:43:04,857] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 10:43:04,979] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 11.859 seconds (JVM running for 12.886)
[2023-08-10 10:43:04,983] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 10:43:04,985] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 10:43:04,985] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 10:43:15,937] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 10:43:15,939] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 10:43:15,949] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 10 ms
[2023-08-10 10:43:16,425] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[62] - requestId：518480eb4d014b16a81f2c2f49c3f09e
[2023-08-10 10:43:16,494] [518480eb4d014b16a81f2c2f49c3f09e] [INFO] [http-nio-8010-exec-1] LogUtil[71] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 10:43:16"}
[2023-08-10 10:43:16,515] [518480eb4d014b16a81f2c2f49c3f09e] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@40d7e8d
[2023-08-10 10:43:16,522] [518480eb4d014b16a81f2c2f49c3f09e] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745789]
[2023-08-10 10:43:16,681] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 10:43:16,682] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745789
[2023-08-10 10:43:16,683] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 10:43:17,226] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (542ms)
[2023-08-10 10:43:17,227] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 10:43:17,228] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 10:43:17,228] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 02:43:17 GMT
[2023-08-10 10:43:17,228] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 10:43:17,228] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 10:43:17,229] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 10:43:17,229] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":32,"time":"2023-08-10 02:43:17"}
[2023-08-10 10:43:17,230] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 10:43:17,263] [518480eb4d014b16a81f2c2f49c3f09e] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=32, time=Thu Aug 10 10:43:17 CST 2023)
[2023-08-10 10:43:17,270] [518480eb4d014b16a81f2c2f49c3f09e] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 10:43:17,272] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 10:43:17,478] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (204ms)
[2023-08-10 10:43:17,483] [518480eb4d014b16a81f2c2f49c3f09e] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 10:43:17 CST 2023)
[2023-08-10 10:43:17,612] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 10:43:17,638] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081002431726439885641(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 10:43:18,299] [518480eb4d014b16a81f2c2f49c3f09e] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 10:43:18,796] [518480eb4d014b16a81f2c2f49c3f09e] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745789
[2023-08-10 10:43:18,797] [518480eb4d014b16a81f2c2f49c3f09e] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745789] commit status: Committed
[2023-08-10 10:43:18,803] [518480eb4d014b16a81f2c2f49c3f09e] [INFO] [http-nio-8010-exec-1] LogUtil[51] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 10:43:18"}
[2023-08-10 10:43:21,187] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745789,branchId=5566871554652745790,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:43:21,189] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745789 5566871554652745790 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:43:21,190] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 10:43:28,043] [518480eb4d014b16a81f2c2f49c3f09e] [ERROR] [Feh_Optimize_1] LogUtil[317] - 保存系统操作日志失败
java.lang.NullPointerException: null
	at com.sakura.common.tool.IpUtil.getRequestIp(IpUtil.java:46)
	at com.sakura.common.tool.ClientInfoUtil.get(ClientInfoUtil.java:83)
	at com.sakura.common.log.LogUtil.saveSysOperationLog(LogUtil.java:269)
	at com.sakura.common.log.LogUtil.finish(LogUtil.java:226)
	at com.sakura.common.log.LogUtil$$FastClassBySpringCGLIB$$712eb7d3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115)
	at com.sakura.common.thread.ThreadMdcUtil.lambda$wrap$0(ThreadMdcUtil.java:30)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 10:44:16,897] [logId] [WARN] [Thread-12] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 10:44:16,897] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 10:44:16,898] [logId] [WARN] [Thread-12] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 10:44:16,898] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 10:44:17,153] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 10:44:17,158] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 10:44:17,180] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 10:44:17,187] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 10:44:17,193] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xab2651e8, L:/192.168.43.8:64396 ! R:/192.168.43.128:8091]
[2023-08-10 10:44:17,194] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xab2651e8, L:/192.168.43.8:64396 ! R:/192.168.43.128:8091]
[2023-08-10 10:44:17,194] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xab2651e8, L:/192.168.43.8:64396 ! R:/192.168.43.128:8091]
[2023-08-10 10:44:17,199] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xab2651e8, L:/192.168.43.8:64396 ! R:/192.168.43.128:8091]
[2023-08-10 10:44:17,200] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xab2651e8, L:/192.168.43.8:64396 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:44:17,200] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xab2651e8, L:/192.168.43.8:64396 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:44:26,435] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 10:44:26,443] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 10:44:26,461] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 10:44:27,238] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 10:44:27,297] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:44:27,297] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:44:27,297] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:44:27,321] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:44:27,324] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:44:27,326] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:44:27,327] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/15288143] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:44:27,327] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:44:27,329] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:44:27,331] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:44:27,332] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 10:44:27,387] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 10:44:27,393] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 10:44:27,399] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:44:27,399] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:44:27,819] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 10:44:27,978] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:44:28,019] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:44:28,019] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:44:28,246] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:44:28,698] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:44:30,024] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xe134b5b2, L:/192.168.43.8:64532 - R:/192.168.43.128:8091]
[2023-08-10 10:44:30,035] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 138 ms, version:1.6.1,role:TMROLE,channel:[id: 0xe134b5b2, L:/192.168.43.8:64532 - R:/192.168.43.128:8091]
[2023-08-10 10:44:30,038] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:44:30,160] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 10:44:30,162] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 10:44:30,204] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:44:30,206] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:44:30,206] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 10:44:32,122] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 10:44:32,156] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:44:32,157] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 10:44:32,158] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 10:44:32,484] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 10:44:32,485] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 6012 ms
[2023-08-10 10:44:32,865] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 10:44:33,455] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 10:44:33,649] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:44:33,649] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 10:44:33,651] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:44:33,662] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x9545eeda, L:/192.168.43.8:64545 - R:/192.168.43.128:8091]
[2023-08-10 10:44:33,663] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 7 ms, version:1.6.1,role:RMROLE,channel:[id: 0x9545eeda, L:/192.168.43.8:64545 - R:/192.168.43.128:8091]
[2023-08-10 10:44:34,576] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:44:34,586] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:44:34,647] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:44:34,647] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:44:34,771] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$cbd20c5d] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 10:44:35,092] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 10:44:36,748] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:44:36,758] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 10:44:36,762] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:44:36,762] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:44:36,961] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 10:44:37,307] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 10:44:37,334] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 10:44:37,364] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 10:44:37,501] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 14.277 seconds (JVM running for 15.051)
[2023-08-10 10:44:37,505] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 10:44:37,507] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 10:44:37,507] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 10:44:57,702] [logId] [INFO] [http-nio-8010-exec-2] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 10:44:57,703] [logId] [INFO] [http-nio-8010-exec-2] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 10:44:57,716] [logId] [INFO] [http-nio-8010-exec-2] DispatcherServlet[547] - Completed initialization in 12 ms
[2023-08-10 10:44:58,224] [logId] [INFO] [http-nio-8010-exec-2] LogUtil[62] - requestId：7dc5b03c99714b8bb6683155dfd906e2
[2023-08-10 10:44:58,495] [7dc5b03c99714b8bb6683155dfd906e2] [INFO] [http-nio-8010-exec-2] LogUtil[71] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 10:44:58"}
[2023-08-10 10:44:58,601] [7dc5b03c99714b8bb6683155dfd906e2] [INFO] [http-nio-8010-exec-2] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@35964ef8
[2023-08-10 10:44:58,644] [7dc5b03c99714b8bb6683155dfd906e2] [INFO] [http-nio-8010-exec-2] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745791]
[2023-08-10 10:44:59,268] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 10:44:59,271] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745791
[2023-08-10 10:44:59,273] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 10:44:59,607] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (332ms)
[2023-08-10 10:44:59,608] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 10:44:59,609] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 10:44:59,609] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 02:44:59 GMT
[2023-08-10 10:44:59,609] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 10:44:59,609] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 10:44:59,609] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 10:44:59,610] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":31,"time":"2023-08-10 02:44:59"}
[2023-08-10 10:44:59,610] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 10:44:59,626] [7dc5b03c99714b8bb6683155dfd906e2] [INFO] [http-nio-8010-exec-2] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=31, time=Thu Aug 10 10:44:59 CST 2023)
[2023-08-10 10:44:59,630] [7dc5b03c99714b8bb6683155dfd906e2] [INFO] [http-nio-8010-exec-2] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 10:44:59,632] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 10:44:59,716] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (83ms)
[2023-08-10 10:44:59,718] [7dc5b03c99714b8bb6683155dfd906e2] [INFO] [http-nio-8010-exec-2] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 10:44:59 CST 2023)
[2023-08-10 10:44:59,792] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 10:44:59,815] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] insert[143] - ==> Parameters: 2023081002445962794737698(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 10:45:00,278] [7dc5b03c99714b8bb6683155dfd906e2] [DEBUG] [http-nio-8010-exec-2] insert[143] - <==    Updates: 1
[2023-08-10 10:45:00,459] [7dc5b03c99714b8bb6683155dfd906e2] [INFO] [http-nio-8010-exec-2] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745791
[2023-08-10 10:45:00,459] [7dc5b03c99714b8bb6683155dfd906e2] [INFO] [http-nio-8010-exec-2] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745791] commit status: Committed
[2023-08-10 10:45:00,464] [7dc5b03c99714b8bb6683155dfd906e2] [INFO] [http-nio-8010-exec-2] LogUtil[51] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 10:45:00"}
[2023-08-10 10:45:00,489] [7dc5b03c99714b8bb6683155dfd906e2] [INFO] [Feh_Optimize_1] LogUtil[282] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"7dc5b03c99714b8bb6683155dfd906e2","requestMethod":"POST","success":true,"type":1,"userId":10000}
[2023-08-10 10:45:00,616] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745791,branchId=5566871554652745792,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:45:00,618] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745791 5566871554652745792 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:45:00,619] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 10:54:23,799] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 10:54:23,799] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 10:54:23,799] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 10:54:23,800] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 10:54:24,041] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 10:54:24,044] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 10:54:24,055] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 10:54:24,057] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 10:54:24,059] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xe134b5b2, L:/192.168.43.8:64532 ! R:/192.168.43.128:8091]
[2023-08-10 10:54:24,059] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x9545eeda, L:/192.168.43.8:64545 ! R:/192.168.43.128:8091]
[2023-08-10 10:54:24,059] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xe134b5b2, L:/192.168.43.8:64532 ! R:/192.168.43.128:8091]
[2023-08-10 10:54:24,059] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x9545eeda, L:/192.168.43.8:64545 ! R:/192.168.43.128:8091]
[2023-08-10 10:54:24,060] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xe134b5b2, L:/192.168.43.8:64532 ! R:/192.168.43.128:8091]
[2023-08-10 10:54:24,060] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x9545eeda, L:/192.168.43.8:64545 ! R:/192.168.43.128:8091]
[2023-08-10 10:54:24,060] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x9545eeda, L:/192.168.43.8:64545 ! R:/192.168.43.128:8091]
[2023-08-10 10:54:24,060] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xe134b5b2, L:/192.168.43.8:64532 ! R:/192.168.43.128:8091]
[2023-08-10 10:54:24,060] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9545eeda, L:/192.168.43.8:64545 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:54:24,060] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe134b5b2, L:/192.168.43.8:64532 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:54:24,060] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9545eeda, L:/192.168.43.8:64545 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:54:24,060] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe134b5b2, L:/192.168.43.8:64532 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:54:36,039] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 10:54:36,046] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 10:54:36,070] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 10:54:37,074] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 10:54:37,137] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:54:37,138] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:54:37,138] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:54:37,162] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:54:37,166] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:54:37,168] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:54:37,168] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/1655993826] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:54:37,169] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:54:37,172] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:54:37,174] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:54:37,175] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 10:54:37,222] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 10:54:37,227] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 10:54:37,232] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:54:37,233] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:54:37,702] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 10:54:37,863] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:54:37,894] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:54:37,895] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:54:38,121] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:54:38,396] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:54:38,957] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x73b59043, L:/192.168.43.8:65159 - R:/192.168.43.128:8091]
[2023-08-10 10:54:38,962] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 52 ms, version:1.6.1,role:TMROLE,channel:[id: 0x73b59043, L:/192.168.43.8:65159 - R:/192.168.43.128:8091]
[2023-08-10 10:54:38,963] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:54:38,988] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 10:54:38,989] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 10:54:38,993] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:54:38,993] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:54:38,993] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 10:54:39,396] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 10:54:39,406] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:54:39,407] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 10:54:39,407] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 10:54:39,573] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 10:54:39,573] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 3491 ms
[2023-08-10 10:54:39,754] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 10:54:40,105] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 10:54:40,225] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:54:40,226] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 10:54:40,227] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:54:40,235] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x52a73772, L:/192.168.43.8:65167 - R:/192.168.43.128:8091]
[2023-08-10 10:54:40,236] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 5 ms, version:1.6.1,role:RMROLE,channel:[id: 0x52a73772, L:/192.168.43.8:65167 - R:/192.168.43.128:8091]
[2023-08-10 10:54:41,044] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:54:41,050] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:54:41,099] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:54:41,100] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:54:41,206] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$60d33b5e] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 10:54:41,573] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 10:54:43,303] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:54:43,311] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 10:54:43,314] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:54:43,314] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:54:43,521] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 10:54:43,980] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 10:54:43,990] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 10:54:44,005] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 10:54:44,121] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 11.489 seconds (JVM running for 12.439)
[2023-08-10 10:54:44,126] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 10:54:44,132] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 10:54:44,133] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 10:56:27,152] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 10:56:27,152] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 10:56:27,154] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 2 ms
[2023-08-10 10:56:27,268] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[65] - requestId：ce9298d52fb74b2e97dae28f35704369
[2023-08-10 10:56:27,346] [ce9298d52fb74b2e97dae28f35704369] [INFO] [http-nio-8010-exec-1] LogUtil[74] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 10:56:27","token":"10001"}
[2023-08-10 10:56:27,386] [ce9298d52fb74b2e97dae28f35704369] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@10645a14
[2023-08-10 10:56:27,396] [ce9298d52fb74b2e97dae28f35704369] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745793]
[2023-08-10 10:56:27,602] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 10:56:27,604] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745793
[2023-08-10 10:56:27,606] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 10:56:27,868] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (261ms)
[2023-08-10 10:56:27,870] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 10:56:27,871] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 10:56:27,871] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 02:56:27 GMT
[2023-08-10 10:56:27,871] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 10:56:27,871] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 10:56:27,871] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 10:56:27,873] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":30,"time":"2023-08-10 02:56:27"}
[2023-08-10 10:56:27,873] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 10:56:27,899] [ce9298d52fb74b2e97dae28f35704369] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=30, time=Thu Aug 10 10:56:27 CST 2023)
[2023-08-10 10:56:27,908] [ce9298d52fb74b2e97dae28f35704369] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 10:56:27,909] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 10:56:27,982] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (72ms)
[2023-08-10 10:56:27,984] [ce9298d52fb74b2e97dae28f35704369] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 10:56:27 CST 2023)
[2023-08-10 10:56:28,016] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 10:56:28,024] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081002562790055586186(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 10:56:28,216] [ce9298d52fb74b2e97dae28f35704369] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 10:56:28,382] [ce9298d52fb74b2e97dae28f35704369] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745793
[2023-08-10 10:56:28,383] [ce9298d52fb74b2e97dae28f35704369] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745793] commit status: Committed
[2023-08-10 10:56:28,387] [ce9298d52fb74b2e97dae28f35704369] [INFO] [http-nio-8010-exec-1] LogUtil[54] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 10:56:28"}
[2023-08-10 10:56:28,404] [ce9298d52fb74b2e97dae28f35704369] [ERROR] [Feh_Optimize_1] LogUtil[289] - 保存系统操作日志失败
java.lang.NullPointerException: null
	at com.sakura.common.thread.TokenUtil.getRequest(TokenUtil.java:44)
	at com.sakura.common.thread.TokenUtil.getToken(TokenUtil.java:21)
	at com.sakura.common.log.LogUtil.saveSysOperationLog(LogUtil.java:283)
	at com.sakura.common.log.LogUtil.finish(LogUtil.java:229)
	at com.sakura.common.log.LogUtil$$FastClassBySpringCGLIB$$712eb7d3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115)
	at com.sakura.common.thread.ThreadMdcUtil.lambda$wrap$0(ThreadMdcUtil.java:30)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 10:56:28,620] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745793,branchId=5566871554652745794,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:56:28,623] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745793 5566871554652745794 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:56:28,624] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 10:57:14,690] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 10:57:14,690] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 10:57:14,691] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 10:57:14,693] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 10:57:15,007] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 10:57:15,011] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 10:57:15,031] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 10:57:15,035] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 10:57:15,037] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x52a73772, L:/192.168.43.8:65167 ! R:/192.168.43.128:8091]
[2023-08-10 10:57:15,037] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x52a73772, L:/192.168.43.8:65167 ! R:/192.168.43.128:8091]
[2023-08-10 10:57:15,038] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x52a73772, L:/192.168.43.8:65167 ! R:/192.168.43.128:8091]
[2023-08-10 10:57:15,038] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x52a73772, L:/192.168.43.8:65167 ! R:/192.168.43.128:8091]
[2023-08-10 10:57:15,038] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x52a73772, L:/192.168.43.8:65167 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:57:15,038] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x52a73772, L:/192.168.43.8:65167 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 10:57:28,802] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 10:57:28,810] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 10:57:28,837] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 10:57:29,858] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 10:57:29,934] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:57:29,935] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:57:29,935] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:57:29,961] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:57:29,965] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:57:29,967] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:57:29,967] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/1732945446] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:57:29,968] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:57:29,970] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:57:29,972] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 10:57:29,974] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 10:57:30,044] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 10:57:30,053] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 10:57:30,067] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:57:30,067] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:57:30,569] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 10:57:30,753] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:57:30,793] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:57:30,793] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:57:31,023] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:57:31,241] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:57:32,247] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xc41b6b67, L:/192.168.43.8:65397 - R:/192.168.43.128:8091]
[2023-08-10 10:57:32,253] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 50 ms, version:1.6.1,role:TMROLE,channel:[id: 0xc41b6b67, L:/192.168.43.8:65397 - R:/192.168.43.128:8091]
[2023-08-10 10:57:32,254] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:57:32,277] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 10:57:32,278] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 10:57:32,284] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 10:57:32,284] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 10:57:32,284] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 10:57:32,773] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 10:57:32,780] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:57:32,780] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 10:57:32,781] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 10:57:32,974] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 10:57:32,974] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4122 ms
[2023-08-10 10:57:33,288] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 10:57:33,502] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 10:57:33,622] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 10:57:33,622] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 10:57:33,623] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 10:57:33,633] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xdb8fce33, L:/192.168.43.8:65405 - R:/192.168.43.128:8091]
[2023-08-10 10:57:33,633] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 5 ms, version:1.6.1,role:RMROLE,channel:[id: 0xdb8fce33, L:/192.168.43.8:65405 - R:/192.168.43.128:8091]
[2023-08-10 10:57:34,383] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:57:34,395] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:57:34,441] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 10:57:34,441] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 10:57:34,564] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$ac2ba905] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 10:57:34,926] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 10:57:36,697] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 10:57:36,705] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 10:57:36,708] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 10:57:36,708] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 10:57:36,900] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 10:57:37,405] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 10:57:37,414] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 10:57:37,434] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 10:57:37,565] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 12.666 seconds (JVM running for 13.793)
[2023-08-10 10:57:37,569] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 10:57:37,571] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 10:57:37,571] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 10:57:49,260] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 10:57:49,262] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 10:57:49,268] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 5 ms
[2023-08-10 10:57:49,409] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[65] - requestId：356a4a43bdb5468295479f156755adbc
[2023-08-10 10:57:49,497] [356a4a43bdb5468295479f156755adbc] [INFO] [http-nio-8010-exec-1] LogUtil[74] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 10:57:49","token":"10001"}
[2023-08-10 10:57:57,799] [356a4a43bdb5468295479f156755adbc] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@50a096a
[2023-08-10 10:57:57,807] [356a4a43bdb5468295479f156755adbc] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745795]
[2023-08-10 10:57:57,944] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 10:57:57,944] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745795
[2023-08-10 10:57:57,945] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 10:57:58,066] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (121ms)
[2023-08-10 10:57:58,066] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 10:57:58,066] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 10:57:58,067] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 02:57:58 GMT
[2023-08-10 10:57:58,067] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 10:57:58,067] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 10:57:58,067] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 10:57:58,067] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":29,"time":"2023-08-10 02:57:58"}
[2023-08-10 10:57:58,068] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 10:57:58,076] [356a4a43bdb5468295479f156755adbc] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=29, time=Thu Aug 10 10:57:58 CST 2023)
[2023-08-10 10:57:58,078] [356a4a43bdb5468295479f156755adbc] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 10:57:58,078] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 10:57:58,108] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (30ms)
[2023-08-10 10:57:58,110] [356a4a43bdb5468295479f156755adbc] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 10:57:58 CST 2023)
[2023-08-10 10:57:58,144] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 10:57:58,155] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081002575807669044908(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 10:57:58,301] [356a4a43bdb5468295479f156755adbc] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 10:57:58,401] [356a4a43bdb5468295479f156755adbc] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745795
[2023-08-10 10:57:58,402] [356a4a43bdb5468295479f156755adbc] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745795] commit status: Committed
[2023-08-10 10:57:58,404] [356a4a43bdb5468295479f156755adbc] [INFO] [http-nio-8010-exec-1] LogUtil[54] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 10:57:58"}
[2023-08-10 10:57:59,906] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745795,branchId=5566871554652745796,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:58:00,381] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745795 5566871554652745796 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 10:58:00,870] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 10:58:00,875] [356a4a43bdb5468295479f156755adbc] [ERROR] [Feh_Optimize_1] LogUtil[289] - 保存系统操作日志失败
java.lang.NullPointerException: null
	at com.sakura.common.thread.TokenUtil.getRequest(TokenUtil.java:44)
	at com.sakura.common.thread.TokenUtil.getToken(TokenUtil.java:21)
	at com.sakura.common.log.LogUtil.saveSysOperationLog(LogUtil.java:283)
	at com.sakura.common.log.LogUtil.finish(LogUtil.java:229)
	at com.sakura.common.log.LogUtil$$FastClassBySpringCGLIB$$712eb7d3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115)
	at com.sakura.common.thread.ThreadMdcUtil.lambda$wrap$0(ThreadMdcUtil.java:30)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 11:05:29,951] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 11:05:29,951] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 11:05:29,952] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 11:05:29,953] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 11:05:30,192] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 11:05:30,195] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 11:05:30,208] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 11:05:30,213] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 11:05:30,215] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xdb8fce33, L:/192.168.43.8:65405 ! R:/192.168.43.128:8091]
[2023-08-10 11:05:30,215] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xdb8fce33, L:/192.168.43.8:65405 ! R:/192.168.43.128:8091]
[2023-08-10 11:05:30,215] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xdb8fce33, L:/192.168.43.8:65405 ! R:/192.168.43.128:8091]
[2023-08-10 11:05:30,215] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xdb8fce33, L:/192.168.43.8:65405 ! R:/192.168.43.128:8091]
[2023-08-10 11:05:30,216] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xdb8fce33, L:/192.168.43.8:65405 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:05:30,216] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xdb8fce33, L:/192.168.43.8:65405 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:05:39,009] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 11:05:39,016] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 11:05:39,032] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 11:05:39,810] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 11:05:39,861] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:05:39,862] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:05:39,862] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:05:39,883] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:05:39,886] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:05:39,888] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:05:39,888] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/1655993826] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:05:39,889] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:05:39,890] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:05:39,892] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:05:39,893] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 11:05:39,940] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 11:05:39,947] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 11:05:39,953] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:05:39,953] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:05:40,345] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 11:05:40,470] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 11:05:40,496] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:05:40,496] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:05:40,719] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:05:40,954] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:05:41,487] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x32799067, L:/192.168.43.8:49648 - R:/192.168.43.128:8091]
[2023-08-10 11:05:41,492] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 50 ms, version:1.6.1,role:TMROLE,channel:[id: 0x32799067, L:/192.168.43.8:49648 - R:/192.168.43.128:8091]
[2023-08-10 11:05:41,492] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 11:05:41,520] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 11:05:41,521] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 11:05:41,526] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 11:05:41,526] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 11:05:41,526] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 11:05:41,857] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 11:05:41,863] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 11:05:41,864] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 11:05:41,864] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 11:05:41,983] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 11:05:41,984] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 2938 ms
[2023-08-10 11:05:42,123] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 11:05:42,429] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 11:05:42,554] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:05:42,554] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 11:05:42,554] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:05:42,561] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x24bfb94a, L:/192.168.43.8:49658 - R:/192.168.43.128:8091]
[2023-08-10 11:05:42,561] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0x24bfb94a, L:/192.168.43.8:49658 - R:/192.168.43.128:8091]
[2023-08-10 11:05:43,454] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 11:05:43,461] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 11:05:43,515] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 11:05:43,516] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 11:05:43,654] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$60d33b5e] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 11:05:43,985] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 11:05:45,606] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 11:05:45,617] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 11:05:45,619] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:05:45,619] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:05:45,824] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 11:05:46,157] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 11:05:46,167] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 11:05:46,183] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 11:05:46,313] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 10.621 seconds (JVM running for 11.394)
[2023-08-10 11:05:46,318] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 11:05:46,319] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 11:05:46,319] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 11:05:58,596] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 11:05:58,597] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 11:05:58,612] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 14 ms
[2023-08-10 11:05:59,057] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[65] - requestId：935d44cc438441eaada2f48abf15c044
[2023-08-10 11:05:59,291] [935d44cc438441eaada2f48abf15c044] [INFO] [http-nio-8010-exec-1] LogUtil[74] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 11:05:59","token":"10001"}
[2023-08-10 11:05:59,321] [935d44cc438441eaada2f48abf15c044] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@bdaea32
[2023-08-10 11:05:59,329] [935d44cc438441eaada2f48abf15c044] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745797]
[2023-08-10 11:05:59,483] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 11:05:59,483] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745797
[2023-08-10 11:05:59,484] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 11:05:59,887] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (402ms)
[2023-08-10 11:05:59,888] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 11:05:59,889] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 11:05:59,889] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 03:05:59 GMT
[2023-08-10 11:05:59,889] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 11:05:59,889] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 11:05:59,890] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 11:05:59,890] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":28,"time":"2023-08-10 03:05:59"}
[2023-08-10 11:05:59,890] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 11:05:59,924] [935d44cc438441eaada2f48abf15c044] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=28, time=Thu Aug 10 11:05:59 CST 2023)
[2023-08-10 11:05:59,939] [935d44cc438441eaada2f48abf15c044] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 11:05:59,941] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 11:06:00,185] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (242ms)
[2023-08-10 11:06:00,192] [935d44cc438441eaada2f48abf15c044] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 11:06:00 CST 2023)
[2023-08-10 11:06:00,331] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 11:06:00,385] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081003055992892220477(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 11:06:01,017] [935d44cc438441eaada2f48abf15c044] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 11:06:01,428] [935d44cc438441eaada2f48abf15c044] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745797
[2023-08-10 11:06:01,429] [935d44cc438441eaada2f48abf15c044] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745797] commit status: Committed
[2023-08-10 11:06:01,434] [935d44cc438441eaada2f48abf15c044] [INFO] [http-nio-8010-exec-1] LogUtil[54] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 11:06:01"}
[2023-08-10 11:06:01,463] [935d44cc438441eaada2f48abf15c044] [INFO] [Feh_Optimize_1] LogUtil[283] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"935d44cc438441eaada2f48abf15c044","requestMethod":"POST","success":true,"type":1}
[2023-08-10 11:06:01,627] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745797,branchId=5566871554652745798,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 11:06:01,629] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745797 5566871554652745798 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 11:06:01,631] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 11:06:33,432] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 11:06:33,432] [logId] [WARN] [Thread-10] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 11:06:33,432] [logId] [WARN] [Thread-10] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 11:06:33,433] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 11:06:33,656] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 11:06:33,661] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 11:06:33,671] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 11:06:33,673] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 11:06:33,674] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x32799067, L:/192.168.43.8:49648 ! R:/192.168.43.128:8091]
[2023-08-10 11:06:33,675] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x32799067, L:/192.168.43.8:49648 ! R:/192.168.43.128:8091]
[2023-08-10 11:06:33,675] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x24bfb94a, L:/192.168.43.8:49658 ! R:/192.168.43.128:8091]
[2023-08-10 11:06:33,675] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x24bfb94a, L:/192.168.43.8:49658 ! R:/192.168.43.128:8091]
[2023-08-10 11:06:33,675] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x32799067, L:/192.168.43.8:49648 ! R:/192.168.43.128:8091]
[2023-08-10 11:06:33,675] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x24bfb94a, L:/192.168.43.8:49658 ! R:/192.168.43.128:8091]
[2023-08-10 11:06:33,675] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x32799067, L:/192.168.43.8:49648 ! R:/192.168.43.128:8091]
[2023-08-10 11:06:33,676] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x24bfb94a, L:/192.168.43.8:49658 ! R:/192.168.43.128:8091]
[2023-08-10 11:06:33,676] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x32799067, L:/192.168.43.8:49648 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:06:33,676] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x24bfb94a, L:/192.168.43.8:49658 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:06:33,676] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x32799067, L:/192.168.43.8:49648 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:06:33,676] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x24bfb94a, L:/192.168.43.8:49658 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:06:42,333] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 11:06:42,340] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 11:06:42,410] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 11:06:43,284] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 11:06:43,340] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:06:43,341] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:06:43,341] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:06:43,360] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:06:43,363] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:06:43,364] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:06:43,365] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/1655993826] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:06:43,366] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:06:43,370] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:06:43,372] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:06:43,373] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 11:06:43,415] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 11:06:43,422] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 11:06:43,430] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:06:43,431] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:06:43,823] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 11:06:43,939] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 11:06:43,961] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:06:43,961] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:06:44,172] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:06:44,459] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:06:45,048] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xe9f3caff, L:/192.168.43.8:49782 - R:/192.168.43.128:8091]
[2023-08-10 11:06:45,053] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 46 ms, version:1.6.1,role:TMROLE,channel:[id: 0xe9f3caff, L:/192.168.43.8:49782 - R:/192.168.43.128:8091]
[2023-08-10 11:06:45,054] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 11:06:45,073] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 11:06:45,074] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 11:06:45,078] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 11:06:45,078] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 11:06:45,078] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 11:06:45,428] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 11:06:45,435] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 11:06:45,436] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 11:06:45,436] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 11:06:45,559] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 11:06:45,559] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 3118 ms
[2023-08-10 11:06:45,745] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 11:06:46,063] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 11:06:46,179] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:06:46,180] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 11:06:46,180] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:06:46,190] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x4507b146, L:/192.168.43.8:49790 - R:/192.168.43.128:8091]
[2023-08-10 11:06:46,190] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 6 ms, version:1.6.1,role:RMROLE,channel:[id: 0x4507b146, L:/192.168.43.8:49790 - R:/192.168.43.128:8091]
[2023-08-10 11:06:46,890] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 11:06:46,896] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 11:06:46,938] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 11:06:46,938] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 11:06:47,042] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$60d33b5e] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 11:06:47,406] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 11:06:48,966] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 11:06:48,974] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 11:06:48,977] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:06:48,977] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:06:49,183] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 11:06:49,556] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 11:06:49,566] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 11:06:49,578] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 11:06:49,688] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 10.615 seconds (JVM running for 11.384)
[2023-08-10 11:06:49,694] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 11:06:49,696] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 11:06:49,696] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 11:06:59,591] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 11:06:59,593] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 11:06:59,599] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 6 ms
[2023-08-10 11:07:00,110] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[65] - requestId：5f1b8b2b976d4c66a2c6741f590a38be
[2023-08-10 11:07:00,374] [5f1b8b2b976d4c66a2c6741f590a38be] [INFO] [http-nio-8010-exec-1] LogUtil[74] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 11:07:00","token":"10001"}
[2023-08-10 11:07:00,410] [5f1b8b2b976d4c66a2c6741f590a38be] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@6bf4eaca
[2023-08-10 11:07:00,426] [5f1b8b2b976d4c66a2c6741f590a38be] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745799]
[2023-08-10 11:07:00,640] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 11:07:00,641] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745799
[2023-08-10 11:07:00,641] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 11:07:00,995] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (353ms)
[2023-08-10 11:07:00,995] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 11:07:00,996] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 11:07:00,996] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 03:07:00 GMT
[2023-08-10 11:07:00,997] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 11:07:00,997] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 11:07:00,997] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 11:07:00,997] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":27,"time":"2023-08-10 03:07:00"}
[2023-08-10 11:07:00,998] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 11:07:01,042] [5f1b8b2b976d4c66a2c6741f590a38be] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=27, time=Thu Aug 10 11:07:00 CST 2023)
[2023-08-10 11:07:01,047] [5f1b8b2b976d4c66a2c6741f590a38be] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 11:07:01,047] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 11:07:01,240] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (192ms)
[2023-08-10 11:07:01,244] [5f1b8b2b976d4c66a2c6741f590a38be] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 11:07:01 CST 2023)
[2023-08-10 11:07:01,456] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 11:07:01,508] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081003070104341275941(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 11:07:02,243] [5f1b8b2b976d4c66a2c6741f590a38be] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 11:07:02,605] [5f1b8b2b976d4c66a2c6741f590a38be] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745799
[2023-08-10 11:07:02,607] [5f1b8b2b976d4c66a2c6741f590a38be] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745799] commit status: Committed
[2023-08-10 11:07:02,611] [5f1b8b2b976d4c66a2c6741f590a38be] [INFO] [http-nio-8010-exec-1] LogUtil[54] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 11:07:02"}
[2023-08-10 11:07:02,631] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745799,branchId=5566871554652745800,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 11:07:02,636] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745799 5566871554652745800 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 11:07:02,637] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 11:07:02,644] [5f1b8b2b976d4c66a2c6741f590a38be] [INFO] [Feh_Optimize_1] LogUtil[283] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"5f1b8b2b976d4c66a2c6741f590a38be","requestMethod":"POST","success":true,"type":1}
[2023-08-10 11:17:43,404] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 11:17:43,404] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 11:17:43,405] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 11:17:43,406] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 11:17:43,720] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 11:17:43,723] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 11:17:43,734] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 11:17:43,738] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 11:17:43,740] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x4507b146, L:/192.168.43.8:49790 ! R:/192.168.43.128:8091]
[2023-08-10 11:17:43,741] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x4507b146, L:/192.168.43.8:49790 ! R:/192.168.43.128:8091]
[2023-08-10 11:17:43,741] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x4507b146, L:/192.168.43.8:49790 ! R:/192.168.43.128:8091]
[2023-08-10 11:17:43,741] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x4507b146, L:/192.168.43.8:49790 ! R:/192.168.43.128:8091]
[2023-08-10 11:17:43,742] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x4507b146, L:/192.168.43.8:49790 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:17:43,742] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x4507b146, L:/192.168.43.8:49790 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:17:53,635] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 11:17:53,640] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 11:17:53,661] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 11:17:54,506] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 11:17:54,561] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:17:54,561] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:17:54,562] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:17:54,579] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:17:54,586] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:17:54,588] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:17:54,589] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/1655993826] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:17:54,589] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:17:54,592] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:17:54,595] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:17:54,596] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 11:17:54,641] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 11:17:54,645] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 11:17:54,654] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:17:54,654] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:17:55,088] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 11:17:55,302] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 11:17:55,335] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:17:55,336] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:17:55,564] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:17:55,791] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:17:56,309] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xd1370459, L:/192.168.43.8:50897 - R:/192.168.43.128:8091]
[2023-08-10 11:17:56,315] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 46 ms, version:1.6.1,role:TMROLE,channel:[id: 0xd1370459, L:/192.168.43.8:50897 - R:/192.168.43.128:8091]
[2023-08-10 11:17:56,316] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 11:17:56,337] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 11:17:56,338] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 11:17:56,342] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 11:17:56,342] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 11:17:56,342] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 11:17:56,664] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 11:17:56,671] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 11:17:56,671] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 11:17:56,671] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 11:17:56,819] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 11:17:56,819] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 3148 ms
[2023-08-10 11:17:56,979] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 11:17:57,293] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 11:17:57,403] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:17:57,403] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 11:17:57,403] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:17:57,409] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x4d8b5008, L:/192.168.43.8:50906 - R:/192.168.43.128:8091]
[2023-08-10 11:17:57,409] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 3 ms, version:1.6.1,role:RMROLE,channel:[id: 0x4d8b5008, L:/192.168.43.8:50906 - R:/192.168.43.128:8091]
[2023-08-10 11:17:58,080] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 11:17:58,091] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 11:17:58,135] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 11:17:58,135] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 11:17:58,240] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$60d33b5e] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 11:17:58,546] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 11:18:00,317] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 11:18:00,325] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 11:18:00,328] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:18:00,328] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:18:00,538] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 11:18:01,053] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 11:18:01,061] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 11:18:01,079] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 11:18:01,214] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 10.8 seconds (JVM running for 11.756)
[2023-08-10 11:18:01,217] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 11:18:01,219] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 11:18:01,219] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 11:18:08,074] [logId] [INFO] [http-nio-8010-exec-2] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 11:18:08,075] [logId] [INFO] [http-nio-8010-exec-2] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 11:18:08,078] [logId] [INFO] [http-nio-8010-exec-2] DispatcherServlet[547] - Completed initialization in 3 ms
[2023-08-10 11:18:08,534] [logId] [INFO] [http-nio-8010-exec-2] LogUtil[65] - requestId：5f2a4f8d43df41b09bb967c144892c4f
[2023-08-10 11:18:08,717] [5f2a4f8d43df41b09bb967c144892c4f] [INFO] [http-nio-8010-exec-2] LogUtil[74] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 11:18:08","token":"10001"}
[2023-08-10 11:18:08,763] [5f2a4f8d43df41b09bb967c144892c4f] [INFO] [http-nio-8010-exec-2] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@1db0a212
[2023-08-10 11:18:08,776] [5f2a4f8d43df41b09bb967c144892c4f] [INFO] [http-nio-8010-exec-2] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745801]
[2023-08-10 11:18:09,004] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 11:18:09,005] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745801
[2023-08-10 11:18:09,006] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 11:18:09,657] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (650ms)
[2023-08-10 11:18:09,658] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 11:18:09,659] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 11:18:09,659] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 03:18:09 GMT
[2023-08-10 11:18:09,659] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 11:18:09,659] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 11:18:09,659] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 11:18:09,660] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":26,"time":"2023-08-10 03:18:09"}
[2023-08-10 11:18:09,660] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 11:18:09,686] [5f2a4f8d43df41b09bb967c144892c4f] [INFO] [http-nio-8010-exec-2] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=26, time=Thu Aug 10 11:18:09 CST 2023)
[2023-08-10 11:18:09,699] [5f2a4f8d43df41b09bb967c144892c4f] [INFO] [http-nio-8010-exec-2] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 11:18:09,700] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 11:18:09,818] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (117ms)
[2023-08-10 11:18:09,823] [5f2a4f8d43df41b09bb967c144892c4f] [INFO] [http-nio-8010-exec-2] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 11:18:09 CST 2023)
[2023-08-10 11:18:09,906] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 11:18:09,942] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] insert[143] - ==> Parameters: 2023081003180968660082885(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 11:18:10,474] [5f2a4f8d43df41b09bb967c144892c4f] [DEBUG] [http-nio-8010-exec-2] insert[143] - <==    Updates: 1
[2023-08-10 11:18:10,642] [5f2a4f8d43df41b09bb967c144892c4f] [INFO] [http-nio-8010-exec-2] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745801
[2023-08-10 11:18:10,643] [5f2a4f8d43df41b09bb967c144892c4f] [INFO] [http-nio-8010-exec-2] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745801] commit status: Committed
[2023-08-10 11:18:10,645] [5f2a4f8d43df41b09bb967c144892c4f] [INFO] [http-nio-8010-exec-2] LogUtil[54] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 11:18:10"}
[2023-08-10 11:18:10,665] [5f2a4f8d43df41b09bb967c144892c4f] [INFO] [Feh_Optimize_1] LogUtil[283] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"5f2a4f8d43df41b09bb967c144892c4f","requestMethod":"POST","success":true,"type":1}
[2023-08-10 11:18:11,627] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745801,branchId=5566871554652745802,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 11:18:11,629] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745801 5566871554652745802 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 11:18:11,629] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 11:18:57,776] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 11:18:57,776] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 11:18:57,777] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 11:18:57,778] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 11:18:58,014] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 11:18:58,018] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 11:18:58,028] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 11:18:58,032] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 11:18:58,036] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x4d8b5008, L:/192.168.43.8:50906 ! R:/192.168.43.128:8091]
[2023-08-10 11:18:58,036] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x4d8b5008, L:/192.168.43.8:50906 ! R:/192.168.43.128:8091]
[2023-08-10 11:18:58,036] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x4d8b5008, L:/192.168.43.8:50906 ! R:/192.168.43.128:8091]
[2023-08-10 11:18:58,036] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x4d8b5008, L:/192.168.43.8:50906 ! R:/192.168.43.128:8091]
[2023-08-10 11:18:58,037] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x4d8b5008, L:/192.168.43.8:50906 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:18:58,037] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x4d8b5008, L:/192.168.43.8:50906 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:19:07,543] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 11:19:07,549] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 11:19:07,565] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 11:19:08,500] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=63088f38-28f5-3d3f-931f-c3d2200c5321
[2023-08-10 11:19:08,557] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:19:08,557] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:19:08,558] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:19:08,581] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:19:08,583] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:19:08,585] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:19:08,585] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/1689309690] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:19:08,586] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:19:08,587] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:19:08,589] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:19:08,590] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 11:19:08,636] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 11:19:08,642] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 11:19:08,649] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:19:08,649] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:19:09,047] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 11:19:09,168] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 11:19:09,190] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:19:09,190] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:19:09,406] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:19:09,644] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:19:10,221] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x6f6bf116, L:/192.168.43.8:51037 - R:/192.168.43.128:8091]
[2023-08-10 11:19:10,229] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 59 ms, version:1.6.1,role:TMROLE,channel:[id: 0x6f6bf116, L:/192.168.43.8:51037 - R:/192.168.43.128:8091]
[2023-08-10 11:19:10,230] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 11:19:10,262] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 11:19:10,263] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 11:19:10,269] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 11:19:10,270] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 11:19:10,270] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 11:19:10,698] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 11:19:10,724] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 11:19:10,725] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 11:19:10,725] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 11:19:11,089] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 11:19:11,090] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 3512 ms
[2023-08-10 11:19:11,485] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 11:19:12,324] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 11:19:12,583] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:19:12,584] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 11:19:12,586] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:19:12,623] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x304c23a1, L:/192.168.43.8:51049 - R:/192.168.43.128:8091]
[2023-08-10 11:19:12,624] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 22 ms, version:1.6.1,role:RMROLE,channel:[id: 0x304c23a1, L:/192.168.43.8:51049 - R:/192.168.43.128:8091]
[2023-08-10 11:19:14,675] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 11:19:14,686] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 11:19:14,774] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 11:19:14,774] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 11:19:14,939] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$d9adeb33] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 11:19:15,568] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 11:19:17,465] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 11:19:17,473] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 11:19:17,476] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:19:17,477] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:19:17,692] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 11:19:18,164] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 11:19:18,176] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 11:19:18,198] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 11:19:18,352] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 14.183 seconds (JVM running for 15.093)
[2023-08-10 11:19:18,360] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 11:19:18,362] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 11:19:18,362] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 11:19:53,940] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 11:19:53,940] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 11:19:53,943] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 2 ms
[2023-08-10 11:19:54,391] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[65] - requestId：a93fa9cd2d584cd6bd015ee62ff17e64
[2023-08-10 11:19:54,492] [a93fa9cd2d584cd6bd015ee62ff17e64] [INFO] [http-nio-8010-exec-1] LogUtil[74] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 11:19:54","token":"10001"}
[2023-08-10 11:19:54,511] [a93fa9cd2d584cd6bd015ee62ff17e64] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@b16169b
[2023-08-10 11:19:54,530] [a93fa9cd2d584cd6bd015ee62ff17e64] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745803]
[2023-08-10 11:19:54,837] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 11:19:54,837] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745803
[2023-08-10 11:19:54,837] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 11:19:55,532] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (693ms)
[2023-08-10 11:19:55,533] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 11:19:55,533] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 11:19:55,533] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 03:19:55 GMT
[2023-08-10 11:19:55,533] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 11:19:55,534] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 11:19:55,534] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 11:19:55,534] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":25,"time":"2023-08-10 03:19:55"}
[2023-08-10 11:19:55,535] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 11:19:55,555] [a93fa9cd2d584cd6bd015ee62ff17e64] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=25, time=Thu Aug 10 11:19:55 CST 2023)
[2023-08-10 11:19:55,562] [a93fa9cd2d584cd6bd015ee62ff17e64] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 11:19:55,564] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 11:19:55,674] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (108ms)
[2023-08-10 11:19:55,677] [a93fa9cd2d584cd6bd015ee62ff17e64] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 11:19:55 CST 2023)
[2023-08-10 11:19:55,776] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 11:19:55,807] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081003195555645260716(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 11:19:56,136] [a93fa9cd2d584cd6bd015ee62ff17e64] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 11:19:56,299] [a93fa9cd2d584cd6bd015ee62ff17e64] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745803
[2023-08-10 11:19:56,300] [a93fa9cd2d584cd6bd015ee62ff17e64] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745803] commit status: Committed
[2023-08-10 11:19:56,304] [a93fa9cd2d584cd6bd015ee62ff17e64] [INFO] [http-nio-8010-exec-1] LogUtil[54] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 11:19:56"}
[2023-08-10 11:19:56,321] [a93fa9cd2d584cd6bd015ee62ff17e64] [INFO] [Feh_Optimize_1] LogUtil[283] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"a93fa9cd2d584cd6bd015ee62ff17e64","requestMethod":"POST","success":true,"type":1}
[2023-08-10 11:19:56,626] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745803,branchId=5566871554652745804,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 11:19:56,628] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745803 5566871554652745804 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 11:19:56,628] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 11:24:43,534] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 11:24:43,534] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 11:24:43,535] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 11:24:43,536] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 11:24:43,784] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 11:24:43,789] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 11:24:43,800] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 11:24:43,804] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 11:24:43,807] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x304c23a1, L:/192.168.43.8:51049 ! R:/192.168.43.128:8091]
[2023-08-10 11:24:43,807] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x304c23a1, L:/192.168.43.8:51049 ! R:/192.168.43.128:8091]
[2023-08-10 11:24:43,807] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x304c23a1, L:/192.168.43.8:51049 ! R:/192.168.43.128:8091]
[2023-08-10 11:24:43,808] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x304c23a1, L:/192.168.43.8:51049 ! R:/192.168.43.128:8091]
[2023-08-10 11:24:43,808] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x304c23a1, L:/192.168.43.8:51049 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:24:43,809] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x304c23a1, L:/192.168.43.8:51049 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:24:49,769] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 11:24:49,775] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 11:24:49,799] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 11:24:50,696] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=63088f38-28f5-3d3f-931f-c3d2200c5321
[2023-08-10 11:24:50,758] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:24:50,759] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:24:50,759] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:24:50,782] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:24:50,786] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:24:50,788] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:24:50,789] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/2084706642] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:24:50,790] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:24:50,794] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:24:50,796] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:24:50,797] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 11:24:50,849] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 11:24:50,857] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 11:24:50,865] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:24:50,866] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:24:51,302] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 11:24:51,569] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 11:24:51,607] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:24:51,607] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:24:51,860] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:24:52,437] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:24:54,333] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x549c8278, L:/192.168.43.8:51447 - R:/192.168.43.128:8091]
[2023-08-10 11:24:54,339] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 102 ms, version:1.6.1,role:TMROLE,channel:[id: 0x549c8278, L:/192.168.43.8:51447 - R:/192.168.43.128:8091]
[2023-08-10 11:24:54,340] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 11:24:54,404] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 11:24:54,406] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 11:24:54,421] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 11:24:54,423] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 11:24:54,424] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 11:24:55,539] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 11:24:55,570] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 11:24:55,572] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 11:24:55,573] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 11:24:55,892] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 11:24:55,893] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 6083 ms
[2023-08-10 11:24:56,324] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 11:24:56,577] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 11:24:56,701] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:24:56,702] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 11:24:56,702] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:24:56,709] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x3df2f425, L:/192.168.43.8:51457 - R:/192.168.43.128:8091]
[2023-08-10 11:24:56,709] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 3 ms, version:1.6.1,role:RMROLE,channel:[id: 0x3df2f425, L:/192.168.43.8:51457 - R:/192.168.43.128:8091]
[2023-08-10 11:24:57,767] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 11:24:57,779] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 11:24:57,834] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 11:24:57,835] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 11:24:57,961] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$45a7aea8] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 11:24:58,309] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 11:25:00,191] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 11:25:00,199] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 11:25:00,202] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:25:00,202] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:25:00,397] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 11:25:00,803] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 11:25:00,812] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 11:25:00,833] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 11:25:00,965] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 14.551 seconds (JVM running for 15.664)
[2023-08-10 11:25:00,969] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 11:25:00,971] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 11:25:00,972] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 11:25:12,766] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 11:25:12,766] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 11:25:12,767] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 1 ms
[2023-08-10 11:25:12,882] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[65] - requestId：dce78726a0a743faad9d852e1d38f79a
[2023-08-10 11:25:12,950] [dce78726a0a743faad9d852e1d38f79a] [INFO] [http-nio-8010-exec-1] LogUtil[74] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 11:25:12","token":"10001"}
[2023-08-10 11:25:39,062] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[450] - channel [id: 0x549c8278, L:/192.168.43.8:51447 - R:/192.168.43.128:8091] read idle.
[2023-08-10 11:25:39,062] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[450] - channel [id: 0x3df2f425, L:/192.168.43.8:51457 - R:/192.168.43.128:8091] read idle.
[2023-08-10 11:25:39,063] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x3df2f425, L:/192.168.43.8:51457 - R:/192.168.43.128:8091]
[2023-08-10 11:25:39,063] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x549c8278, L:/192.168.43.8:51447 - R:/192.168.43.128:8091]
[2023-08-10 11:25:39,063] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3df2f425, L:/192.168.43.8:51457 - R:/192.168.43.128:8091]) will closed
[2023-08-10 11:25:39,063] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x549c8278, L:/192.168.43.8:51447 - R:/192.168.43.128:8091]) will closed
[2023-08-10 11:25:39,065] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3df2f425, L:/192.168.43.8:51457 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:25:39,065] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x549c8278, L:/192.168.43.8:51447 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:25:39,067] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x3df2f425, L:/192.168.43.8:51457 ! R:/192.168.43.128:8091]
[2023-08-10 11:25:39,067] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x549c8278, L:/192.168.43.8:51447 ! R:/192.168.43.128:8091]
[2023-08-10 11:25:39,067] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x3df2f425, L:/192.168.43.8:51457 ! R:/192.168.43.128:8091]
[2023-08-10 11:25:39,067] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x549c8278, L:/192.168.43.8:51447 ! R:/192.168.43.128:8091]
[2023-08-10 11:25:39,067] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x3df2f425, L:/192.168.43.8:51457 ! R:/192.168.43.128:8091]
[2023-08-10 11:25:39,067] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x549c8278, L:/192.168.43.8:51447 ! R:/192.168.43.128:8091]
[2023-08-10 11:25:39,068] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x549c8278, L:/192.168.43.8:51447 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:25:39,068] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3df2f425, L:/192.168.43.8:51457 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:25:40,370] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3df2f425, L:/192.168.43.8:51457 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:25:40,370] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x549c8278, L:/192.168.43.8:51447 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:25:40,371] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x3df2f425, L:/192.168.43.8:51457 ! R:/192.168.43.128:8091]
[2023-08-10 11:25:40,371] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x549c8278, L:/192.168.43.8:51447 ! R:/192.168.43.128:8091]
[2023-08-10 11:25:40,371] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x3df2f425, L:/192.168.43.8:51457 ! R:/192.168.43.128:8091]
[2023-08-10 11:25:40,371] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x549c8278, L:/192.168.43.8:51447 ! R:/192.168.43.128:8091]
[2023-08-10 11:25:40,371] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x3df2f425, L:/192.168.43.8:51457 ! R:/192.168.43.128:8091]
[2023-08-10 11:25:40,371] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x549c8278, L:/192.168.43.8:51447 ! R:/192.168.43.128:8091]
[2023-08-10 11:25:40,371] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3df2f425, L:/192.168.43.8:51457 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:25:40,371] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x549c8278, L:/192.168.43.8:51447 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:25:40,371] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3df2f425, L:/192.168.43.8:51457 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:25:40,371] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x549c8278, L:/192.168.43.8:51447 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:25:40,391] [dce78726a0a743faad9d852e1d38f79a] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@1663bab0
[2023-08-10 11:25:40,393] [dce78726a0a743faad9d852e1d38f79a] [INFO] [http-nio-8010-exec-1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:25:40,393] [dce78726a0a743faad9d852e1d38f79a] [INFO] [http-nio-8010-exec-1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:25:40,397] [dce78726a0a743faad9d852e1d38f79a] [INFO] [http-nio-8010-exec-1] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x71fb7eba, L:/192.168.43.8:51500 - R:/192.168.43.128:8091]
[2023-08-10 11:25:40,397] [dce78726a0a743faad9d852e1d38f79a] [INFO] [http-nio-8010-exec-1] NettyPoolableFactory[81] - register success, cost 2 ms, version:1.6.1,role:TMROLE,channel:[id: 0x71fb7eba, L:/192.168.43.8:51500 - R:/192.168.43.128:8091]
[2023-08-10 11:25:40,401] [dce78726a0a743faad9d852e1d38f79a] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745805]
[2023-08-10 11:25:46,002] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 11:25:46,003] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745805
[2023-08-10 11:25:46,003] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 11:25:46,507] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (503ms)
[2023-08-10 11:25:46,508] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 11:25:46,509] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 11:25:46,510] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 03:25:46 GMT
[2023-08-10 11:25:46,510] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 11:25:46,511] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 11:25:46,511] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 11:25:46,512] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":24,"time":"2023-08-10 03:25:46"}
[2023-08-10 11:25:46,512] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 11:25:48,826] [dce78726a0a743faad9d852e1d38f79a] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=24, time=Thu Aug 10 11:25:46 CST 2023)
[2023-08-10 11:25:55,936] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:25:55,938] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 11:25:55,937] [dce78726a0a743faad9d852e1d38f79a] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 11:25:55,938] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:25:55,938] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 11:25:55,944] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x0c96f902, L:/192.168.43.8:51518 - R:/192.168.43.128:8091]
[2023-08-10 11:25:55,945] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0x0c96f902, L:/192.168.43.8:51518 - R:/192.168.43.128:8091]
[2023-08-10 11:25:55,975] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (36ms)
[2023-08-10 11:25:55,977] [dce78726a0a743faad9d852e1d38f79a] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 11:25:55 CST 2023)
[2023-08-10 11:25:56,010] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 11:25:56,022] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081003254985044321805(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 11:25:56,166] [dce78726a0a743faad9d852e1d38f79a] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 11:25:56,282] [dce78726a0a743faad9d852e1d38f79a] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745805
[2023-08-10 11:25:56,284] [dce78726a0a743faad9d852e1d38f79a] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745805] commit status: Committed
[2023-08-10 11:25:56,288] [dce78726a0a743faad9d852e1d38f79a] [INFO] [http-nio-8010-exec-1] LogUtil[54] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 11:25:56"}
[2023-08-10 11:25:57,762] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745805,branchId=5566871554652745806,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 11:25:57,765] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745805 5566871554652745806 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 11:25:58,392] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 11:25:58,399] [dce78726a0a743faad9d852e1d38f79a] [INFO] [Feh_Optimize_1] LogUtil[283] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"dce78726a0a743faad9d852e1d38f79a","requestMethod":"POST","success":true,"type":1}
[2023-08-10 11:30:53,749] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 11:30:53,749] [logId] [WARN] [Thread-4] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 11:30:53,750] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 11:30:53,751] [logId] [WARN] [Thread-4] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 11:30:53,991] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 11:30:53,994] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 11:30:54,010] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 11:30:54,013] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 11:30:54,014] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x71fb7eba, L:/192.168.43.8:51500 ! R:/192.168.43.128:8091]
[2023-08-10 11:30:54,014] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x71fb7eba, L:/192.168.43.8:51500 ! R:/192.168.43.128:8091]
[2023-08-10 11:30:54,014] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x71fb7eba, L:/192.168.43.8:51500 ! R:/192.168.43.128:8091]
[2023-08-10 11:30:54,015] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x71fb7eba, L:/192.168.43.8:51500 ! R:/192.168.43.128:8091]
[2023-08-10 11:30:54,015] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x71fb7eba, L:/192.168.43.8:51500 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:30:54,015] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x71fb7eba, L:/192.168.43.8:51500 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:30:54,016] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x0c96f902, L:/192.168.43.8:51518 ! R:/192.168.43.128:8091]
[2023-08-10 11:30:54,017] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x0c96f902, L:/192.168.43.8:51518 ! R:/192.168.43.128:8091]
[2023-08-10 11:30:54,017] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x0c96f902, L:/192.168.43.8:51518 ! R:/192.168.43.128:8091]
[2023-08-10 11:30:54,017] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x0c96f902, L:/192.168.43.8:51518 ! R:/192.168.43.128:8091]
[2023-08-10 11:30:54,017] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x0c96f902, L:/192.168.43.8:51518 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:30:54,017] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x0c96f902, L:/192.168.43.8:51518 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 11:31:01,806] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 11:31:01,857] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 11:31:01,930] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 11:31:04,025] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=63088f38-28f5-3d3f-931f-c3d2200c5321
[2023-08-10 11:31:04,147] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:31:04,147] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:31:04,147] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:31:04,177] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:31:04,180] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:31:04,182] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:31:04,183] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/476179877] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:31:04,183] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:31:04,186] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:31:04,188] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 11:31:04,190] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 11:31:04,261] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 11:31:04,278] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 11:31:04,287] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:31:04,288] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:31:04,778] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 11:31:04,946] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 11:31:04,977] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:31:04,977] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:31:05,216] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:31:05,525] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:31:06,183] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x57bfa710, L:/192.168.43.8:51957 - R:/192.168.43.128:8091]
[2023-08-10 11:31:06,188] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 46 ms, version:1.6.1,role:TMROLE,channel:[id: 0x57bfa710, L:/192.168.43.8:51957 - R:/192.168.43.128:8091]
[2023-08-10 11:31:06,188] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 11:31:06,215] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 11:31:06,216] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 11:31:06,220] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 11:31:06,220] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 11:31:06,220] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 11:31:06,603] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 11:31:06,611] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 11:31:06,611] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 11:31:06,611] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 11:31:06,780] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 11:31:06,780] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4810 ms
[2023-08-10 11:31:06,958] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 11:31:07,309] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 11:31:07,428] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 11:31:07,428] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 11:31:07,429] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 11:31:07,436] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x1fa08516, L:/192.168.43.8:51966 - R:/192.168.43.128:8091]
[2023-08-10 11:31:07,436] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0x1fa08516, L:/192.168.43.8:51966 - R:/192.168.43.128:8091]
[2023-08-10 11:31:08,188] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 11:31:08,196] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 11:31:08,243] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 11:31:08,244] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 11:31:08,370] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$e54600e4] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 11:31:08,759] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 11:31:10,476] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 11:31:10,484] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 11:31:10,487] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 11:31:10,487] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 11:31:10,710] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 11:31:11,072] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 11:31:11,080] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 11:31:11,092] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 11:31:11,211] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 14.656 seconds (JVM running for 15.426)
[2023-08-10 11:31:11,215] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 11:31:11,218] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 11:31:11,218] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 11:32:08,676] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 11:32:08,678] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 11:32:08,685] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 7 ms
[2023-08-10 11:32:09,122] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[65] - requestId：bff6f3246eac43acac358d28900a9f65
[2023-08-10 11:32:09,519] [bff6f3246eac43acac358d28900a9f65] [INFO] [http-nio-8010-exec-1] LogUtil[74] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 11:32:09","token":"10001"}
[2023-08-10 11:32:09,546] [bff6f3246eac43acac358d28900a9f65] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@26568992
[2023-08-10 11:32:09,555] [bff6f3246eac43acac358d28900a9f65] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745807]
[2023-08-10 11:32:09,755] [bff6f3246eac43acac358d28900a9f65] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 11:32:09,757] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 11:32:09,758] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745807
[2023-08-10 11:32:09,758] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 11:32:10,235] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (476ms)
[2023-08-10 11:32:10,238] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 11:32:10,239] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 11:32:10,240] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 03:32:10 GMT
[2023-08-10 11:32:10,240] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 11:32:10,240] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 11:32:10,241] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 11:32:10,241] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":23,"time":"2023-08-10 03:32:10"}
[2023-08-10 11:32:10,242] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 11:32:10,264] [bff6f3246eac43acac358d28900a9f65] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=23, time=Thu Aug 10 11:32:10 CST 2023)
[2023-08-10 11:32:10,278] [bff6f3246eac43acac358d28900a9f65] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 11:32:10,279] [bff6f3246eac43acac358d28900a9f65] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 11:32:10,280] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 11:32:10,361] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (80ms)
[2023-08-10 11:32:10,365] [bff6f3246eac43acac358d28900a9f65] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 11:32:10 CST 2023)
[2023-08-10 11:32:10,451] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 11:32:10,469] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081003321026699564619(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 11:32:10,816] [bff6f3246eac43acac358d28900a9f65] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 11:32:10,980] [bff6f3246eac43acac358d28900a9f65] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745807
[2023-08-10 11:32:10,981] [bff6f3246eac43acac358d28900a9f65] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745807] commit status: Committed
[2023-08-10 11:32:10,983] [bff6f3246eac43acac358d28900a9f65] [INFO] [http-nio-8010-exec-1] LogUtil[54] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 11:32:10"}
[2023-08-10 11:32:11,000] [bff6f3246eac43acac358d28900a9f65] [INFO] [Feh_Optimize_1] LogUtil[283] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"bff6f3246eac43acac358d28900a9f65","requestMethod":"POST","success":true,"type":1}
[2023-08-10 11:32:11,633] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745807,branchId=5566871554652745808,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 11:32:11,634] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745807 5566871554652745808 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 11:32:11,635] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 12:33:23,163] [logId] [ERROR] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[476] - 0318
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 12:33:23,163] [logId] [ERROR] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[476] - 0318
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 12:33:23,164] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x57bfa710, L:/192.168.43.8:51957 - R:/192.168.43.128:8091]
[2023-08-10 12:33:23,164] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x1fa08516, L:/192.168.43.8:51966 - R:/192.168.43.128:8091]
[2023-08-10 12:33:23,165] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[480] - remove exception rm channel:[id: 0x57bfa710, L:/192.168.43.8:51957 - R:/192.168.43.128:8091]
[2023-08-10 12:33:23,165] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[480] - remove exception rm channel:[id: 0x1fa08516, L:/192.168.43.8:51966 - R:/192.168.43.128:8091]
[2023-08-10 12:33:23,166] [logId] [WARN] [NettyClientSelector_RMROLE_1_1] DefaultChannelPipeline[1152] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 12:33:23,166] [logId] [WARN] [NettyClientSelector_TMROLE_1_1] DefaultChannelPipeline[1152] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 12:33:23,167] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x1fa08516, L:/192.168.43.8:51966 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,167] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x57bfa710, L:/192.168.43.8:51957 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,167] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x1fa08516, L:/192.168.43.8:51966 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,167] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x57bfa710, L:/192.168.43.8:51957 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,167] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x1fa08516, L:/192.168.43.8:51966 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,168] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x57bfa710, L:/192.168.43.8:51957 ! R:/192.168.43.128:8091]
[2023-08-10 12:33:23,168] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x1fa08516, L:/192.168.43.8:51966 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 12:33:23,168] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x57bfa710, L:/192.168.43.8:51957 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 12:33:23,168] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x1fa08516, L:/192.168.43.8:51966 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 12:33:23,168] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x57bfa710, L:/192.168.43.8:51957 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:31:48,748] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:48,748] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 13:31:48,749] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x1fa08516, L:/192.168.43.8:51966 ! R:/192.168.43.128:8091]
[2023-08-10 13:31:48,750] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x1fa08516, L:/192.168.43.8:51966 ! R:/192.168.43.128:8091]
[2023-08-10 13:31:48,751] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,513] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,514] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,517] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x41417f14]) will closed
[2023-08-10 13:31:49,518] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,519] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,519] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,519] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,521] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x91dfe010]) will closed
[2023-08-10 13:31:49,522] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,523] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,523] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,523] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,524] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x675616c4]) will closed
[2023-08-10 13:31:49,525] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,526] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,527] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,527] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,528] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x2e89e131]) will closed
[2023-08-10 13:31:49,529] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,534] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,534] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,535] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,536] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa893d5df]) will closed
[2023-08-10 13:31:49,537] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,537] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,537] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,537] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,539] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5cde143e]) will closed
[2023-08-10 13:31:49,540] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,540] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,540] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,540] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,541] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x61b92f04]) will closed
[2023-08-10 13:31:49,542] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,543] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,543] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,543] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,544] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x4b31d25f]) will closed
[2023-08-10 13:31:49,545] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,545] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,545] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,545] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,546] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xcd99b034]) will closed
[2023-08-10 13:31:49,546] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,546] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,547] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,547] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,547] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x8d981daa]) will closed
[2023-08-10 13:31:49,548] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,548] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,548] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,548] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,549] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xc088606f]) will closed
[2023-08-10 13:31:49,550] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,550] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,550] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,550] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,551] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd241b638]) will closed
[2023-08-10 13:31:49,551] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,552] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,552] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,552] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,553] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x1697eb60]) will closed
[2023-08-10 13:31:49,553] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,553] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,554] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,554] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,554] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xc46b81e5]) will closed
[2023-08-10 13:31:49,556] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,556] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,556] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,556] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,557] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x2603dcc6]) will closed
[2023-08-10 13:31:49,558] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,558] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,558] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,558] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,559] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xc439c76d]) will closed
[2023-08-10 13:31:49,560] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,560] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,560] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,561] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,563] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xed934cee]) will closed
[2023-08-10 13:31:49,563] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,563] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,563] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,563] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,564] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x95c1daa4]) will closed
[2023-08-10 13:31:49,565] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,565] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,565] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,565] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,566] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xc671f6a9]) will closed
[2023-08-10 13:31:49,566] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,567] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,567] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,567] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,568] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x2683c5ec]) will closed
[2023-08-10 13:31:49,569] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,570] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,570] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,570] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:49,571] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x320e07fd]) will closed
[2023-08-10 13:31:49,572] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException: No route to host: no further information: /192.168.43.128:8091
Caused by: java.net.NoRouteToHostException: No route to host: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,572] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:49,816] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:49,816] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:58,767] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
[2023-08-10 13:31:58,768] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x0f27e213]) will closed
[2023-08-10 13:31:58,768] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:58,769] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:58,769] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 13:31:58,770] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:31:59,826] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x29decd90]) will closed
[2023-08-10 13:31:59,826] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
[2023-08-10 13:31:59,827] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:31:59,827] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:31:59,828] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:32:03,786] [logId] [ERROR] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[476] - 0318
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:04,834] [logId] [ERROR] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[476] - 0318
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:28,786] [logId] [ERROR] [timeoutChecker_2_1] AbstractNettyRemoting[203] - wait response error:null ,cost: 30014 ms,ip:/192.168.43.128:8091,request:RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'}
[2023-08-10 13:32:28,787] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: register RMROLE error, errMsg:null ,cost: 30014 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:28,787] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:register RMROLE error, errMsg:null ,cost: 30014 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register RMROLE error, errMsg:null ,cost: 30014 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:28,787] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[480] - remove exception rm channel:[id: 0x7164ab82, L:/26.26.26.1:60785 - R:/192.168.43.128:8091]
[2023-08-10 13:32:28,788] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:28,788] [logId] [WARN] [NettyClientSelector_RMROLE_1_1] DefaultChannelPipeline[1152] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:28,788] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 13:32:28,788] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7164ab82, L:/26.26.26.1:60785 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:28,788] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x7164ab82, L:/26.26.26.1:60785 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:28,788] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x7164ab82, L:/26.26.26.1:60785 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:28,788] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x7164ab82, L:/26.26.26.1:60785 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:28,788] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:32:29,845] [logId] [ERROR] [timeoutChecker_1_1] AbstractNettyRemoting[203] - wait response error:null ,cost: 30015 ms,ip:/192.168.43.128:8091,request:RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'}
[2023-08-10 13:32:29,846] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: register TMROLE error, errMsg:null ,cost: 30015 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:29,846] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:register TMROLE error, errMsg:null ,cost: 30015 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register TMROLE error, errMsg:null ,cost: 30015 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:29,846] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[480] - remove exception rm channel:[id: 0xb073d90a, L:/26.26.26.1:60834 - R:/192.168.43.128:8091]
[2023-08-10 13:32:29,846] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:29,846] [logId] [WARN] [NettyClientSelector_TMROLE_1_1] DefaultChannelPipeline[1152] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:29,846] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:32:29,846] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb073d90a, L:/26.26.26.1:60834 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:29,846] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xb073d90a, L:/26.26.26.1:60834 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:38,800] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
[2023-08-10 13:32:38,801] [logId] [ERROR] [timeoutChecker_2_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:38,801] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x7164ab82, L:/26.26.26.1:60785 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:38,801] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x7164ab82, L:/26.26.26.1:60785 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:38,801] [logId] [INFO] [timeoutChecker_2_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:38,801] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7164ab82, L:/26.26.26.1:60785 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:38,801] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7164ab82, L:/26.26.26.1:60785 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:38,801] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 13:32:38,801] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:32:38,807] [logId] [INFO] [timeoutChecker_2_1] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xb2468163, L:/192.168.43.8:61806 - R:/192.168.43.128:8091]
[2023-08-10 13:32:38,807] [logId] [INFO] [timeoutChecker_2_1] NettyPoolableFactory[81] - register success, cost 5 ms, version:1.6.1,role:RMROLE,channel:[id: 0xb2468163, L:/192.168.43.8:61806 - R:/192.168.43.128:8091]
[2023-08-10 13:32:39,849] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[249] - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:246)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
[2023-08-10 13:32:39,849] [logId] [ERROR] [timeoutChecker_1_1] NettyClientChannelManager[199] - 0101 can not connect to 192.168.43.128:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:250)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:112)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:196)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:115)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:32:39,849] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xb073d90a, L:/26.26.26.1:60834 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:39,849] [logId] [INFO] [timeoutChecker_1_1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:32:39,849] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xb073d90a, L:/26.26.26.1:60834 ! R:/192.168.43.128:8091]
[2023-08-10 13:32:39,849] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb073d90a, L:/26.26.26.1:60834 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:39,849] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb073d90a, L:/26.26.26.1:60834 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:32:39,850] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:32:39,854] [logId] [INFO] [timeoutChecker_1_1] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x49dfb331, L:/192.168.43.8:61808 - R:/192.168.43.128:8091]
[2023-08-10 13:32:39,854] [logId] [INFO] [timeoutChecker_1_1] NettyPoolableFactory[81] - register success, cost 3 ms, version:1.6.1,role:TMROLE,channel:[id: 0x49dfb331, L:/192.168.43.8:61808 - R:/192.168.43.128:8091]
[2023-08-10 13:52:04,883] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 13:52:04,884] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 13:52:04,884] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 13:52:04,884] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 13:52:05,182] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 13:52:05,186] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 13:52:05,195] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 13:52:05,197] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 13:52:05,198] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xd1e45c86, L:0.0.0.0/0.0.0.0:61807 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,198] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xd1e45c86, L:0.0.0.0/0.0.0.0:61807 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,198] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xd1e45c86, L:0.0.0.0/0.0.0.0:61807 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,198] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd1e45c86, L:0.0.0.0/0.0.0.0:61807 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:52:05,198] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd1e45c86, L:0.0.0.0/0.0.0.0:61807 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:52:05,198] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x49dfb331, L:/192.168.43.8:61808 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,198] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x49dfb331, L:/192.168.43.8:61808 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,198] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x49dfb331, L:/192.168.43.8:61808 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,199] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x49dfb331, L:/192.168.43.8:61808 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,199] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x49dfb331, L:/192.168.43.8:61808 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:52:05,199] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x49dfb331, L:/192.168.43.8:61808 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:52:05,199] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x7cfeaedb, L:0.0.0.0/0.0.0.0:61804 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,199] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x7cfeaedb, L:0.0.0.0/0.0.0.0:61804 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,199] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x7cfeaedb, L:0.0.0.0/0.0.0.0:61804 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,199] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7cfeaedb, L:0.0.0.0/0.0.0.0:61804 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:52:05,199] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x7cfeaedb, L:0.0.0.0/0.0.0.0:61804 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:52:05,199] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xb2468163, L:/192.168.43.8:61806 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,199] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xb2468163, L:/192.168.43.8:61806 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,199] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xb2468163, L:/192.168.43.8:61806 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,200] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xb2468163, L:/192.168.43.8:61806 ! R:/192.168.43.128:8091]
[2023-08-10 13:52:05,200] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb2468163, L:/192.168.43.8:61806 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:52:05,200] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb2468163, L:/192.168.43.8:61806 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:52:17,331] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 13:52:17,336] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 13:52:17,354] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 13:52:18,069] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=63088f38-28f5-3d3f-931f-c3d2200c5321
[2023-08-10 13:52:18,124] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:52:18,125] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:52:18,125] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:52:18,147] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:52:18,150] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:52:18,152] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:52:18,152] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/892230274] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:52:18,153] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:52:18,156] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:52:18,157] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:52:18,159] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 13:52:18,209] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 13:52:18,215] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 13:52:18,222] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:52:18,222] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:52:18,640] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 13:52:18,756] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:52:18,781] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:52:18,782] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:52:19,002] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:52:19,250] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:52:19,757] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xe2c0709c, L:/192.168.43.8:64419 - R:/192.168.43.128:8091]
[2023-08-10 13:52:19,762] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 44 ms, version:1.6.1,role:TMROLE,channel:[id: 0xe2c0709c, L:/192.168.43.8:64419 - R:/192.168.43.128:8091]
[2023-08-10 13:52:19,763] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 13:52:19,781] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 13:52:19,782] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 13:52:19,787] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:52:19,787] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 13:52:19,787] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 13:52:20,098] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 13:52:20,105] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 13:52:20,105] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 13:52:20,105] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 13:52:20,257] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 13:52:20,257] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 2892 ms
[2023-08-10 13:52:20,512] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 13:52:20,705] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 13:52:20,808] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:52:20,808] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 13:52:20,809] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:52:20,815] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x1e655142, L:/192.168.43.8:64427 - R:/192.168.43.128:8091]
[2023-08-10 13:52:20,815] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 3 ms, version:1.6.1,role:RMROLE,channel:[id: 0x1e655142, L:/192.168.43.8:64427 - R:/192.168.43.128:8091]
[2023-08-10 13:52:21,519] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 13:52:21,528] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 13:52:21,568] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 13:52:21,568] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 13:52:21,666] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$7d3d4609] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 13:52:21,946] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 13:52:23,535] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 13:52:23,544] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 13:52:23,546] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:52:23,547] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:52:23,743] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 13:52:24,241] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 13:52:24,250] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 13:52:24,264] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 13:52:24,379] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 10.016 seconds (JVM running for 10.857)
[2023-08-10 13:52:24,387] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 13:52:24,393] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 13:52:24,393] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 13:53:07,272] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 13:53:07,272] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 13:53:07,274] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 1 ms
[2023-08-10 13:53:15,611] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[67] - requestId：10002
[2023-08-10 13:53:15,617] [logId] [ERROR] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[476] - 0318
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:53:15,618] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xe2c0709c, L:/192.168.43.8:64419 - R:/192.168.43.128:8091]
[2023-08-10 13:53:15,619] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[480] - remove exception rm channel:[id: 0xe2c0709c, L:/192.168.43.8:64419 - R:/192.168.43.128:8091]
[2023-08-10 13:53:15,619] [logId] [WARN] [NettyClientSelector_TMROLE_1_1] DefaultChannelPipeline[1152] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:259)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 13:53:15,620] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xe2c0709c, L:/192.168.43.8:64419 ! R:/192.168.43.128:8091]
[2023-08-10 13:53:15,621] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xe2c0709c, L:/192.168.43.8:64419 ! R:/192.168.43.128:8091]
[2023-08-10 13:53:15,621] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xe2c0709c, L:/192.168.43.8:64419 ! R:/192.168.43.128:8091]
[2023-08-10 13:53:15,621] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe2c0709c, L:/192.168.43.8:64419 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:53:15,621] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe2c0709c, L:/192.168.43.8:64419 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:53:15,669] [10002] [INFO] [http-nio-8010-exec-1] LogUtil[76] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 13:53:07","token":"10001"}
[2023-08-10 13:53:16,870] [10002] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@7842ee68
[2023-08-10 13:53:16,872] [10002] [INFO] [http-nio-8010-exec-1] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:53:16,872] [10002] [INFO] [http-nio-8010-exec-1] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:53:16,875] [10002] [INFO] [http-nio-8010-exec-1] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x3d448ee7, L:/192.168.43.8:64487 - R:/192.168.43.128:8091]
[2023-08-10 13:53:16,876] [10002] [INFO] [http-nio-8010-exec-1] NettyPoolableFactory[81] - register success, cost 3 ms, version:1.6.1,role:TMROLE,channel:[id: 0x3d448ee7, L:/192.168.43.8:64487 - R:/192.168.43.128:8091]
[2023-08-10 13:53:16,880] [10002] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745809]
[2023-08-10 13:53:18,258] [10002] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 13:53:18,260] [10002] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 13:53:18,260] [10002] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745809
[2023-08-10 13:53:18,261] [10002] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 13:53:18,397] [10002] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (136ms)
[2023-08-10 13:53:18,399] [10002] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 13:53:18,399] [10002] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 13:53:18,399] [10002] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 05:53:18 GMT
[2023-08-10 13:53:18,399] [10002] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 13:53:18,399] [10002] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 13:53:18,399] [10002] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 13:53:18,400] [10002] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":22,"time":"2023-08-10 05:53:18"}
[2023-08-10 13:53:18,400] [10002] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 13:53:18,413] [10002] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=22, time=Thu Aug 10 13:53:18 CST 2023)
[2023-08-10 13:53:18,973] [10002] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 13:53:19,392] [10002] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 13:53:19,393] [10002] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 13:53:19,424] [10002] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (31ms)
[2023-08-10 13:53:19,426] [10002] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 13:53:19 CST 2023)
[2023-08-10 13:53:19,453] [10002] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 13:53:19,461] [10002] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081005531841347316459(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 13:53:19,591] [10002] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 13:53:19,660] [10002] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745809
[2023-08-10 13:53:19,661] [10002] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745809] commit status: Committed
[2023-08-10 13:53:19,663] [10002] [INFO] [http-nio-8010-exec-1] LogUtil[54] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 13:53:19"}
[2023-08-10 13:53:20,400] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745809,branchId=5566871554652745810,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 13:53:20,403] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745809 5566871554652745810 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 13:53:20,404] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 13:53:20,408] [10002] [INFO] [Feh_Optimize_1] LogUtil[285] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"10002","requestMethod":"POST","success":true,"type":1}
[2023-08-10 13:54:00,740] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 13:54:00,740] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 13:54:00,740] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 13:54:00,741] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 13:54:01,177] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 13:54:01,181] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 13:54:01,192] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 13:54:01,194] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 13:54:01,196] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x3d448ee7, L:/192.168.43.8:64487 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,196] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x3d448ee7, L:/192.168.43.8:64487 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,196] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x3d448ee7, L:/192.168.43.8:64487 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,197] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x3d448ee7, L:/192.168.43.8:64487 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,197] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3d448ee7, L:/192.168.43.8:64487 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,197] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3d448ee7, L:/192.168.43.8:64487 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,198] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x1e655142, L:/192.168.43.8:64427 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,198] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x1e655142, L:/192.168.43.8:64427 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,198] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x1e655142, L:/192.168.43.8:64427 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,198] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x1e655142, L:/192.168.43.8:64427 ! R:/192.168.43.128:8091]
[2023-08-10 13:54:01,198] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x1e655142, L:/192.168.43.8:64427 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:01,199] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x1e655142, L:/192.168.43.8:64427 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:54:07,617] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 13:54:07,625] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 13:54:07,648] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 13:54:08,566] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=63088f38-28f5-3d3f-931f-c3d2200c5321
[2023-08-10 13:54:08,622] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:08,622] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:08,622] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:08,644] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:08,647] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:08,649] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:08,650] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/372245] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:08,651] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:08,653] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:08,655] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:54:08,657] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 13:54:08,706] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 13:54:08,713] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 13:54:08,720] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:54:08,721] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:54:09,108] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 13:54:09,230] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:54:09,253] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:54:09,253] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:54:09,469] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:54:09,900] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:54:11,431] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xe5d2c150, L:/192.168.43.8:64706 - R:/192.168.43.128:8091]
[2023-08-10 13:54:11,437] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 61 ms, version:1.6.1,role:TMROLE,channel:[id: 0xe5d2c150, L:/192.168.43.8:64706 - R:/192.168.43.128:8091]
[2023-08-10 13:54:11,437] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 13:54:11,460] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 13:54:11,460] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 13:54:11,467] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:54:11,467] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 13:54:11,468] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 13:54:11,793] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 13:54:11,802] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 13:54:11,803] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 13:54:11,803] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 13:54:11,963] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 13:54:11,963] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4304 ms
[2023-08-10 13:54:12,135] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 13:54:12,549] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 13:54:12,659] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:54:12,659] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 13:54:12,660] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:54:12,668] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xf79f8748, L:/192.168.43.8:64715 - R:/192.168.43.128:8091]
[2023-08-10 13:54:12,668] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 6 ms, version:1.6.1,role:RMROLE,channel:[id: 0xf79f8748, L:/192.168.43.8:64715 - R:/192.168.43.128:8091]
[2023-08-10 13:54:13,921] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 13:54:13,927] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 13:54:13,969] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 13:54:13,970] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 13:54:14,051] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$ede74f85] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 13:54:14,358] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 13:54:16,478] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 13:54:16,486] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 13:54:16,489] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:54:16,489] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:54:16,685] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 13:54:18,091] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 13:54:18,102] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 13:54:18,116] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 13:54:18,234] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 15.116 seconds (JVM running for 15.896)
[2023-08-10 13:54:18,238] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 13:54:18,240] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 13:54:18,240] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 13:57:18,388] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 13:57:18,388] [logId] [WARN] [Thread-11] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 13:57:18,389] [logId] [WARN] [Thread-11] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 13:57:18,389] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 13:57:18,826] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 13:57:18,830] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 13:57:18,840] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 13:57:18,843] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 13:57:18,844] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xe5d2c150, L:/192.168.43.8:64706 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,845] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xe5d2c150, L:/192.168.43.8:64706 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,846] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xe5d2c150, L:/192.168.43.8:64706 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,846] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xf79f8748, L:/192.168.43.8:64715 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,846] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xe5d2c150, L:/192.168.43.8:64706 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,846] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xf79f8748, L:/192.168.43.8:64715 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,846] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xf79f8748, L:/192.168.43.8:64715 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,846] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xf79f8748, L:/192.168.43.8:64715 ! R:/192.168.43.128:8091]
[2023-08-10 13:57:18,846] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe5d2c150, L:/192.168.43.8:64706 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:57:18,846] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf79f8748, L:/192.168.43.8:64715 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:57:18,846] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe5d2c150, L:/192.168.43.8:64706 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:57:18,846] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf79f8748, L:/192.168.43.8:64715 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 13:57:26,829] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 13:57:26,838] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 13:57:26,868] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 13:57:27,619] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=63088f38-28f5-3d3f-931f-c3d2200c5321
[2023-08-10 13:57:27,663] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:27,664] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:27,664] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:27,680] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:27,683] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:27,684] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:27,685] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/304193386] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:27,686] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:27,687] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:27,689] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 13:57:27,690] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 13:57:27,734] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 13:57:27,739] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 13:57:27,744] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:57:27,744] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:57:28,152] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 13:57:28,310] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:57:28,330] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:57:28,330] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:57:28,570] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:57:29,673] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:57:31,061] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xda48ce49, L:/192.168.43.8:65096 - R:/192.168.43.128:8091]
[2023-08-10 13:57:31,070] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 70 ms, version:1.6.1,role:TMROLE,channel:[id: 0xda48ce49, L:/192.168.43.8:65096 - R:/192.168.43.128:8091]
[2023-08-10 13:57:31,071] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 13:57:31,108] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 13:57:31,109] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 13:57:31,117] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 13:57:31,117] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 13:57:31,117] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 13:57:31,516] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 13:57:31,523] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 13:57:31,523] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 13:57:31,523] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 13:57:31,689] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 13:57:31,690] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4805 ms
[2023-08-10 13:57:31,860] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 13:57:32,235] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 13:57:32,371] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 13:57:32,372] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 13:57:32,372] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 13:57:32,378] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x0ce8ed8e, L:/192.168.43.8:65108 - R:/192.168.43.128:8091]
[2023-08-10 13:57:32,378] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 3 ms, version:1.6.1,role:RMROLE,channel:[id: 0x0ce8ed8e, L:/192.168.43.8:65108 - R:/192.168.43.128:8091]
[2023-08-10 13:57:33,751] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 13:57:33,759] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 13:57:33,813] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 13:57:33,813] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 13:57:33,918] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$d38b8aea] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 13:57:34,309] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 13:57:36,781] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 13:57:36,789] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 13:57:36,792] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 13:57:36,792] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 13:57:36,988] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 13:57:39,028] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 13:57:39,039] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 13:57:39,057] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 13:57:39,202] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 18.429 seconds (JVM running for 19.109)
[2023-08-10 13:57:39,207] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 13:57:39,211] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 13:57:39,212] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 13:59:43,642] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 13:59:43,643] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 13:59:43,646] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 3 ms
[2023-08-10 13:59:43,754] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[67] - requestId：fb8d12aba52a4fd3ae775c763d31f59b
[2023-08-10 13:59:43,813] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8010-exec-1] LogUtil[76] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 13:59:43","token":"10001"}
[2023-08-10 13:59:43,835] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@1a4fda11
[2023-08-10 13:59:43,844] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745811]
[2023-08-10 13:59:43,978] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-10 13:59:43,978] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: fb8d12aba52a4fd3ae775c763d31f59b
[2023-08-10 13:59:43,979] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 13:59:43,979] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] requestId: fb8d12aba52a4fd3ae775c763d31f59b
[2023-08-10 13:59:43,979] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745811
[2023-08-10 13:59:43,979] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 13:59:44,615] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (635ms)
[2023-08-10 13:59:44,615] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 13:59:44,615] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 13:59:44,616] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 05:59:44 GMT
[2023-08-10 13:59:44,616] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 13:59:44,616] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 13:59:44,616] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 13:59:44,616] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":21,"time":"2023-08-10 05:59:44"}
[2023-08-10 13:59:44,616] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 13:59:44,624] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=21, time=Thu Aug 10 13:59:44 CST 2023)
[2023-08-10 13:59:44,627] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-10 13:59:44,627] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: fb8d12aba52a4fd3ae775c763d31f59b
[2023-08-10 13:59:44,627] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 13:59:44,627] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 13:59:44,847] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (219ms)
[2023-08-10 13:59:44,848] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 13:59:44 CST 2023)
[2023-08-10 13:59:44,872] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 13:59:44,879] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081005594462592198786(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 13:59:44,995] [fb8d12aba52a4fd3ae775c763d31f59b] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 13:59:45,067] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745811
[2023-08-10 13:59:45,068] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745811] commit status: Committed
[2023-08-10 13:59:45,070] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [http-nio-8010-exec-1] LogUtil[54] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 13:59:45"}
[2023-08-10 13:59:45,079] [fb8d12aba52a4fd3ae775c763d31f59b] [INFO] [Feh_Optimize_1] LogUtil[285] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"fb8d12aba52a4fd3ae775c763d31f59b","requestMethod":"POST","success":true,"type":1}
[2023-08-10 13:59:45,335] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745811,branchId=5566871554652745812,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 13:59:45,336] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745811 5566871554652745812 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 13:59:45,337] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 14:13:52,003] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 14:13:52,003] [logId] [WARN] [Thread-10] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 14:13:52,003] [logId] [WARN] [Thread-10] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 14:13:52,004] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 14:13:52,473] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 14:13:52,476] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 14:13:52,489] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 14:13:52,493] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 14:13:52,494] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x0ce8ed8e, L:/192.168.43.8:65108 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,495] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x0ce8ed8e, L:/192.168.43.8:65108 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,495] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x0ce8ed8e, L:/192.168.43.8:65108 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,496] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x0ce8ed8e, L:/192.168.43.8:65108 ! R:/192.168.43.128:8091]
[2023-08-10 14:13:52,496] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x0ce8ed8e, L:/192.168.43.8:65108 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:13:52,496] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x0ce8ed8e, L:/192.168.43.8:65108 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:14:04,361] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:14:04,368] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 14:14:04,393] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 14:14:05,247] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=1aedeba7-6dab-3260-85a8-9a18cee8467e
[2023-08-10 14:14:05,319] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:05,320] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:05,320] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:05,346] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:05,349] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:05,351] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:05,352] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/1389624061] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:05,352] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:05,354] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:05,357] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:14:05,358] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 14:14:05,416] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 14:14:05,422] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 14:14:05,430] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:14:05,430] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:14:05,865] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 14:14:06,016] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:14:06,041] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:14:06,042] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:14:06,270] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:14:06,697] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 14:14:07,851] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x9e688a86, L:/192.168.43.8:49896 - R:/192.168.43.128:8091]
[2023-08-10 14:14:07,864] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 84 ms, version:1.6.1,role:TMROLE,channel:[id: 0x9e688a86, L:/192.168.43.8:49896 - R:/192.168.43.128:8091]
[2023-08-10 14:14:07,866] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 14:14:07,939] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 14:14:07,940] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 14:14:07,949] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:14:07,949] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 14:14:07,950] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 14:14:08,456] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 14:14:08,468] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 14:14:08,469] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 14:14:08,469] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 14:14:08,685] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 14:14:08,685] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4280 ms
[2023-08-10 14:14:08,898] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 14:14:09,320] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 14:14:09,447] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:14:09,447] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 14:14:09,448] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 14:14:09,454] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xa717f837, L:/192.168.43.8:49911 - R:/192.168.43.128:8091]
[2023-08-10 14:14:09,454] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0xa717f837, L:/192.168.43.8:49911 - R:/192.168.43.128:8091]
[2023-08-10 14:14:10,580] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 14:14:10,588] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 14:14:10,641] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 14:14:10,641] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 14:14:10,747] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$53376d19] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 14:14:11,137] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 14:14:13,755] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 14:14:13,767] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 14:14:13,770] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:14:13,771] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:14:13,974] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 14:14:14,605] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 14:14:14,616] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 14:14:14,634] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 14:14:14,775] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 15.15 seconds (JVM running for 15.833)
[2023-08-10 14:14:14,785] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 14:14:14,788] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 14:14:14,789] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 14:14:49,608] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 14:14:49,609] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 14:14:49,620] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 11 ms
[2023-08-10 14:14:49,805] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[60] - requestId：28009aa0e32c419e8adc0156f2e47f8f
[2023-08-10 14:14:49,955] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8010-exec-1] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 14:14:49","token":"10001"}
[2023-08-10 14:14:49,983] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@175f8140
[2023-08-10 14:14:49,996] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745813]
[2023-08-10 14:14:50,204] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-10 14:14:50,205] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: 28009aa0e32c419e8adc0156f2e47f8f
[2023-08-10 14:14:50,207] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 14:14:50,207] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] requestId: 28009aa0e32c419e8adc0156f2e47f8f
[2023-08-10 14:14:50,207] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745813
[2023-08-10 14:14:50,208] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 14:14:50,825] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (616ms)
[2023-08-10 14:14:50,825] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 14:14:50,825] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 14:14:50,826] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 06:14:50 GMT
[2023-08-10 14:14:50,826] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 14:14:50,826] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 14:14:50,826] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 14:14:50,826] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":20,"time":"2023-08-10 06:14:50"}
[2023-08-10 14:14:50,826] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 14:14:50,834] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=20, time=Thu Aug 10 14:14:50 CST 2023)
[2023-08-10 14:14:50,836] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-10 14:14:50,836] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: 28009aa0e32c419e8adc0156f2e47f8f
[2023-08-10 14:14:50,836] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 14:14:50,837] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 14:14:51,067] [28009aa0e32c419e8adc0156f2e47f8f] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 500 (231ms)
[2023-08-10 14:14:51,097] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745813
[2023-08-10 14:14:51,098] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[189] - [192.168.43.128:8091:5566871554652745813] rollback status: Rollbacked
[2023-08-10 14:14:51,101] [28009aa0e32c419e8adc0156f2e47f8f] [INFO] [http-nio-8010-exec-1] RestExceptionHandler[45] - 异常接口:/order/add
[2023-08-10 14:14:51,103] [28009aa0e32c419e8adc0156f2e47f8f] [ERROR] [http-nio-8010-exec-1] RestExceptionHandler[46] - 系统异常:
feign.FeignException$InternalServerError: [500] during [GET] to [http://product-service/product/getUnitPrice/10001] [ProductFeignService#getUnitPrice(String)]: [{"code":500,"success":false,"message":"系统异常，工程师正在抢修ing","data":null,"time":"2023-08-10 06:14:51"}]
	at feign.FeignException.serverErrorStatus(FeignException.java:250)
	at feign.FeignException.errorStatus(FeignException.java:197)
	at feign.FeignException.errorStatus(FeignException.java:185)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.AsyncResponseHandler.handleResponse(AsyncResponseHandler.java:98)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:141)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:91)
	at com.alibaba.cloud.sentinel.feign.SentinelInvocationHandler.invoke(SentinelInvocationHandler.java:109)
	at com.sun.proxy.$Proxy152.getUnitPrice(Unknown Source)
	at com.sakura.order.service.impl.OrderServiceImpl.saveOrder(OrderServiceImpl.java:74)
	at com.sakura.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$38d4abe2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor$2.execute(GlobalTransactionalInterceptor.java:204)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:130)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:201)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:171)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$53376d19.saveOrder(<generated>)
	at com.sakura.order.controller.OrderController.addOrder(OrderController.java:46)
	at com.sakura.order.controller.OrderController$$FastClassBySpringCGLIB$$2a079ef2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.sakura.common.log.LogAspect.around(LogAspect.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.sakura.order.controller.OrderController$$EnhancerBySpringCGLIB$$281e2d3e.addOrder(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-08-10 14:18:48,592] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 14:18:48,592] [logId] [WARN] [Thread-10] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 14:18:48,593] [logId] [WARN] [Thread-10] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 14:18:48,594] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 14:18:49,041] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 14:18:49,044] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 14:18:49,054] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 14:18:49,056] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 14:18:49,058] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x9e688a86, L:/192.168.43.8:49896 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,058] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x9e688a86, L:/192.168.43.8:49896 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,058] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0xa717f837, L:/192.168.43.8:49911 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,058] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x9e688a86, L:/192.168.43.8:49896 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,058] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0xa717f837, L:/192.168.43.8:49911 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,058] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x9e688a86, L:/192.168.43.8:49896 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,059] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0xa717f837, L:/192.168.43.8:49911 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,059] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0xa717f837, L:/192.168.43.8:49911 ! R:/192.168.43.128:8091]
[2023-08-10 14:18:49,059] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa717f837, L:/192.168.43.8:49911 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:18:49,059] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9e688a86, L:/192.168.43.8:49896 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:18:49,059] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa717f837, L:/192.168.43.8:49911 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:18:49,059] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x9e688a86, L:/192.168.43.8:49896 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:19:02,271] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:19:02,280] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 14:19:02,317] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 14:19:03,506] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=0aca7f06-2659-3fb5-9e81-881f830be951
[2023-08-10 14:19:03,575] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:03,575] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:03,575] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:03,596] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:03,599] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:03,601] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:03,602] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/1271323139] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:03,602] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:03,604] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:03,606] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:19:03,607] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 14:19:03,660] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 14:19:03,666] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 14:19:03,675] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:19:03,675] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:19:04,255] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 14:19:04,397] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:19:04,425] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:19:04,425] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:19:04,677] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:19:05,421] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 14:19:06,642] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0xf4065fd7, L:/192.168.43.8:50386 - R:/192.168.43.128:8091]
[2023-08-10 14:19:06,652] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 72 ms, version:1.6.1,role:TMROLE,channel:[id: 0xf4065fd7, L:/192.168.43.8:50386 - R:/192.168.43.128:8091]
[2023-08-10 14:19:06,653] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 14:19:06,695] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 14:19:06,696] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 14:19:06,702] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:19:06,703] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 14:19:06,703] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 14:19:07,085] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 14:19:07,092] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 14:19:07,092] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 14:19:07,092] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 14:19:07,201] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 14:19:07,201] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4865 ms
[2023-08-10 14:19:07,335] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 14:19:07,662] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 14:19:07,798] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:19:07,799] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 14:19:07,799] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 14:19:07,805] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x40fefa68, L:/192.168.43.8:50404 - R:/192.168.43.128:8091]
[2023-08-10 14:19:07,806] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0x40fefa68, L:/192.168.43.8:50404 - R:/192.168.43.128:8091]
[2023-08-10 14:19:09,816] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 14:19:09,823] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 14:19:09,858] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 14:19:09,858] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 14:19:09,947] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$6449c753] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 14:19:10,263] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 14:19:12,921] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 14:19:12,929] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 14:19:12,932] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:19:12,932] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:19:13,128] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 14:19:14,357] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 14:19:14,366] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 14:19:14,379] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 14:19:14,500] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 19.289 seconds (JVM running for 19.965)
[2023-08-10 14:19:14,503] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 14:19:14,506] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 14:19:14,507] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 14:19:34,286] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 14:19:34,287] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 14:19:34,291] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 4 ms
[2023-08-10 14:19:34,569] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[60] - requestId：c36de9a0374a4423b271a1d988fe22e7
[2023-08-10 14:19:34,764] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 14:19:34","token":"10001"}
[2023-08-10 14:19:34,868] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@371c2d2f
[2023-08-10 14:19:34,897] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745814]
[2023-08-10 14:19:35,183] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-10 14:19:35,184] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: c36de9a0374a4423b271a1d988fe22e7
[2023-08-10 14:19:35,188] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 14:19:35,188] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] requestId: c36de9a0374a4423b271a1d988fe22e7
[2023-08-10 14:19:35,189] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745814
[2023-08-10 14:19:35,189] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 14:19:36,050] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (860ms)
[2023-08-10 14:19:36,050] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 14:19:36,050] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 14:19:36,050] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 06:19:36 GMT
[2023-08-10 14:19:36,051] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 14:19:36,051] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 14:19:36,051] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 14:19:36,051] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":19,"time":"2023-08-10 06:19:36"}
[2023-08-10 14:19:36,051] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 14:19:36,060] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[63] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=19, time=Thu Aug 10 14:19:36 CST 2023)
[2023-08-10 14:19:36,062] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-10 14:19:36,062] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: c36de9a0374a4423b271a1d988fe22e7
[2023-08-10 14:19:36,062] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 14:19:36,062] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 14:19:36,400] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 500 (337ms)
[2023-08-10 14:19:36,403] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] ProductFeignServiceFallback[20] - Product服务getUnitPrice服务降级了+++++++++
[2023-08-10 14:19:36,403] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[75] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=0, time=Thu Aug 10 14:19:36 CST 2023)
[2023-08-10 14:19:36,431] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 14:19:36,439] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081006193606011139535(String), 10001(String), 1(Integer), 0(Integer), 1(Integer)
[2023-08-10 14:19:36,571] [c36de9a0374a4423b271a1d988fe22e7] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 14:19:36,661] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745814
[2023-08-10 14:19:36,662] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745814] commit status: Committed
[2023-08-10 14:19:36,664] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [http-nio-8010-exec-1] LogUtil[47] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 14:19:36"}
[2023-08-10 14:19:36,673] [c36de9a0374a4423b271a1d988fe22e7] [INFO] [Feh_Optimize_1] LogUtil[278] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"c36de9a0374a4423b271a1d988fe22e7","requestMethod":"POST","success":true,"type":1}
[2023-08-10 14:19:37,344] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745814,branchId=5566871554652745815,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"autoCommit":false,"skipCheckLock":true}
[2023-08-10 14:19:37,345] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745814 5566871554652745815 jdbc:mysql://192.168.43.128:3306/order {"autoCommit":false,"skipCheckLock":true}
[2023-08-10 14:19:37,346] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 14:53:04,466] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 14:53:04,466] [logId] [WARN] [Thread-10] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 14:53:04,467] [logId] [WARN] [Thread-10] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 14:53:04,467] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 14:53:05,101] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 14:53:05,105] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 14:53:05,118] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 14:53:05,122] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 14:53:05,127] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x40fefa68, L:/192.168.43.8:50404 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,127] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x40fefa68, L:/192.168.43.8:50404 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,127] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x40fefa68, L:/192.168.43.8:50404 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,128] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x40fefa68, L:/192.168.43.8:50404 ! R:/192.168.43.128:8091]
[2023-08-10 14:53:05,128] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x40fefa68, L:/192.168.43.8:50404 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:53:05,128] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x40fefa68, L:/192.168.43.8:50404 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 14:53:18,497] [logId] [WARN] [main] NacosPropertySourceBuilder[87] - Ignore the empty nacos configuration and get it based on dataId[order-service.yaml] & group[DEFAULT_GROUP]
[2023-08-10 14:53:18,504] [logId] [INFO] [main] PropertySourceBootstrapConfiguration[109] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-order-service-dev.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service.yaml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-order-service,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-sakura.yaml,DEFAULT_GROUP'}]
[2023-08-10 14:53:18,526] [logId] [INFO] [main] OrderApplication[651] - The following 1 profile is active: "dev"
[2023-08-10 14:53:19,224] [logId] [INFO] [main] GenericScope[283] - BeanFactory id=0aca7f06-2659-3fb5-9e81-881f830be951
[2023-08-10 14:53:19,271] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataCoreAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:19,272] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:19,272] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:19,292] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:19,295] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:19,297] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:19,297] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$452/1271323139] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:19,299] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:19,301] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'springCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:19,302] [logId] [INFO] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker[376] - Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-08-10 14:53:19,304] [logId] [INFO] [main] SeataAutoConfiguration[63] - Automatically configure Seata
[2023-08-10 14:53:19,347] [logId] [INFO] [main] ConfigurationFactory[69] - load Configuration from :Spring Configuration
[2023-08-10 14:53:19,352] [logId] [INFO] [main] NacosConfiguration[233] - Nacos check auth with userName/password.
[2023-08-10 14:53:19,361] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:53:19,362] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:53:19,836] [logId] [INFO] [main] GlobalTransactionScanner[208] - Initializing Global Transaction Clients ... 
[2023-08-10 14:53:20,001] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:53:20,033] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:53:20,034] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:53:20,274] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:53:20,929] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:TMROLE,address:192.168.43.128:8091,msg:< RegisterTMRequest{applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 14:53:22,893] [logId] [INFO] [main] TmNettyRemotingClient[224] - register TM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x190b0f80, L:/192.168.43.8:52779 - R:/192.168.43.128:8091]
[2023-08-10 14:53:22,899] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 50 ms, version:1.6.1,role:TMROLE,channel:[id: 0x190b0f80, L:/192.168.43.8:52779 - R:/192.168.43.128:8091]
[2023-08-10 14:53:22,900] [logId] [INFO] [main] GlobalTransactionScanner[222] - Transaction Manager Client is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 14:53:22,921] [logId] [INFO] [main] AsyncWorker[73] - Async Commit Buffer Limit: 10000
[2023-08-10 14:53:22,922] [logId] [INFO] [main] ResourceManagerXA[59] - ResourceManagerXA init ...
[2023-08-10 14:53:22,928] [logId] [INFO] [main] NettyClientBootstrap[147] - NettyClientBootstrap has started
[2023-08-10 14:53:22,928] [logId] [INFO] [main] GlobalTransactionScanner[227] - Resource Manager is initialized. applicationId[order-service] txServiceGroup[order-tx-group]
[2023-08-10 14:53:22,929] [logId] [INFO] [main] GlobalTransactionScanner[231] - Global Transaction Clients are initialized. 
[2023-08-10 14:53:23,344] [logId] [INFO] [main] TomcatWebServer[108] - Tomcat initialized with port(s): 8010 (http)
[2023-08-10 14:53:23,354] [logId] [INFO] [main] Http11NioProtocol[173] - Initializing ProtocolHandler ["http-nio-8010"]
[2023-08-10 14:53:23,355] [logId] [INFO] [main] StandardService[173] - Starting service [Tomcat]
[2023-08-10 14:53:23,356] [logId] [INFO] [main] StandardEngine[173] - Starting Servlet engine: [Apache Tomcat/9.0.68]
[2023-08-10 14:53:23,504] [logId] [INFO] [main] [/][173] - Initializing Spring embedded WebApplicationContext
[2023-08-10 14:53:23,504] [logId] [INFO] [main] ServletWebServerApplicationContext[290] - Root WebApplicationContext: initialization completed in 4969 ms
[2023-08-10 14:53:23,635] [logId] [INFO] [main] DruidDataSourceAutoConfigure[56] - Init DruidDataSource
[2023-08-10 14:53:23,941] [logId] [INFO] [main] DruidDataSource[990] - {dataSource-1} inited
[2023-08-10 14:53:24,037] [logId] [INFO] [main] NettyClientChannelManager[108] - will connect to 192.168.43.128:8091
[2023-08-10 14:53:24,037] [logId] [INFO] [main] RmNettyRemotingClient[276] - RM will register :jdbc:mysql://192.168.43.128:3306/order
[2023-08-10 14:53:24,038] [logId] [INFO] [main] NettyPoolableFactory[56] - NettyPool create channel to transactionRole:RMROLE,address:192.168.43.128:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://192.168.43.128:3306/order', applicationId='order-service', transactionServiceGroup='order-tx-group'} >
[2023-08-10 14:53:24,043] [logId] [INFO] [main] RmNettyRemotingClient[177] - register RM success. client version:1.6.1, server version:1.6.1,channel:[id: 0x3915b9cf, L:/192.168.43.8:52790 - R:/192.168.43.128:8091]
[2023-08-10 14:53:24,043] [logId] [INFO] [main] NettyPoolableFactory[81] - register success, cost 4 ms, version:1.6.1,role:RMROLE,channel:[id: 0x3915b9cf, L:/192.168.43.8:52790 - R:/192.168.43.128:8091]
[2023-08-10 14:53:25,052] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 14:53:25,057] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'product-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 14:53:25,098] [logId] [INFO] [main] SeataFeignBuilderBeanPostProcessor[39] - change the retryer of the bean 'feignSentinelBuilder' to 'Retryer.NEVER_RETRY'
[2023-08-10 14:53:25,098] [logId] [INFO] [main] FeignClientFactoryBean[418] - For 'stock-service' URL not provided. Will try picking an instance via load-balancing.
[2023-08-10 14:53:25,185] [logId] [INFO] [main] GlobalTransactionScanner[305] - Bean[com.sakura.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$6449c753] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
[2023-08-10 14:53:25,543] [logId] [INFO] [main] PropertySourcedRequestMappingHandlerMapping[69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
[2023-08-10 14:53:29,146] [logId] [INFO] [main] Http11NioProtocol[173] - Starting ProtocolHandler ["http-nio-8010"]
[2023-08-10 14:53:29,156] [logId] [INFO] [main] TomcatWebServer[220] - Tomcat started on port(s): 8010 (http) with context path ''
[2023-08-10 14:53:29,159] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.impl.NacosClientAuthServiceImpl success.
[2023-08-10 14:53:29,160] [logId] [INFO] [main] ClientAuthPluginManager[56] - [ClientAuthPluginManager] Load ClientAuthService com.alibaba.nacos.client.auth.ram.RamClientAuthServiceImpl success.
[2023-08-10 14:53:29,376] [logId] [INFO] [main] NacosServiceRegistry[76] - nacos registry, DEFAULT_GROUP order-service 26.26.26.1:8010 register finished
[2023-08-10 14:53:30,148] [logId] [INFO] [main] DocumentationPluginsBootstrapper[160] - Context refreshed
[2023-08-10 14:53:30,158] [logId] [INFO] [main] DocumentationPluginsBootstrapper[163] - Found 1 custom documentation plugin(s)
[2023-08-10 14:53:30,177] [logId] [INFO] [main] ApiListingReferenceScanner[41] - Scanning for api listing references
[2023-08-10 14:53:30,309] [logId] [INFO] [main] OrderApplication[61] - Started OrderApplication in 16.402 seconds (JVM running for 17.166)
[2023-08-10 14:53:30,312] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service, group=DEFAULT_GROUP
[2023-08-10 14:53:30,320] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service-dev.yaml, group=DEFAULT_GROUP
[2023-08-10 14:53:30,320] [logId] [INFO] [main] NacosContextRefresher[129] - [Nacos Config] Listening config: dataId=order-service.yaml, group=DEFAULT_GROUP
[2023-08-10 14:53:50,412] [logId] [INFO] [http-nio-8010-exec-1] [/][173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-08-10 14:53:50,412] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[525] - Initializing Servlet 'dispatcherServlet'
[2023-08-10 14:53:50,413] [logId] [INFO] [http-nio-8010-exec-1] DispatcherServlet[547] - Completed initialization in 1 ms
[2023-08-10 14:53:50,518] [logId] [INFO] [http-nio-8010-exec-1] LogUtil[60] - requestId：951d6fc4fd3b4310a4738b0d7d7c189a
[2023-08-10 14:53:50,584] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8010-exec-1] LogUtil[69] - 请求参数：{"contentType":"application/json","ip":"26.26.26.1","param":{"num":1,"productNo":"10001"},"path":"/order/add","requestBody":true,"requestMethod":"POST","time":"2023-08-10 14:53:50","token":"10001"}
[2023-08-10 14:53:50,605] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8010-exec-1] TransactionManagerHolder[40] - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@e140b4a
[2023-08-10 14:53:50,612] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[118] - Begin new global transaction [192.168.43.128:8091:5566871554652745816]
[2023-08-10 14:53:50,693] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-10 14:53:50,693] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: 951d6fc4fd3b4310a4738b0d7d7c189a
[2023-08-10 14:53:50,694] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> GET http://stock-service/stock/getProductNum/10001 HTTP/1.1
[2023-08-10 14:53:50,694] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] requestId: 951d6fc4fd3b4310a4738b0d7d7c189a
[2023-08-10 14:53:50,694] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] TX_XID: 192.168.43.128:8091:5566871554652745816
[2023-08-10 14:53:50,694] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] ---> END HTTP (0-byte body)
[2023-08-10 14:53:51,112] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- HTTP/1.1 200 (417ms)
[2023-08-10 14:53:51,113] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] connection: keep-alive
[2023-08-10 14:53:51,113] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] content-type: application/json
[2023-08-10 14:53:51,113] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] date: Thu, 10 Aug 2023 06:53:51 GMT
[2023-08-10 14:53:51,113] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] keep-alive: timeout=60
[2023-08-10 14:53:51,113] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] transfer-encoding: chunked
[2023-08-10 14:53:51,113] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] 
[2023-08-10 14:53:51,114] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] {"code":200,"success":true,"message":"操作成功","data":18,"time":"2023-08-10 06:53:51"}
[2023-08-10 14:53:51,114] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] StockFeignService[72] - [StockFeignService#getProductNum] <--- END HTTP (91-byte body)
[2023-08-10 14:53:51,123] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[62] - 商品库存数量：ApiResult(code=200, success=true, message=操作成功, data=18, time=Thu Aug 10 14:53:51 CST 2023)
[2023-08-10 14:53:51,125] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[19] - 进入LogIdFeignInterceptor自定义拦截器: 
[2023-08-10 14:53:51,126] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8010-exec-1] LogIdFeignInterceptor[22] - 进入LogIdFeignInterceptor自定义拦截器: 951d6fc4fd3b4310a4738b0d7d7c189a
[2023-08-10 14:53:51,126] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8010-exec-1] CustomFeignInterceptor[17] - 进入feign自定义拦截器
[2023-08-10 14:53:51,126] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] ---> GET http://product-service/product/getUnitPrice/10001 HTTP/1.1
[2023-08-10 14:53:51,385] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] ProductFeignService[72] - [ProductFeignService#getUnitPrice] <--- HTTP/1.1 200 (259ms)
[2023-08-10 14:53:51,386] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8010-exec-1] OrderServiceImpl[74] - 商品单价：ApiResult(code=200, success=true, message=操作成功, data=100, time=Thu Aug 10 14:53:51 CST 2023)
[2023-08-10 14:53:51,433] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==>  Preparing: INSERT INTO t_order ( order_no, product_no, num, total_price, status ) VALUES ( ?, ?, ?, ?, ? ) 
[2023-08-10 14:53:51,441] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] insert[143] - ==> Parameters: 2023081006535112373418536(String), 10001(String), 1(Integer), 100(Integer), 1(Integer)
[2023-08-10 14:53:51,672] [951d6fc4fd3b4310a4738b0d7d7c189a] [DEBUG] [http-nio-8010-exec-1] insert[143] - <==    Updates: 1
[2023-08-10 14:53:51,679] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[199] - Suspending current transaction, xid = 192.168.43.128:8091:5566871554652745816
[2023-08-10 14:53:51,681] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8010-exec-1] DefaultGlobalTransaction[153] - [192.168.43.128:8091:5566871554652745816] commit status: Committed
[2023-08-10 14:53:51,683] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [http-nio-8010-exec-1] LogUtil[47] - 返回参数：{"code":200,"message":"操作成功","success":true,"time":"2023-08-10 14:53:51"}
[2023-08-10 14:53:51,693] [951d6fc4fd3b4310a4738b0d7d7c189a] [INFO] [Feh_Optimize_1] LogUtil[278] - 日志信息：{"className":"com.sakura.order.controller.OrderController","code":200,"contentType":"application/json","ip":"26.26.26.1","message":"操作成功","methodName":"addOrder","module":"order","name":"添加订单表","param":"{\"num\":1,\"productNo\":\"10001\"}","path":"/order/add","remark":"","requestBody":true,"requestId":"951d6fc4fd3b4310a4738b0d7d7c189a","requestMethod":"POST","success":true,"type":1}
[2023-08-10 14:53:52,343] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] RmBranchCommitProcessor[56] - rm client handle branch commit process:xid=192.168.43.128:8091:5566871554652745816,branchId=5566871554652745817,branchType=AT,resourceId=jdbc:mysql://192.168.43.128:3306/order,applicationData={"skipCheckLock":true}
[2023-08-10 14:53:52,344] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[96] - Branch committing: 192.168.43.128:8091:5566871554652745816 5566871554652745817 jdbc:mysql://192.168.43.128:3306/order {"skipCheckLock":true}
[2023-08-10 14:53:52,345] [logId] [INFO] [rpcDispatch_RMROLE_1_1_32] AbstractRMHandler[104] - Branch commit result: PhaseTwo_Committed
[2023-08-10 17:05:05,807] [logId] [WARN] [Thread-10] NotifyCenter[136] - [NotifyCenter] Start destroying Publisher
[2023-08-10 17:05:05,807] [logId] [WARN] [Thread-3] HttpClientBeanHolder[102] - [HttpClientBeanHolder] Start destroying common HttpClient
[2023-08-10 17:05:05,808] [logId] [WARN] [Thread-10] NotifyCenter[153] - [NotifyCenter] Destruction of the end
[2023-08-10 17:05:05,808] [logId] [WARN] [Thread-3] HttpClientBeanHolder[111] - [HttpClientBeanHolder] Destruction of the end
[2023-08-10 17:05:06,265] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[95] - De-registering from Nacos Server now...
[2023-08-10 17:05:06,268] [logId] [INFO] [SpringContextShutdownHook] NacosServiceRegistry[115] - De-registration finished.
[2023-08-10 17:05:06,277] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2043] - {dataSource-1} closing ...
[2023-08-10 17:05:06,279] [logId] [INFO] [SpringContextShutdownHook] DruidDataSource[2116] - {dataSource-1} closed
[2023-08-10 17:05:06,280] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x190b0f80, L:/192.168.43.8:52779 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,281] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x190b0f80, L:/192.168.43.8:52779 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,281] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[438] - channel inactive: [id: 0x3915b9cf, L:/192.168.43.8:52790 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,281] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x190b0f80, L:/192.168.43.8:52779 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,281] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyClientChannelManager[133] - return to pool, rm channel:[id: 0x3915b9cf, L:/192.168.43.8:52790 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,281] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x190b0f80, L:/192.168.43.8:52779 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,281] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[133] - channel valid false,channel:[id: 0x3915b9cf, L:/192.168.43.8:52790 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,281] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] NettyPoolableFactory[120] - will destroy channel:[id: 0x3915b9cf, L:/192.168.43.8:52790 ! R:/192.168.43.128:8091]
[2023-08-10 17:05:06,281] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x190b0f80, L:/192.168.43.8:52779 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 17:05:06,281] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3915b9cf, L:/192.168.43.8:52790 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 17:05:06,281] [logId] [INFO] [NettyClientSelector_TMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x190b0f80, L:/192.168.43.8:52779 ! R:/192.168.43.128:8091]) will closed
[2023-08-10 17:05:06,281] [logId] [INFO] [NettyClientSelector_RMROLE_1_1] AbstractNettyRemotingClient[488] - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3915b9cf, L:/192.168.43.8:52790 ! R:/192.168.43.128:8091]) will closed
